using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using iTextSharp.text;
using iTextSharp.text.pdf;
using System.Text.RegularExpressions;
using System.IO;
using System.Drawing.Drawing2D;
using dotnetCHARTING.Mapping;
using System.Web.UI.DataVisualization.Charting;
using dotnetCHARTING;
using iTextSharp.text;
using System.Data.SqlClient;

public partial class MobileAppReport1_Half_Report_By_RAPD1_ForCDF : System.Web.UI.Page
{
    dal clsdal = new dal();
    db_Xaction clsdb_Xaction = new db_Xaction();
    Document doc = new Document(PageSize.A4, 30, 30, 30, 30);
    int i;
    int BlackM;
    int BlackL;
    int BlueM;
    int BlueL;
    int RedM;
    int RedL;
    int GreenM;
    int GreenL;
    int Hole;
    int DiffB;
    int DiffR;
    int DiffBl;
    int DiffG;
    bool D, s, C, invalid;
    bool T1, T2, T3, TD1, TD2, TD3;
    bool Ts;
    int c_id;
    string candidate_name, c_name, age, careerstage, dateof_reg;
    string strdata;
    string strdata1;
    string strdata2, strsql, f_name, l_name, strcmd, m_name, board, careerstream;
    string[] dis;
    string StrChartPath, StrChartPath1, StrChartPath2, StrChartPath3, StrChartPath4, StrChartPath5, StrChartPath6, StrChartPath7;

    protected void Page_Load(object sender, EventArgs e)
    {
      
        string connStr = ConfigurationManager.ConnectionStrings["career_ConnectionStringNew"].ConnectionString;
        load_rpt();
        DownloadFile("Report_" + c_name.ToString().Trim().Replace(' ', '_') + ".pdf", true);
    }
    private void load_rpt()
    {
        float margin = 0;
        //c_id = 15586; // ONLINE 3 Categories 
        //c_id = 15878;
        //c_id = 15877;
        //c_id = 15866;
        //c_id = 5983;
        //c_id = Convert.ToInt32(Request.QueryString["c_id"].ToString());
        c_id = Convert.ToInt32(Session["c_id"]);
        //  c_id = Convert.ToInt32(Request.QueryString["StudId"]);
        strsql = " select fname,lname,(DATEPART(yyyy,regDateTime)-DATEPART(yyyy,dob)) as age,standard,regDateTime from tbl_candidate_master where Id=" + c_id;
        DataSet dss = clsdal.ExecDataSet(strsql);
        f_name = dss.Tables[0].Rows[0][0].ToString().ToUpper();
        l_name = dss.Tables[0].Rows[0][1].ToString().ToUpper();
        //m_name = dss.Tables[0].Rows[0][5].ToString().ToUpper();
        age = dss.Tables[0].Rows[0][2].ToString();
        careerstage = dss.Tables[0].Rows[0][3].ToString();
        dateof_reg = dss.Tables[0].Rows[0][4].ToString();
        //board = dss.Tables[0].Rows[0][7].ToString();
       // careerstream = dss.Tables[0].Rows[0][6].ToString();
        dateof_reg = dateof_reg.Substring(0, dateof_reg.IndexOf(" "));
        c_name = f_name + "_" + l_name.ToString().Trim();
        strcmd = "select * from tblPersonalityReportConditions where disc_report_type = 'Browser_Report' order by disc_condition_id";
        DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
        if (ds4.Tables[0].Rows.Count > 0)
        {
            #region get_PD_report_condition
           // strcmd = "select CreationDt from Cand_PD_Details where c_id = " + c_id + " and q_id = 24";
            strcmd = "select *  from tblPersonalityCandAnswers1 where c_id = " + c_id + " and q_id = 24";
            DataSet ds5 = clsdb_Xaction.ExecDataSet(strcmd);
            if (ds5.Tables[0].Rows.Count > 0)
            {

                #region geting_last_test_status(complete_or_not)
                strcmd = "SELECT ability_code,rating, p_rating, testid FROM (select distinct c_id,testid,ability_code,p_rating,rating from tblAbilityCandFactors where c_id = '" + c_id + "') as x where c_id = '" + c_id + "'order by testid";
                //strcmd = "SELECT ability_code, rating, P_rating,test_id FROM tbl_candidate_test_results where c_id = '" + c_id + "' order by test_id";
                DataSet ds = clsdb_Xaction.ExecDataSet(strcmd);

                if (ds.Tables[0].Rows.Count > 0)
                {
                    try
                    {
                        iTextSharp.text.Image rveryhi = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/rveryhih.png"));
                        rveryhi.ScaleToFit(70f, 8f);
                        iTextSharp.text.Image rhigh = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/rhighh.png"));
                        rhigh.ScaleToFit(70f, 8f);
                        iTextSharp.text.Image rmodrate = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/rmodrateh.png"));
                        rmodrate.ScaleToFit(70f, 8f);
                        iTextSharp.text.Image rlow = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/rlowh.png"));
                        rlow.ScaleToFit(70f, 8f);
                        iTextSharp.text.Image rverylow = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/rverylowh.png"));
                        rverylow.ScaleToFit(70f, 8f);

                        int[] width = { 6, 1, 4 };

                        Cell acell33 = new Cell();
                        // acell3.Add(png1);
                        acell33.Add(new Paragraph("\n"));
                        acell33.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //acell2.BorderColor = new Color(192, 192, 192);
                        // acell33.BackgroundColor = new Color(70, 114, 217);
                        acell33.Border = 0;

                        iTextSharp.text.Image endblock = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/endblockh.png"));
                        endblock.ScaleToFit(5f, 5f);
                        Chunk imageChunk1 = new Chunk(endblock, 0, 0);
                        Phrase limage = new Phrase();
                        limage.Add(imageChunk1);

                        PdfWriter.GetInstance(doc, new FileStream(Server.MapPath(".") + "/Reports_pdf/Report_" + c_name.ToString().Trim().Replace(' ', '_') + ".pdf", FileMode.Create));
                        doc.Open();

                        //PdfPen pen = new PdfPen(Color.DarkOliveGreen, 0.7f);
                        //PdfBrush brush = new PdfSolidBrush(Color.DeepSkyBlue);

                        candidate_name = c_name;
                        StrChartPath = Server.MapPath((".") + "/Reports_graph/" + candidate_name + "ab1.png");
                        StrChartPath1 = Server.MapPath((".") + "/Reports_graph/" + candidate_name + "ab2.png");
                        StrChartPath2 = Server.MapPath((".") + "/Reports_graph/" + candidate_name + "ab3.png");
                        StrChartPath3 = Server.MapPath((".") + "/Reports_graph/" + candidate_name + "ab4.png");
                        StrChartPath4 = Server.MapPath((".") + "/Reports_graph/" + candidate_name + "ab5.png");
                        StrChartPath5 = Server.MapPath((".") + "/Reports_graph/" + candidate_name + "ab6.png");
                        StrChartPath6 = Server.MapPath((".") + "/Reports_graph/" + candidate_name + "ab7.png");
                        StrChartPath7 = Server.MapPath((".") + "/Reports_graph/" + candidate_name + "ab8.png");
                        bool I;
                        //lblname.Text = candidate_name;
                        int id = clsdb_Xaction.get_values(c_id);
                        clsdb_Xaction.set_values();
                        BlueM = clsdb_Xaction.DM;
                        BlueL = clsdb_Xaction.DL;
                        RedM = clsdb_Xaction.IM;
                        RedL = clsdb_Xaction.IL;
                        BlackM = clsdb_Xaction.SM;
                        BlackL = clsdb_Xaction.SL;
                        GreenM = clsdb_Xaction.CM;
                        GreenL = clsdb_Xaction.CL;
                        DiffB = clsdb_Xaction.DD;
                        DiffR = clsdb_Xaction.ID;
                        DiffBl = clsdb_Xaction.SD;
                        DiffG = clsdb_Xaction.CD;

                        strcmd = "select * from tblPersonalityReportConditions where disc_report_type = 'Browser_Report' order by disc_condition_id";
                        ds4 = clsdb_Xaction.ExecDataSet(strcmd);

                        strcmd = "select rating,P_rating,factor_no from tblKYCandFactors1 where c_id = '" + c_id + "'order by P_rating desc";
                        //strcmd = "select * from tbl_KY_cand_factors where c_id = '" + c_id + "'order by factor_no";
                        DataSet ds1 = clsdb_Xaction.ExecDataSet(strcmd);

                        strcmd = "select rating,P_rating,factor_no from tblKYCandFactors1 where c_id = '" + c_id + "'order by factor_no";
                        //strcmd = "select * from tbl_KY_cand_factors where c_id = '" + c_id + "'order by factor_no";
                        DataSet dsss1 = clsdb_Xaction.ExecDataSet(strcmd);


                        //strcmd = "SELECT P_rating,rating FROM tbl_II_cand_factors where c_id = '" + c_id + "'order by factor_no";
                        strcmd = "SELECT distinct P_rating,rating,tblInterestFactors.name,tblInterestCandFactors.factor_no FROM tblInterestCandFactors,tblInterestFactors where tblInterestCandFactors.factor_no=tblInterestFactors.factor_no and c_id = '" + c_id + "' order by P_rating desc";
                        DataSet ds2 = clsdb_Xaction.ExecDataSet(strcmd);

                        strcmd = "SELECT distinct P_rating,rating,tblInterestFactors.name,tblInterestCandFactors.factor_no FROM tblInterestCandFactors,tblInterestFactors where tblInterestCandFactors.factor_no=tblInterestFactors.factor_no and c_id = '" + c_id + "' order by tblInterestCandFactors.factor_no";
                        DataSet dsss2 = clsdb_Xaction.ExecDataSet(strcmd);

                        doc.SetPageSize(new iTextSharp.text.Rectangle(PageSize.A4.Width, PageSize.A4.Height));
                        // doc.SetMargins(10f, margin, 0f, 0f);

                        doc.NewPage();

                        HeaderFooter footer1 = new HeaderFooter(new Phrase("   " + "     " + "     " + "PAGE: ", FontFactory.GetFont(FontFactory.HELVETICA, 8)), true);
                        footer1.Alignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        footer1.BorderColor = new Color(255, 255, 255);
                        footer1.BorderWidth = 0f;

                        doc.Footer = footer1;


                        iTextSharp.text.Image dheyalogo = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/LOGO-NEW.png"));
                        //jpeg.ScalePercent(35f);
                        dheyalogo.ScaleToFit(50f, 50f);
                        dheyalogo.SetAbsolutePosition(30, 25);
                        // jpeg.SpacingAfter = -50f;
                        doc.Add(dheyalogo);


                        iTextSharp.text.Image jpeg = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/banner1.png"));
                        //jpeg.ScalePercent(35f);
                        jpeg.ScaleToFit(600f, 550f);
                        jpeg.SetAbsolutePosition(0, 500);
                        // jpeg.SpacingAfter = -50f;
                        doc.Add(jpeg);

                        iTextSharp.text.Image jpeg2 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/banner2.png"));
                        //jpeg.ScalePercent(35f);
                        jpeg2.ScaleToFit(760f, 570f);
                        jpeg2.SetAbsolutePosition(0, 200);
                        // jpeg.SpacingAfter = -50f;
                        doc.Add(jpeg2);



                        iTextSharp.text.Table adddddd = new iTextSharp.text.Table(1);
                        adddddd.Alignment = 0;
                        adddddd.DefaultCellBorder = 0;
                        adddddd.Border = 0;

                        Cell adddddd1 = new Cell();
                        adddddd1.Add(new Paragraph("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 18, iTextSharp.text.Font.COURIER)));
                        adddddd.AddCell(adddddd1);


                        Cell PDTopCell3 = new Cell();
                        PDTopCell3.Add(new Paragraph("Name :-" + f_name + " " + m_name + " " + l_name, FontFactory.GetFont(FontFactory.HELVETICA, 15, iTextSharp.text.Font.COURIER)));
                        adddddd.AddCell(PDTopCell3);

                        doc.Add(adddddd);



                        iTextSharp.text.Table PDTopTable = new iTextSharp.text.Table(1);
                        PDTopTable.DefaultVerticalAlignment = 0;
                        PDTopTable.Alignment = 0;
                        // PDTopTable.Top = 10;
                        PDTopTable.Cellspacing = 0f;
                        PDTopTable.DefaultCellBorder = 0;
                        PDTopTable.Border = 0;
                        PDTopTable.Width = 130;
                        PDTopTable.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        //PDTopTable.AddCell("\n\n\n");




                        iTextSharp.text.Table PDTopTable1 = new iTextSharp.text.Table(2);
                        PDTopTable1.Alignment = 0;
                        PDTopTable1.Width = 110;
                        PDTopTable1.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        PDTopTable1.DefaultCellBorder = 0;
                        PDTopTable1.Border = 0;



                        Cell PDTopCell5 = new Cell();
                        PDTopCell5.Add(new Paragraph("Education Stage:-" + careerstage, FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER)));
                        PDTopTable1.AddCell(PDTopCell5);
                        //Cell PDTopCell4 = new Cell();
                        //PDTopCell4.Add(new Paragraph("Education Board :-" + board, FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER)));
                        //PDTopTable1.AddCell(PDTopCell4);
                        //Cell PDTopCell2 = new Cell();
                        //PDTopCell2.Add(new Paragraph("Career Stream :-" + careerstream, FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER)));
                        //PDTopTable1.AddCell(PDTopCell2);
                        Cell PDTopCell7 = new Cell();
                        PDTopCell7.Add(new Paragraph("Registration Date: " + dateof_reg, FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER)));
                        PDTopTable1.AddCell(PDTopCell7);
                        Cell PDTopCell9 = new Cell();
                        PDTopCell9.Add(new Paragraph("\tAge: " + age + " Years", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER)));
                        PDTopTable1.AddCell(PDTopCell9);

                        doc.Add(PDTopTable1);


                        PDTopTable.AddCell("\n");
                        doc.Add(PDTopTable);


                        iTextSharp.text.Image jpeg1 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/banner.jpg"));
                        //jpeg1.ScalePercent(86f);
                        jpeg1.ScaleToFit(600f, 550f);
                        jpeg1.SetAbsolutePosition(0, 0);
                        doc.Add(jpeg1);

                        //doc.Add(dheyalogo);
                        /////////////////////////////////////// second page ////////////////////////
                        doc.NewPage();

                        iTextSharp.text.Image jpeg3 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/secondpage1.png"));
                        //jpeg.ScalePercent(35f);
                        jpeg3.ScaleToFit(600f, 550f);
                        jpeg3.SetAbsolutePosition(0, 530);
                        // jpeg.SpacingAfter = -50f;
                        doc.Add(jpeg3);

                        iTextSharp.text.Image jpeg4 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/secondpage2.png"));
                        //jpeg.ScalePercent(35f);
                        jpeg4.ScaleToFit(500f, 500f);
                        jpeg4.SetAbsolutePosition(50, 280);
                        // jpeg.SpacingAfter = -50f;
                        doc.Add(jpeg4);



                        iTextSharp.text.Table addddd = new iTextSharp.text.Table(1);
                        addddd.Alignment = 0;
                        addddd.DefaultCellBorder = 0;
                        addddd.Border = 0;

                        Cell addddd1 = new Cell();
                        addddd1.Add(new Paragraph("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD)));
                        addddd.AddCell(addddd1);
                        doc.Add(addddd);


                        //////////Contents
                        iTextSharp.text.Table PDTopTable3 = new iTextSharp.text.Table(2);
                        PDTopTable3.Alignment = 0;
                        PDTopTable3.Width = 50;
                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        PDTopTable3.DefaultCellBorder = 0;
                        PDTopTable3.Border = 0;

                        Cell PDTopCell10 = new Cell();
                        iTextSharp.text.Image jpeg5 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/secondpage3.png"));
                        jpeg5.ScaleToFit(13f, 240f);
                        PDTopCell10.Add(jpeg5);
                        PDTopCell10.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        PDTopTable3.AddCell(PDTopCell10);

                        ///////

                        iTextSharp.text.Table containt = new iTextSharp.text.Table(2);
                        containt.Alignment = 0;
                        containt.Width = 300;
                        containt.DefaultCellBorder = 0;
                        containt.Border = 0;

                        Cell content_head = new Cell();
                        content_head.Add(new Paragraph("  Contents", FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD)));

                        containt.AddCell(content_head);

                        Cell content_head1 = new Cell();
                        content_head1.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER)));
                        containt.AddCell(content_head1);

                        Cell content_name1 = new Cell();
                        content_name1.Add(new Paragraph("\n  1 Introduction", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER)));
                        containt.AddCell(content_name1);

                        Cell content_name2 = new Cell();
                        content_name2.Add(new Paragraph("\n  5 Your Competencies", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER)));
                        containt.AddCell(content_name2);

                        Cell content_name3 = new Cell();
                        content_name3.Add(new Paragraph("\n  2 Your Personality Profile", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER)));
                        containt.AddCell(content_name3);

                        Cell content_name4 = new Cell();
                        content_name4.Add(new Paragraph("\n  6 Your Career Interests", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER)));
                        containt.AddCell(content_name4);

                        Cell content_name5 = new Cell();
                        content_name5.Add(new Paragraph("\n  3 Your Significant Traits", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER)));
                        containt.AddCell(content_name5);

                        Cell content_name6 = new Cell();
                        content_name6.Add(new Paragraph("\n  7 Your Strengths Summary\n", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER)));
                        containt.AddCell(content_name6);

                        Cell content_name7 = new Cell();
                        content_name7.Add(new Paragraph("\n  4 Your Mental Abilities", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER)));
                        containt.AddCell(content_name7);

                        Cell content_name8 = new Cell();
                        content_name8.Add(new Paragraph("\n  8 Suggested Careers", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER)));
                        containt.AddCell(content_name8);

                        ///////


                        Cell PDTopCell11 = new Cell();
                        PDTopCell11.Add(containt);
                        PDTopTable3.AddCell(PDTopCell11);

                        doc.Add(PDTopTable3);


                        ///////////////////////////////////third page/////////////////////////////////////
                        doc.Add(dheyalogo);
                        doc.NewPage();
                        iTextSharp.text.Image jpeg6 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/thirdpage1.jpg"));
                        //jpeg.ScalePercent(35f);
                        jpeg6.ScaleToFit(600f, 550f);
                        jpeg6.SetAbsolutePosition(0, 550);
                        // jpeg.SpacingAfter = -50f;
                        doc.Add(jpeg6);

                        iTextSharp.text.Image jpeg7 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/thirdpage2.png"));
                        //jpeg.ScalePercent(35f);
                        jpeg7.ScaleToFit(600f, 550f);
                        jpeg7.SetAbsolutePosition(0, 400);
                        // jpeg.SpacingAfter = -50f;
                        doc.Add(jpeg7);


                        iTextSharp.text.Table addd = new iTextSharp.text.Table(2);
                        addd.Alignment = 0;
                        addd.Width = 100;
                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        addd.DefaultCellBorder = 0;
                        addd.Border = 0;


                        Cell addd1 = new Cell();
                        addd1.Add(new Paragraph("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, Color.LIGHT_GRAY)));
                        addd.AddCell(addd1);
                        doc.Add(addd);


                        iTextSharp.text.Table PDTopTable4 = new iTextSharp.text.Table(2);
                        PDTopTable4.Alignment = 0;
                        PDTopTable4.Width = 100;
                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        PDTopTable4.DefaultCellBorder = 0;
                        PDTopTable4.Border = 0;

                        Cell PDTopCell12 = new Cell();
                        iTextSharp.text.Image jpeg8 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/imagg.png"));
                        jpeg8.ScaleToFit(20f, 332f);
                        PDTopCell12.Add(jpeg8);
                        PDTopCell12.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
                        PDTopTable4.AddCell(PDTopCell12);

                       
                        Cell PDTopCell13 = new Cell();
                        PDTopCell13.Add(new Paragraph("Dheya: a Sanskrit word meaning “The Goal” is a career development organization focused on career success for students. Dheya has scientifically developed psychometric assessments, career guidance and career development processes & tools.", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        PDTopCell13.Add(new Paragraph("\nDheya was founded in 2005, launched in July 2008, and ever since has been serving leading schools and institutes in India. Today, Dheya boasts of an unmatched research on psychometric assessment tools, career streams, education streams, educational information and career decision tools. Dheya has developed processes that are proven and impact-full.", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        PDTopCell13.Add(new Paragraph("\n  www.dheya.com", FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD)));
                        PDTopCell13.Width = 80;
                        PDTopCell13.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        PDTopTable4.AddCell(PDTopCell13);

                        int[] tabwidth = { 5, 10 };
                        PDTopTable4.SetWidths(tabwidth);


                        doc.Add(PDTopTable4);





                        /////////////////////////////////// forth page

                        # region fourpage
                        //doc.NewPage();
                        //iTextSharp.text.Image jpeg9 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/fourthpage1.png"));
                        ////jpeg.ScalePercent(35f);
                        //jpeg9.ScaleToFit(600f, 550f);
                        //jpeg9.SetAbsolutePosition(0, 630);
                        //// jpeg.SpacingAfter = -50f;
                        //doc.Add(jpeg9);

                        //iTextSharp.text.Image jpeg10 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/fourthpage2.jpg"));
                        ////jpeg.ScalePercent(35f);
                        //jpeg10.ScaleToFit(550f, 500f);
                        //jpeg10.SetAbsolutePosition(15, 230);
                        //// jpeg.SpacingAfter = -50f;
                        //doc.Add(jpeg10);

                        //iTextSharp.text.Table add = new iTextSharp.text.Table(4);
                        //add.Alignment = 0;
                        //add.Width = 100;
                        //// PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        //add.DefaultCellBorder = 0;
                        //add.Border = 0;

                        //Cell add1 = new Cell();
                        //add1.Add(new Paragraph("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", FontFactory.GetFont("Arial", 10, Font.BOLD, new Color(135, 142, 198))));
                        //add.AddCell(add1);
                        //doc.Add(add);


                        //iTextSharp.text.Table PDTopTable5 = new iTextSharp.text.Table(4);
                        //PDTopTable5.Alignment = 0;
                        //PDTopTable5.Width = 100;
                        //// PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        //PDTopTable5.DefaultCellBorder = 0;
                        //PDTopTable5.Border = 0;

                        //Cell PDTopCell14 = new Cell();
                        //iTextSharp.text.Image jpeg11 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/fourthpage3.png"));
                        //jpeg11.ScaleToFit(200f, 160f);
                        //PDTopCell14.Add(jpeg11);
                        //PDTopCell14.HorizontalAlignment = iTextSharp .text.Element.ALIGN_RIGHT;
                        //PDTopTable5.AddCell(PDTopCell14);



                        //Cell PDTopCell15 = new Cell();
                        //PDTopCell15.Add(new Paragraph(" Strengths Based Approach", FontFactory.GetFont("Arial", 10, Font.BOLD, new Color(135, 142, 198))));
                        //PDTopCell15.Add(new Paragraph(" Every person possesses dormant and latent Individuality in the form of strengths. But only a few allow it to express itself and those who do, are known for their SUCCESS and ACHIEVEMENTS.", FontFactory.GetFont("Arial", 9, iTextSharp.text.Font.COURIER)));
                        //PDTopCell15.Add(new Paragraph("\nThere are seven major components to build career success. Once these factors get aligned there is a strong motivational effect and clarity of purpose for each activity the", FontFactory.GetFont("Arial", 9, iTextSharp.text.Font.COURIER)));
                        //PDTopCell15.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                        //PDTopCell15.Width = 80;
                        //PDTopCell15.BorderWidthRight = 10f;
                        ////PDTopCell15.UseBorderPadding = true;
                        //PDTopCell15.BorderColorRight = new Color(255, 255, 255);
                        //PDTopTable5.AddCell(PDTopCell15);

                        //Cell middelspace = new Cell();
                        //middelspace.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));

                        //PDTopTable5.AddCell(middelspace);


                        //Cell PDTopCell16 = new Cell();
                        //PDTopCell16.Add(new Paragraph("  individual does.", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                        //PDTopCell16.Add(new Paragraph("\n  Helping individuals to know their strengths and building awareness of possibilities of using these strengths changes lives. We know it. More than 13000 students and professionals have undergone this process. Planning a career around strengths gives a fulfilling and positive effect to life itself.", FontFactory.GetFont(FontFactory.HELVETICA, 9, iTextSharp.text.Font.COURIER)));
                        //PDTopCell16.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                        //PDTopCell16.Width = 80;


                        //PDTopTable5.AddCell(PDTopCell16);
                        //int[] tblwidth = { 10,10, 1,10 };
                        //PDTopTable5.SetWidths(tblwidth);


                        //doc.Add(PDTopTable5);
                        # endregion
                        doc.Add(dheyalogo);
                        ////////////////////////////// page five
                        doc.NewPage();

                        iTextSharp.text.Table PDTopTable6 = new iTextSharp.text.Table(1);
                        PDTopTable6.Alignment = 0;
                        PDTopTable6.Width = 105;
                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        PDTopTable6.DefaultCellBorder = 0;
                        PDTopTable6.Border = 0;
                        Cell PDTopCell17 = new Cell();
                        PDTopCell17.Add(new Paragraph("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.BOLD)));
                        PDTopTable6.AddCell(PDTopCell17);
                        doc.Add(PDTopTable6);

                        iTextSharp.text.Image jpeg12 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/fivepage.png"));
                        jpeg12.ScaleToFit(600f, 600f);
                        jpeg12.SetAbsolutePosition(0, 530);
                        doc.Add(jpeg12);




                        ///////////////////////////code for data 


                        profile_conditions_pdf();
                        profile_conditions_pdf_2();
                        profile_conditions_pdf_3();
                        profile_conditions_pdf_4();



                        ////////// end code for data




                        /////////////////88888888888888888888888888888888888888888888888888888


                        //////////////////////////new table page
                        doc.Add(dheyalogo);
                        doc.NewPage();

                        //Ability Chart
                        ab1();


                        iTextSharp.text.Table PDTopTable9 = new iTextSharp.text.Table(3);
                        PDTopTable9.Alignment = 0;
                        PDTopTable9.Width = 100;
                        // PDTopTable9.Padding = 20f;
                        int[] yy = { 10, 1, 10 };
                        PDTopTable9.SetWidths(yy);
                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        PDTopTable9.DefaultCellBorder = 0;
                        PDTopTable9.Border = 0;


                        Cell PDTopCell23 = new Cell();
                        //PDTopCell23.Add(new Paragraph("SUMMARY OF YOUR ABILITY STRENGTHS", FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.BOLD)));
                        //PDTopCell23.Add(new Paragraph("In the assessments completed, some scores may be relatively high and others relatively low. This means your strengths, lie in characteristics and mental abilities that display higher scores. For example if you have a relatively high score on “Numerical ability”, which in this context of the assessments high would mean you are more skilled in using numbers while performing a task. ", FontFactory.GetFont(FontFactory.HELVETICA, 10, iTextSharp.text.Font.COURIER)));
                        //PDTopCell23.Width = 80;
                        //PDTopCell23.HorizontalAlignment=iTextSharp .text.Element.ALIGN_JUSTIFIED;
                        //PDTopTable9.DefaultVerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //PDTopTable9.AddCell(PDTopCell23);


                        Paragraph pop = new Paragraph();
                        pop.SetLeading(25.0f, 25.0f);

                        Phrase ph = new Phrase(18, new Chunk("SUMMARY OF YOUR ABILITY STRENGTHS ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase ph1 = new Phrase(18, new Chunk("In the assessments completed, some scores may be relatively high and others relatively low, which means that your strengths lie in characteristics that define your intelligence. For example if you have a relatively high score on “Numerical ability”, which in this context of the assessment is high would mean you are more skilled in using numbers while performing a task.", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pop.Add(ph);
                        pop.Add(ph1);
                        pop.Add(limage);
                        PDTopCell23.Add(pop);


                        PDTopCell23.Width = 80;
                        PDTopCell23.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        PDTopTable9.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_TOP;
                        PDTopTable9.AddCell(PDTopCell23);

                        PDTopTable9.AddCell(acell33);



                        ////////////////////add ability table 


                        iTextSharp.text.Table PDTopTable10 = new iTextSharp.text.Table(4);
                        PDTopTable10.Alignment = 0;
                        PDTopTable10.Width = 100;

                        //PDTopTable10.DefaultLayout.Border = 1;
                        // PDTopTable10.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        //PDTopTable10.DefaultCellBorder = 0;
                        //PDTopTable10.Border = 0;

                        ////////////////////// Add table heading
                        Cell n = new Cell();
                        n.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        n.Width = 80;
                        n.BackgroundColor = new Color(225, 225, 0);
                        n.BorderWidth = 2f;
                        n.BorderColor = new Color(255, 255, 255);
                        n.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        n.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        // PDTopTable10.AddCell(n);

                        Cell PDTopCell29 = new Cell();
                        PDTopCell29.Add(new Paragraph("Ability", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        PDTopCell29.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        PDTopCell29.Width = 80;
                        //PDTopCell29.BackgroundColor = new Color(225, 225, 0);
                        PDTopCell29.BackgroundColor = new Color(231, 206, 37);
                        PDTopCell29.BorderWidth = 2f;
                        PDTopCell29.BorderColor = new Color(255, 255, 255);
                        PDTopCell29.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell29.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopTable10.AddCell(PDTopCell29);

                        Cell PDTopCell30 = new Cell();
                        PDTopCell30.Add(new Paragraph("Rating", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        PDTopCell30.Width = 80;
                        PDTopCell30.BackgroundColor = new Color(231, 206, 37);
                        PDTopCell30.BorderWidth = 2f;
                        PDTopCell30.BorderColor = new Color(255, 255, 255);
                        PDTopCell30.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell30.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopTable10.AddCell(PDTopCell30);

                        Cell PDTopCell31 = new Cell();
                        PDTopCell31.Add(new Paragraph("Percentile", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        PDTopCell31.Width = 80;
                        PDTopCell31.BackgroundColor = new Color(231, 206, 37);
                        PDTopCell31.BorderWidth = 2f;
                        PDTopCell31.BorderColor = new Color(255, 255, 255);
                        PDTopCell31.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell31.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopTable10.AddCell(PDTopCell31);

                        Cell PDTopCell32 = new Cell();
                        PDTopCell32.Add(new Paragraph("Rating", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        PDTopCell32.Width = 80;
                        PDTopCell32.BackgroundColor = new Color(231, 206, 37);
                        PDTopCell32.BorderWidth = 2f;
                        PDTopCell32.BorderColor = new Color(255, 255, 255);
                        PDTopCell32.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell32.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                        PDTopTable10.AddCell(PDTopCell32);

                        ////////////////////// end table heading


                        /////////////////////// get marks of candidate 

                        //strcmd = "SELECT ability_code,rating, P_rating, test_id FROM (select distinct c_id,test_id,ability_code,P_rating,rating from tbl_candidate_test_results where c_id = '" + c_id + "') as x where c_id = '" + c_id + "'order by test_id";
                        strcmd = "SELECT distinct ability_code,rating, P_rating, testid FROM (select distinct c_id,testid,ability_code,P_rating,rating from tblAbilityCandFactors where c_id = '" + c_id + "') as x where c_id = '" + c_id + "'order by P_rating desc";
                        //strcmd = "SELECT ability_code, rating, P_rating,test_id FROM tbl_candidate_test_results where c_id = '" + c_id + "' order by test_id";
                        ds = clsdb_Xaction.ExecDataSet(strcmd);

                        String strcmmmmmmd = "SELECT distinct ability_code,rating, P_rating, testid FROM (select distinct c_id,testid,ability_code,P_rating,rating from tblAbilityCandFactors where c_id = '" + c_id + "') as x where c_id = '" + c_id + "'order by testid";
                        //strcmd = "SELECT ability_code, rating, P_rating,test_id FROM tbl_candidate_test_results where c_id = '" + c_id + "' order by test_id";
                        DataSet dssssssss = clsdb_Xaction.ExecDataSet(strcmmmmmmd);


                        int count;
                        count = ds.Tables[0].Rows.Count;


                        ////////////////////// end get marks of candidate



                        /////// table first row
                        Cell n1 = new Cell();
                        n1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        n1.Width = 80;

                        n1.BackgroundColor = new Color(225, 225, 0);
                        n1.BorderWidth = 2f;
                        n1.BorderColor = new Color(255, 255, 255);
                        n1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        n1.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        // PDTopTable10.AddCell(n1);

                        Cell PDTopCell33 = new Cell();
                        String shortname = "";

                        switch (ds.Tables[0].Rows[0][0].ToString())
                        //switch (ds.Tables[0].Rows[6][1].ToString())
                        //{
                        //    case "Numerical Ability":

                        //        shortname = "Numerical\n";

                        //        break;
                        //    case "Observation and Spatial Transformation":

                        //        shortname = "Observation";

                        //        break;
                        //    case "Spatial Awareness":

                        //        shortname = "Spatial Awareness";

                        //        break;
                        //    case "Observation and Concept Formation":

                        //        shortname = "Conceptual Formation";

                        //        break;
                        //    case "Abstract Reasoning":

                        //        shortname = "Abstract Reasoning";

                        //        break;

                        //    case "Memory Recall":

                        //        shortname = "Memory & Recall\n";

                        //        break;

                        //    case "Visualization":

                        //        shortname = "Visualization\n";

                        //        break;
                        //}
                        {
                            case "NUMERICAL ABILITY":

                                shortname = "Numerical\n";

                                break;
                            case "OBSERVATION AND CONCEPT FORMATION":

                                shortname = "Observation";

                                break;
                            case "SPATIAL AWARENESS":

                                shortname = "Spatial Awareness";

                                break;
                            case "OBSERVATION AND SPATIAL TRANSFORMATION":

                                shortname = "Conceptual Formation";

                                break;
                            case "ABSTRACT REASONING":

                                shortname = "Abstract Reasoning";

                                break;

                            case "MEMORY RECALL":

                                shortname = "Memory & Recall\n";

                                break;

                            case "VISUALIZATION":

                                shortname = "Visualization\n";

                                break;
                        }



                        PDTopCell33.Add(new Paragraph(shortname.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        //PDTopCell33.Add(new Paragraph("Numerical", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell33.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));

                        PDTopCell33.Width = 80;
                        PDTopCell33.BackgroundColor = new Color(219, 219, 219);
                        PDTopCell33.BorderWidth = 2f;
                        PDTopCell33.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell33.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell33.BorderColor = new Color(255, 255, 255);
                        PDTopTable10.AddCell(PDTopCell33);

                        Cell PDTopCell34 = new Cell();

                        #region rect1
                        //////////////  rectangle of line 1


                        iTextSharp.text.Table thirdTable1 = new iTextSharp.text.Table(5);
                        Cell thirdcell1 = new Cell();
                        thirdcell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell1.Width = 2;
                        thirdcell1.BackgroundColor = new Color(225, 225, 0);
                        thirdcell1.BorderWidth = 4f;
                        thirdcell1.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell1);

                        Cell thirdcell2 = new Cell();
                        thirdcell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell2.Width = 2;
                        thirdcell2.BackgroundColor = new Color(225, 225, 0);
                        thirdcell2.BorderWidth = 4f;
                        thirdcell2.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell2);

                        Cell thirdcell3 = new Cell();
                        thirdcell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell3.Width = 2;
                        thirdcell3.BackgroundColor = new Color(225, 225, 0);
                        thirdcell3.BorderWidth = 4f;
                        thirdcell3.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell3);

                        Cell thirdcell4 = new Cell();
                        thirdcell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell4.Width = 2;
                        thirdcell4.BackgroundColor = new Color(225, 225, 0);
                        thirdcell4.BorderWidth = 4f;
                        thirdcell4.BorderColor = new Color(255, 255, 255);
                        //thirdTable1.AddCell(thirdcell4);

                        Cell thirdcell5 = new Cell();
                        thirdcell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell5.Width = 2;
                        thirdcell5.BackgroundColor = new Color(225, 225, 0);
                        thirdcell5.BorderWidth = 4f;
                        thirdcell5.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell5);



                        switch (ds.Tables[0].Rows[6][1].ToString())
                        {
                            case "Very Low":

                                thirdcell1.BackgroundColor = new Color(225, 225, 0);
                                thirdcell2.BackgroundColor = new Color(71, 65, 18);
                                thirdcell3.BackgroundColor = new Color(71, 65, 18);
                                thirdcell4.BackgroundColor = new Color(71, 65, 18);
                                thirdcell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Low":

                                thirdcell1.BackgroundColor = new Color(225, 225, 0);
                                thirdcell2.BackgroundColor = new Color(225, 225, 0);
                                thirdcell3.BackgroundColor = new Color(71, 65, 18);
                                thirdcell4.BackgroundColor = new Color(71, 65, 18);
                                thirdcell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Moderate":

                                thirdcell1.BackgroundColor = new Color(225, 225, 0);
                                thirdcell2.BackgroundColor = new Color(225, 225, 0);
                                thirdcell3.BackgroundColor = new Color(225, 225, 0);
                                thirdcell4.BackgroundColor = new Color(71, 65, 18);
                                thirdcell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "High":

                                thirdcell1.BackgroundColor = new Color(225, 225, 0);
                                thirdcell2.BackgroundColor = new Color(225, 225, 0);
                                thirdcell3.BackgroundColor = new Color(225, 225, 0);
                                thirdcell4.BackgroundColor = new Color(225, 225, 0);
                                thirdcell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Very High":

                                thirdcell1.BackgroundColor = new Color(225, 225, 0);
                                thirdcell2.BackgroundColor = new Color(225, 225, 0);
                                thirdcell3.BackgroundColor = new Color(225, 225, 0);
                                thirdcell4.BackgroundColor = new Color(225, 225, 0);
                                thirdcell5.BackgroundColor = new Color(225, 225, 0);

                                break;
                        }

                        thirdTable1.AddCell(thirdcell1);
                        thirdTable1.AddCell(thirdcell2);
                        thirdTable1.AddCell(thirdcell3);
                        thirdTable1.AddCell(thirdcell4);
                        thirdTable1.AddCell(thirdcell5);
                        thirdTable1.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        thirdTable1.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        ////////////////////////////////////////////////////


                        //PDTopCell34.Add(thirdTable1);
                        #endregion

                        switch (ds.Tables[0].Rows[0][1].ToString())
                        //switch (ds.Tables[0].Rows[6][1].ToString())
                        {
                            case "Very Low":

                                PDTopCell34.Add(rverylow);

                                break;
                            case "Low":

                                PDTopCell34.Add(rlow);

                                break;
                            case "Moderate":

                                PDTopCell34.Add(rmodrate);

                                break;
                            case "High":

                                PDTopCell34.Add(rhigh);

                                break;
                            case "Very High":

                                PDTopCell34.Add(rveryhi);

                                break;
                        }

                        //PDTopCell34.Add(thirdTable1);

                        PDTopCell34.Width = 80;
                        PDTopCell34.BackgroundColor = new Color(219, 219, 219);
                        PDTopCell34.BorderWidth = 2f;
                        PDTopCell34.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell34.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        PDTopCell34.BorderColor = new Color(255, 255, 255);
                        PDTopTable10.AddCell(PDTopCell34);

                        Cell PDTopCell35 = new Cell();

                        //float ff = (float)System.Convert.ToSingle(ds.Tables[0].Rows[6][2].ToString());
                        float ff = (float)System.Convert.ToSingle(ds.Tables[0].Rows[0][2].ToString());
                        int per = (int)Math.Ceiling(ff);

                        PDTopCell35.Add(new Paragraph(per.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell35.Width = 80;
                        PDTopCell35.BackgroundColor = new Color(219, 219, 219);
                        PDTopCell35.BorderWidth = 2f;
                        PDTopCell35.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell35.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        PDTopCell35.BorderColor = new Color(255, 255, 255);
                        PDTopTable10.AddCell(PDTopCell35);

                        Cell PDTopCell36 = new Cell();
                        //PDTopCell36.Add(new Paragraph(ds.Tables[0].Rows[6][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell36.Add(new Paragraph(ds.Tables[0].Rows[0][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell36.Width = 80;
                        PDTopCell36.BackgroundColor = new Color(219, 219, 219);
                        PDTopCell36.BorderWidth = 2f;
                        PDTopCell36.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell36.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        PDTopCell36.BorderColor = new Color(255, 255, 255);
                        PDTopTable10.AddCell(PDTopCell36);


                        ///////// table second row

                        Cell n2 = new Cell();
                        n2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        n2.Width = 80;

                        n2.BackgroundColor = new Color(225, 225, 0);
                        n2.BorderWidth = 2f;
                        n2.BorderColor = new Color(255, 255, 255);
                        n2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        n2.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        // PDTopTable10.AddCell(n2);


                        Cell PDTopCell37 = new Cell();

                        switch (ds.Tables[0].Rows[1][0].ToString())
                        //switch (ds.Tables[0].Rows[6][1].ToString())
                        //{
                        //    case "Numerical Ability":

                        //        shortname = "Numerical\n";

                        //        break;
                        //    case "Observation and Spatial Transformation":

                        //        shortname = "Observation";

                        //        break;
                        //    case "Spatial Awareness":

                        //        shortname = "Spatial Awareness";

                        //        break;
                        //    case "Observation and Concept Formation":

                        //        shortname = "Conceptual Formation";

                        //        break;
                        //    case "Abstract Reasoning":

                        //        shortname = "Abstract Reasoning";

                        //        break;

                        //    case "Memory Recall":

                        //        shortname = "Memory & Recall\n";

                        //        break;

                        //    case "Visualization":

                        //        shortname = "Visualization\n";

                        //        break;
                        //}

                        {
                            case "NUMERICAL ABILITY":

                                shortname = "Numerical\n";

                                break;
                            case "OBSERVATION AND CONCEPT FORMATION":

                                shortname = "Observation";

                                break;
                            case "SPATIAL AWARENESS":

                                shortname = "Spatial Awareness";

                                break;
                            case "OBSERVATION AND SPATIAL TRANSFORMATION":

                                shortname = "Conceptual Formation";

                                break;
                            case "ABSTRACT REASONING":

                                shortname = "Abstract Reasoning";

                                break;

                            case "MEMORY RECALL":

                                shortname = "Memory & Recall\n";

                                break;

                            case "VISUALIZATION":

                                shortname = "Visualization\n";

                                break;
                        }


                        // PDTopCell37.Add(new Paragraph("Abstract Reasoning", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell37.Add(new Paragraph(shortname.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell37.Add(new Paragraph("\n", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell37.Width = 80;
                        PDTopCell37.BorderWidth = 2f;
                        PDTopCell37.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell37.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell37.BorderColor = new Color(255, 255, 255);
                        PDTopTable10.AddCell(PDTopCell37);

                        Cell PDTopCell38 = new Cell();

                        #region r2
                        //////////////  rectangle of line 2

                        iTextSharp.text.Table thirdTable2 = new iTextSharp.text.Table(5);
                        Cell thirdcell21 = new Cell();
                        thirdcell21.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell21.Width = 2;
                        thirdcell21.BackgroundColor = new Color(204, 186, 60);
                        thirdcell21.BorderWidth = 4f;
                        thirdcell21.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell1);

                        Cell thirdcell22 = new Cell();
                        thirdcell22.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell22.Width = 2;
                        thirdcell22.BackgroundColor = new Color(204, 186, 60);
                        thirdcell22.BorderWidth = 4f;
                        thirdcell22.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell2);

                        Cell thirdcell23 = new Cell();
                        thirdcell23.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell23.Width = 2;
                        thirdcell23.BackgroundColor = new Color(204, 186, 60);
                        thirdcell23.BorderWidth = 4f;
                        thirdcell23.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell3);

                        Cell thirdcell24 = new Cell();
                        thirdcell24.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell24.Width = 2;
                        thirdcell24.BackgroundColor = new Color(204, 186, 60);
                        thirdcell24.BorderWidth = 4f;
                        thirdcell24.BorderColor = new Color(255, 255, 255);
                        //thirdTable1.AddCell(thirdcell4);

                        Cell thirdcell25 = new Cell();
                        thirdcell25.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell25.Width = 2;
                        thirdcell25.BackgroundColor = new Color(204, 186, 60);
                        thirdcell25.BorderWidth = 4f;
                        thirdcell25.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell5);



                        switch (ds.Tables[0].Rows[3][1].ToString())
                        {
                            case "Very Low":

                                thirdcell21.BackgroundColor = new Color(225, 225, 0);
                                thirdcell22.BackgroundColor = new Color(71, 65, 18);
                                thirdcell23.BackgroundColor = new Color(71, 65, 18);
                                thirdcell24.BackgroundColor = new Color(71, 65, 18);
                                thirdcell25.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Low":

                                thirdcell21.BackgroundColor = new Color(225, 225, 0);
                                thirdcell22.BackgroundColor = new Color(225, 225, 0);
                                thirdcell23.BackgroundColor = new Color(71, 65, 18);
                                thirdcell24.BackgroundColor = new Color(71, 65, 18);
                                thirdcell25.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Moderate":

                                thirdcell21.BackgroundColor = new Color(225, 225, 0);
                                thirdcell22.BackgroundColor = new Color(225, 225, 0);
                                thirdcell23.BackgroundColor = new Color(225, 225, 0);
                                thirdcell24.BackgroundColor = new Color(71, 65, 18);
                                thirdcell25.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "High":

                                thirdcell21.BackgroundColor = new Color(225, 225, 0);
                                thirdcell22.BackgroundColor = new Color(225, 225, 0);
                                thirdcell23.BackgroundColor = new Color(225, 225, 0);
                                thirdcell24.BackgroundColor = new Color(225, 225, 0);
                                thirdcell25.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Very High":

                                thirdcell21.BackgroundColor = new Color(225, 225, 0);
                                thirdcell22.BackgroundColor = new Color(225, 225, 0);
                                thirdcell23.BackgroundColor = new Color(225, 225, 0);
                                thirdcell24.BackgroundColor = new Color(225, 225, 0);
                                thirdcell25.BackgroundColor = new Color(225, 225, 0);

                                break;
                        }

                        thirdTable2.AddCell(thirdcell21);
                        thirdTable2.AddCell(thirdcell22);
                        thirdTable2.AddCell(thirdcell23);
                        thirdTable2.AddCell(thirdcell24);
                        thirdTable2.AddCell(thirdcell25);
                        thirdTable2.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        thirdTable2.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        ////////////////////////////////////////////////////


                        // PDTopCell38.Add(thirdTable2);
                        #endregion

                        switch (ds.Tables[0].Rows[1][1].ToString())
                        //switch (ds.Tables[0].Rows[3][1].ToString())
                        {
                            case "Very Low":

                                PDTopCell38.Add(rverylow);

                                break;
                            case "Low":

                                PDTopCell38.Add(rlow);

                                break;
                            case "Moderate":

                                PDTopCell38.Add(rmodrate);

                                break;
                            case "High":

                                PDTopCell38.Add(rhigh);

                                break;
                            case "Very High":

                                PDTopCell38.Add(rveryhi);

                                break;
                        }


                        PDTopCell38.Width = 80;
                        PDTopCell38.BorderWidth = 2f;
                        PDTopCell38.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell38.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        PDTopCell38.BorderColor = new Color(255, 255, 255);
                        PDTopTable10.AddCell(PDTopCell38);


                        ff = (float)System.Convert.ToSingle(ds.Tables[0].Rows[1][2].ToString());
                        //ff = (float)System.Convert.ToSingle(ds.Tables[0].Rows[3][2].ToString());
                        per = (int)Math.Ceiling(ff);

                        Cell PDTopCell39 = new Cell();
                        PDTopCell39.Add(new Paragraph(per.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell39.Width = 80;
                        PDTopCell39.BorderWidth = 2f;
                        PDTopCell39.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell39.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        PDTopCell39.BorderColor = new Color(255, 255, 255);
                        PDTopTable10.AddCell(PDTopCell39);

                        Cell PDTopCell40 = new Cell();
                        //PDTopCell40.Add(new Paragraph(ds.Tables[0].Rows[3][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell40.Add(new Paragraph(ds.Tables[0].Rows[1][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell40.Width = 80;
                        PDTopCell40.BorderWidth = 2f;
                        PDTopCell40.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell40.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        PDTopCell40.BorderColor = new Color(255, 255, 255);
                        PDTopTable10.AddCell(PDTopCell40);


                        ///////////// table third row 

                        Cell n3 = new Cell();
                        n3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        n3.Width = 80;

                        n3.BackgroundColor = new Color(225, 225, 0);
                        n3.BorderWidth = 2f;
                        n3.BorderColor = new Color(255, 255, 255);
                        n3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        n3.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        // PDTopTable10.AddCell(n3);


                        Cell PDTopCell41 = new Cell();
                        //PDTopCell41.Add(new Paragraph("Visualization", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));

                        switch (ds.Tables[0].Rows[2][0].ToString())
                        //switch (ds.Tables[0].Rows[6][1].ToString())
                        //{
                        //    case "Numerical Ability":

                        //        shortname = "Numerical\n";

                        //        break;
                        //    case "Observation and Spatial Transformation":

                        //        shortname = "Observation";

                        //        break;
                        //    case "Spatial Awareness":

                        //        shortname = "Spatial Awareness";

                        //        break;
                        //    case "Observation and Concept Formation":

                        //        shortname = "Conceptual Formation";

                        //        break;
                        //    case "Abstract Reasoning":

                        //        shortname = "Abstract Reasoning";

                        //        break;

                        //    case "Memory Recall":

                        //        shortname = "Memory & Recall\n";

                        //        break;

                        //    case "Visualization":

                        //        shortname = "Visualization\n";

                        //        break;
                        //}

                        {
                            case "NUMERICAL ABILITY":

                                shortname = "Numerical\n";

                                break;
                            case "OBSERVATION AND CONCEPT FORMATION":

                                shortname = "Observation";

                                break;
                            case "SPATIAL AWARENESS":

                                shortname = "Spatial Awareness";

                                break;
                            case "OBSERVATION AND SPATIAL TRANSFORMATION":

                                shortname = "Conceptual Formation";

                                break;
                            case "ABSTRACT REASONING":

                                shortname = "Abstract Reasoning";

                                break;

                            case "MEMORY RECALL":

                                shortname = "Memory & Recall\n";

                                break;

                            case "VISUALIZATION":

                                shortname = "Visualization\n";

                                break;
                        }


                        PDTopCell41.Add(new Paragraph(shortname.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell41.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell41.Width = 80;
                        PDTopCell41.BackgroundColor = new Color(219, 219, 219);
                        PDTopCell41.BorderWidth = 2f;
                        PDTopCell41.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell41.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        PDTopCell41.BorderColor = new Color(255, 255, 255);
                        PDTopTable10.AddCell(PDTopCell41);

                        Cell PDTopCell42 = new Cell();




                        //////////////  rectangle of line 3

                        # region r2


                        iTextSharp.text.Table thirdTable3 = new iTextSharp.text.Table(5);
                        Cell thirdcell31 = new Cell();
                        thirdcell31.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell31.Width = 2;
                        thirdcell31.BackgroundColor = new Color(204, 186, 60);
                        thirdcell31.BorderWidth = 4f;
                        thirdcell31.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell1);

                        Cell thirdcell32 = new Cell();
                        thirdcell32.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell32.Width = 2;
                        thirdcell32.BackgroundColor = new Color(204, 186, 60);
                        thirdcell32.BorderWidth = 4f;
                        thirdcell32.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell2);

                        Cell thirdcell33 = new Cell();
                        thirdcell33.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell33.Width = 2;
                        thirdcell33.BackgroundColor = new Color(204, 186, 60);
                        thirdcell33.BorderWidth = 4f;
                        thirdcell33.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell3);

                        Cell thirdcell34 = new Cell();
                        thirdcell34.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell34.Width = 2;
                        thirdcell34.BackgroundColor = new Color(204, 186, 60);
                        thirdcell34.BorderWidth = 4f;
                        thirdcell34.BorderColor = new Color(255, 255, 255);
                        //thirdTable1.AddCell(thirdcell4);

                        Cell thirdcell35 = new Cell();
                        thirdcell35.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell35.Width = 2;
                        thirdcell35.BackgroundColor = new Color(204, 186, 60);
                        thirdcell35.BorderWidth = 4f;
                        thirdcell35.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell5);



                        switch (ds.Tables[0].Rows[4][1].ToString())
                        {
                            case "Very Low":

                                thirdcell31.BackgroundColor = new Color(225, 225, 0);
                                thirdcell32.BackgroundColor = new Color(71, 65, 18);
                                thirdcell33.BackgroundColor = new Color(71, 65, 18);
                                thirdcell34.BackgroundColor = new Color(71, 65, 18);
                                thirdcell35.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Low":

                                thirdcell31.BackgroundColor = new Color(225, 225, 0);
                                thirdcell32.BackgroundColor = new Color(225, 225, 0);
                                thirdcell33.BackgroundColor = new Color(71, 65, 18);
                                thirdcell34.BackgroundColor = new Color(71, 65, 18);
                                thirdcell35.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Moderate":

                                thirdcell31.BackgroundColor = new Color(225, 225, 0);
                                thirdcell32.BackgroundColor = new Color(225, 225, 0);
                                thirdcell33.BackgroundColor = new Color(225, 225, 0);
                                thirdcell34.BackgroundColor = new Color(71, 65, 18);
                                thirdcell35.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "High":

                                thirdcell31.BackgroundColor = new Color(225, 225, 0);
                                thirdcell32.BackgroundColor = new Color(225, 225, 0);
                                thirdcell33.BackgroundColor = new Color(225, 225, 0);
                                thirdcell34.BackgroundColor = new Color(225, 225, 0);
                                thirdcell35.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Very High":

                                thirdcell31.BackgroundColor = new Color(225, 225, 0);
                                thirdcell32.BackgroundColor = new Color(225, 225, 0);
                                thirdcell33.BackgroundColor = new Color(225, 225, 0);
                                thirdcell34.BackgroundColor = new Color(225, 225, 0);
                                thirdcell35.BackgroundColor = new Color(225, 225, 0);

                                break;
                        }

                        thirdTable3.AddCell(thirdcell31);
                        thirdTable3.AddCell(thirdcell32);
                        thirdTable3.AddCell(thirdcell33);
                        thirdTable3.AddCell(thirdcell34);
                        thirdTable3.AddCell(thirdcell35);
                        thirdTable3.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        thirdTable3.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        ////////////////////////////////////////////////////
                        // PDTopCell42.Add(thirdTable3);
                        #endregion


                        switch (ds.Tables[0].Rows[2][1].ToString())
                        //switch (ds.Tables[0].Rows[4][1].ToString())
                        {
                            case "Very Low":
                                PDTopCell42.Add(rverylow);
                                break;
                            case "Low":
                                PDTopCell42.Add(rlow);
                                break;
                            case "Moderate":
                                PDTopCell42.Add(rmodrate);
                                break;
                            case "High":
                                PDTopCell42.Add(rhigh);
                                break;
                            case "Very High":
                                PDTopCell42.Add(rveryhi);
                                break;
                        }


                        PDTopCell42.Width = 80;
                        PDTopCell42.BackgroundColor = new Color(219, 219, 219);
                        PDTopCell42.BorderWidth = 2f;
                        PDTopCell42.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell42.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        PDTopCell42.BorderColor = new Color(255, 255, 255);
                        PDTopTable10.AddCell(PDTopCell42);


                        //ff = (float)System.Convert.ToSingle(ds.Tables[0].Rows[4][2].ToString());
                        ff = (float)System.Convert.ToSingle(ds.Tables[0].Rows[2][2].ToString());
                        per = (int)Math.Ceiling(ff);

                        Cell PDTopCell43 = new Cell();
                        PDTopCell43.Add(new Paragraph(per.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell43.Width = 80;
                        PDTopCell43.BackgroundColor = new Color(219, 219, 219);
                        PDTopCell43.BorderWidth = 2f;
                        PDTopCell43.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell43.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        PDTopCell43.BorderColor = new Color(255, 255, 255);
                        PDTopTable10.AddCell(PDTopCell43);

                        Cell PDTopCell44 = new Cell();
                        //PDTopCell44.Add(new Paragraph(ds.Tables[0].Rows[4][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell44.Add(new Paragraph(ds.Tables[0].Rows[2][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell44.Width = 80;
                        PDTopCell44.BackgroundColor = new Color(219, 219, 219);
                        PDTopCell44.BorderWidth = 2f;
                        PDTopCell44.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell44.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        PDTopCell44.BorderColor = new Color(255, 255, 255);
                        PDTopTable10.AddCell(PDTopCell44);


                        ///////////// table fourth row 

                        Cell n4 = new Cell();
                        n4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        n4.Width = 80;

                        n4.BackgroundColor = new Color(225, 225, 0);
                        n4.BorderWidth = 2f;
                        n4.BorderColor = new Color(255, 255, 255);
                        n4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        n4.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        // PDTopTable10.AddCell(n4);

                        Cell PDTopCell45 = new Cell();
                        //PDTopCell45.Add(new Paragraph("Conceptual Formation ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));

                        switch (ds.Tables[0].Rows[3][0].ToString())
                        //switch (ds.Tables[0].Rows[6][1].ToString())
                        //{
                        //    case "Numerical Ability":

                        //        shortname = "Numerical\n";

                        //        break;
                        //    case "Observation and Spatial Transformation":

                        //        shortname = "Observation";

                        //        break;
                        //    case "Spatial Awareness":

                        //        shortname = "Spatial Awareness";

                        //        break;
                        //    case "Observation and Concept Formation":

                        //        shortname = "Conceptual Formation";

                        //        break;
                        //    case "Abstract Reasoning":

                        //        shortname = "Abstract Reasoning";

                        //        break;

                        //    case "Memory Recall":

                        //        shortname = "Memory & Recall\n";

                        //        break;

                        //    case "Visualization":

                        //        shortname = "Visualization\n";

                        //        break;
                        //}
                        {
                            case "NUMERICAL ABILITY":

                                shortname = "Numerical\n";

                                break;
                            case "OBSERVATION AND CONCEPT FORMATION":

                                shortname = "Observation";

                                break;
                            case "SPATIAL AWARENESS":

                                shortname = "Spatial Awareness";

                                break;
                            case "OBSERVATION AND SPATIAL TRANSFORMATION":

                                shortname = "Conceptual Formation";

                                break;
                            case "ABSTRACT REASONING":

                                shortname = "Abstract Reasoning";

                                break;

                            case "MEMORY RECALL":

                                shortname = "Memory & Recall\n";

                                break;

                            case "VISUALIZATION":

                                shortname = "Visualization\n";

                                break;
                        }


                        PDTopCell45.Add(new Paragraph(shortname.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell45.Add(new Paragraph("\n", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell45.Width = 80;
                        PDTopCell45.BorderWidth = 2f;
                        PDTopCell45.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell45.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        PDTopCell45.BorderColor = new Color(255, 255, 255);
                        PDTopTable10.AddCell(PDTopCell45);

                        Cell PDTopCell46 = new Cell();


                        //////////////  rectangle of line 4

                        #region r3


                        iTextSharp.text.Table thirdTable4 = new iTextSharp.text.Table(5);
                        Cell thirdcell41 = new Cell();
                        thirdcell41.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell41.Width = 2;
                        thirdcell41.BackgroundColor = new Color(204, 186, 60);
                        thirdcell41.BorderWidth = 4f;
                        thirdcell41.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell1);

                        Cell thirdcell42 = new Cell();
                        thirdcell42.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell42.Width = 2;
                        thirdcell42.BackgroundColor = new Color(204, 186, 60);
                        thirdcell42.BorderWidth = 4f;
                        thirdcell42.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell2);

                        Cell thirdcell43 = new Cell();
                        thirdcell43.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell43.Width = 2;
                        thirdcell43.BackgroundColor = new Color(204, 186, 60);
                        thirdcell43.BorderWidth = 4f;
                        thirdcell43.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell3);

                        Cell thirdcell44 = new Cell();
                        thirdcell44.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell44.Width = 2;
                        thirdcell44.BackgroundColor = new Color(204, 186, 60);
                        thirdcell44.BorderWidth = 4f;
                        thirdcell44.BorderColor = new Color(255, 255, 255);
                        //thirdTable1.AddCell(thirdcell4);

                        Cell thirdcell45 = new Cell();
                        thirdcell45.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell45.Width = 2;
                        thirdcell45.BackgroundColor = new Color(204, 186, 60);
                        thirdcell45.BorderWidth = 4f;
                        thirdcell45.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell5);



                        switch (ds.Tables[0].Rows[0][1].ToString())
                        {
                            case "Very Low":

                                thirdcell41.BackgroundColor = new Color(225, 225, 0);
                                thirdcell42.BackgroundColor = new Color(71, 65, 18);
                                thirdcell43.BackgroundColor = new Color(71, 65, 18);
                                thirdcell44.BackgroundColor = new Color(71, 65, 18);
                                thirdcell45.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Low":

                                thirdcell41.BackgroundColor = new Color(225, 225, 0);
                                thirdcell42.BackgroundColor = new Color(225, 225, 0);
                                thirdcell43.BackgroundColor = new Color(71, 65, 18);
                                thirdcell44.BackgroundColor = new Color(71, 65, 18);
                                thirdcell45.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Moderate":

                                thirdcell41.BackgroundColor = new Color(225, 225, 0);
                                thirdcell42.BackgroundColor = new Color(225, 225, 0);
                                thirdcell43.BackgroundColor = new Color(225, 225, 0);
                                thirdcell44.BackgroundColor = new Color(71, 65, 18);
                                thirdcell45.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "High":

                                thirdcell41.BackgroundColor = new Color(225, 225, 0);
                                thirdcell42.BackgroundColor = new Color(225, 225, 0);
                                thirdcell43.BackgroundColor = new Color(225, 225, 0);
                                thirdcell44.BackgroundColor = new Color(225, 225, 0);
                                thirdcell45.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Very High":

                                thirdcell41.BackgroundColor = new Color(225, 225, 0);
                                thirdcell42.BackgroundColor = new Color(225, 225, 0);
                                thirdcell43.BackgroundColor = new Color(225, 225, 0);
                                thirdcell44.BackgroundColor = new Color(225, 225, 0);
                                thirdcell45.BackgroundColor = new Color(225, 225, 0); ;

                                break;
                        }

                        thirdTable4.AddCell(thirdcell41);
                        thirdTable4.AddCell(thirdcell42);
                        thirdTable4.AddCell(thirdcell43);
                        thirdTable4.AddCell(thirdcell44);
                        thirdTable4.AddCell(thirdcell45);
                        thirdTable4.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        thirdTable4.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        //PDTopCell46.Add(thirdTable4);

                        #endregion
                        ////////////////////////////////////////////////////
                        switch (ds.Tables[0].Rows[3][1].ToString())
                        //                       switch (ds.Tables[0].Rows[0][1].ToString())
                        {
                            case "Very Low":

                                PDTopCell46.Add(rverylow);

                                break;
                            case "Low":
                                PDTopCell46.Add(rlow);


                                break;
                            case "Moderate":

                                PDTopCell46.Add(rmodrate);

                                break;
                            case "High":

                                PDTopCell46.Add(rhigh);

                                break;
                            case "Very High":

                                PDTopCell46.Add(rveryhi);

                                break;
                        }


                        PDTopCell46.Width = 80;
                        PDTopCell46.BorderWidth = 2f;
                        PDTopCell46.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell46.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        PDTopCell46.BorderColor = new Color(255, 255, 255);
                        PDTopTable10.AddCell(PDTopCell46);

                        Cell PDTopCell47 = new Cell();


                        //ff = (float)System.Convert.ToSingle(ds.Tables[0].Rows[0][2].ToString());
                        ff = (float)System.Convert.ToSingle(ds.Tables[0].Rows[3][2].ToString());
                        per = (int)Math.Ceiling(ff);

                        PDTopCell47.Add(new Paragraph(per.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell47.Width = 80;
                        PDTopCell47.BorderWidth = 2f;
                        PDTopCell47.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell47.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        PDTopCell47.BorderColor = new Color(255, 255, 255);
                        PDTopTable10.AddCell(PDTopCell47);

                        Cell PDTopCell48 = new Cell();
                        //PDTopCell48.Add(new Paragraph(ds.Tables[0].Rows[0][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell48.Add(new Paragraph(ds.Tables[0].Rows[3][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell48.Width = 80;
                        PDTopCell48.BorderWidth = 2f;
                        PDTopCell48.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell48.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        PDTopCell48.BorderColor = new Color(255, 255, 255);
                        PDTopTable10.AddCell(PDTopCell48);




                        ///////////// table fifth row 

                        Cell n5 = new Cell();
                        n5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        n5.Width = 80;

                        n5.BackgroundColor = new Color(225, 225, 0);
                        n5.BorderWidth = 2f;
                        n5.BorderColor = new Color(255, 255, 255);
                        n5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        n5.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        // PDTopTable10.AddCell(n5);


                        Cell PDTopCell49 = new Cell();
                        //PDTopCell49.Add(new Paragraph("Observation", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));

                        switch (ds.Tables[0].Rows[4][0].ToString())
                        //switch (ds.Tables[0].Rows[6][1].ToString())
                        //{
                        //    case "Numerical Ability":

                        //        shortname = "Numerical\n";

                        //        break;
                        //    case "Observation and Spatial Transformation":

                        //        shortname = "Observation";

                        //        break;
                        //    case "Spatial Awareness":

                        //        shortname = "Spatial Awareness";

                        //        break;
                        //    case "Observation and Concept Formation":

                        //        shortname = "Conceptual Formation";

                        //        break;
                        //    case "Abstract Reasoning":

                        //        shortname = "Abstract Reasoning";

                        //        break;

                        //    case "Memory Recall":

                        //        shortname = "Memory & Recall\n";

                        //        break;

                        //    case "Visualization":

                        //        shortname = "Visualization\n";

                        //        break;
                        //}
                        {
                            case "NUMERICAL ABILITY":

                                shortname = "Numerical\n";

                                break;
                            case "OBSERVATION AND CONCEPT FORMATION":

                                shortname = "Observation";

                                break;
                            case "SPATIAL AWARENESS":

                                shortname = "Spatial Awareness";

                                break;
                            case "OBSERVATION AND SPATIAL TRANSFORMATION":

                                shortname = "Conceptual Formation";

                                break;
                            case "ABSTRACT REASONING":

                                shortname = "Abstract Reasoning";

                                break;

                            case "MEMORY RECALL":

                                shortname = "Memory & Recall\n";

                                break;

                            case "VISUALIZATION":

                                shortname = "Visualization\n";

                                break;
                        }

                        PDTopCell49.Add(new Paragraph(shortname.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell49.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell49.Width = 80;
                        PDTopCell49.BackgroundColor = new Color(219, 219, 219);
                        PDTopCell49.BorderWidth = 2f;
                        PDTopCell49.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell49.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        PDTopCell49.BorderColor = new Color(255, 255, 255);
                        PDTopTable10.AddCell(PDTopCell49);

                        Cell PDTopCell50 = new Cell();


                        //////////////  rectangle of line 5

                        # region r4


                        iTextSharp.text.Table thirdTable5 = new iTextSharp.text.Table(5);
                        Cell thirdcell51 = new Cell();
                        thirdcell51.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell51.Width = 2;
                        thirdcell51.BackgroundColor = new Color(204, 186, 60);
                        thirdcell51.BorderWidth = 4f;
                        thirdcell51.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell1);

                        Cell thirdcell52 = new Cell();
                        thirdcell52.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell52.Width = 2;
                        thirdcell52.BackgroundColor = new Color(204, 186, 60);
                        thirdcell52.BorderWidth = 4f;
                        thirdcell52.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell2);

                        Cell thirdcell53 = new Cell();
                        thirdcell53.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell53.Width = 2;
                        thirdcell53.BackgroundColor = new Color(204, 186, 60);
                        thirdcell53.BorderWidth = 4f;
                        thirdcell53.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell3);

                        Cell thirdcell54 = new Cell();
                        thirdcell54.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell54.Width = 2;
                        thirdcell54.BackgroundColor = new Color(204, 186, 60);
                        thirdcell54.BorderWidth = 4f;
                        thirdcell54.BorderColor = new Color(255, 255, 255);
                        //thirdTable1.AddCell(thirdcell4);

                        Cell thirdcell55 = new Cell();
                        thirdcell55.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell55.Width = 2;
                        thirdcell55.BackgroundColor = new Color(204, 186, 60);
                        thirdcell55.BorderWidth = 4f;
                        thirdcell55.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell5);



                        switch (ds.Tables[0].Rows[2][1].ToString())
                        {
                            case "Very Low":

                                thirdcell51.BackgroundColor = new Color(225, 225, 0);
                                thirdcell52.BackgroundColor = new Color(71, 65, 18);
                                thirdcell53.BackgroundColor = new Color(71, 65, 18);
                                thirdcell54.BackgroundColor = new Color(71, 65, 18);
                                thirdcell55.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Low":

                                thirdcell51.BackgroundColor = new Color(225, 225, 0);
                                thirdcell52.BackgroundColor = new Color(225, 225, 0);
                                thirdcell53.BackgroundColor = new Color(71, 65, 18);
                                thirdcell54.BackgroundColor = new Color(71, 65, 18);
                                thirdcell55.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Moderate":

                                thirdcell51.BackgroundColor = new Color(225, 225, 0); ;
                                thirdcell52.BackgroundColor = new Color(225, 225, 0);
                                thirdcell53.BackgroundColor = new Color(225, 225, 0);
                                thirdcell54.BackgroundColor = new Color(71, 65, 18);
                                thirdcell55.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "High":

                                thirdcell51.BackgroundColor = new Color(225, 225, 0);
                                thirdcell52.BackgroundColor = new Color(225, 225, 0);
                                thirdcell53.BackgroundColor = new Color(225, 225, 0);
                                thirdcell54.BackgroundColor = new Color(225, 225, 0);
                                thirdcell55.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Very High":

                                thirdcell51.BackgroundColor = new Color(225, 225, 0);
                                thirdcell52.BackgroundColor = new Color(225, 225, 0);
                                thirdcell53.BackgroundColor = new Color(225, 225, 0);
                                thirdcell54.BackgroundColor = new Color(225, 225, 0);
                                thirdcell55.BackgroundColor = new Color(225, 225, 0);

                                break;
                        }

                        thirdTable5.AddCell(thirdcell51);
                        thirdTable5.AddCell(thirdcell52);
                        thirdTable5.AddCell(thirdcell53);
                        thirdTable5.AddCell(thirdcell54);
                        thirdTable5.AddCell(thirdcell55);
                        thirdTable5.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        thirdTable5.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;

                        //PDTopCell50.Add(thirdTable5);

                        ////////////////////////////////////////////////////


                        # endregion

                        switch (ds.Tables[0].Rows[4][1].ToString())
                        //switch (ds.Tables[0].Rows[2][1].ToString())
                        {
                            case "Very Low":

                                PDTopCell50.Add(rverylow);

                                break;
                            case "Low":

                                PDTopCell50.Add(rlow);

                                break;
                            case "Moderate":

                                PDTopCell50.Add(rmodrate);

                                break;
                            case "High":

                                PDTopCell50.Add(rhigh);

                                break;
                            case "Very High":

                                PDTopCell50.Add(rveryhi);

                                break;
                        }


                        //PDTopCell50.Add(thirdTable5);
                        PDTopCell50.Width = 80;
                        PDTopCell50.BackgroundColor = new Color(219, 219, 219);
                        PDTopCell50.BorderWidth = 2f;
                        PDTopCell50.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell50.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        PDTopCell50.BorderColor = new Color(255, 255, 255);
                        PDTopTable10.AddCell(PDTopCell50);

                        Cell PDTopCell51 = new Cell();

                        ff = (float)System.Convert.ToSingle(ds.Tables[0].Rows[4][2].ToString());
                        //ff = (float)System.Convert.ToSingle(ds.Tables[0].Rows[2][2].ToString());
                        per = (int)Math.Ceiling(ff);

                        PDTopCell51.Add(new Paragraph(per.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell51.Width = 80;
                        PDTopCell51.BackgroundColor = new Color(219, 219, 219);
                        PDTopCell51.BorderWidth = 2f;
                        PDTopCell51.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell51.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        PDTopCell51.BorderColor = new Color(255, 255, 255);
                        PDTopTable10.AddCell(PDTopCell51);

                        Cell PDTopCell52 = new Cell();
                        //PDTopCell52.Add(new Paragraph(ds.Tables[0].Rows[2][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));


                        PDTopCell52.Add(new Paragraph(ds.Tables[0].Rows[4][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell52.Width = 80;
                        PDTopCell52.BackgroundColor = new Color(219, 219, 219);
                        PDTopCell52.BorderWidth = 2f;
                        PDTopCell52.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell52.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        PDTopCell52.BorderColor = new Color(255, 255, 255);
                        PDTopTable10.AddCell(PDTopCell52);


                        ///////////// table sixth row 

                        Cell n6 = new Cell();
                        n6.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        n6.Width = 80;

                        n6.BackgroundColor = new Color(225, 225, 0);
                        n6.BorderWidth = 2f;
                        n6.BorderColor = new Color(255, 255, 255);
                        n6.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        n6.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        // PDTopTable10.AddCell(n6);

                        Cell PDTopCell53 = new Cell();
                        //PDTopCell53.Add(new Paragraph("Spatial Awareness", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));

                        switch (ds.Tables[0].Rows[5][0].ToString())
                        //switch (ds.Tables[0].Rows[6][1].ToString())
                        //{
                        //    case "Numerical Ability":

                        //        shortname = "Numerical\n";

                        //        break;
                        //    case "Observation and Spatial Transformation":

                        //        shortname = "Observation";

                        //        break;
                        //    case "Spatial Awareness":

                        //        shortname = "Spatial Awareness";

                        //        break;
                        //    case "Observation and Concept Formation":

                        //        shortname = "Conceptual Formation";

                        //        break;
                        //    case "Abstract Reasoning":

                        //        shortname = "Abstract Reasoning";

                        //        break;

                        //    case "Memory Recall":

                        //        shortname = "Memory & Recall\n";

                        //        break;

                        //    case "Visualization":

                        //        shortname = "Visualization\n";

                        //        break;
                        //}
                        {
                            case "NUMERICAL ABILITY":

                                shortname = "Numerical\n";

                                break;
                            case "OBSERVATION AND CONCEPT FORMATION":

                                shortname = "Observation";

                                break;
                            case "SPATIAL AWARENESS":

                                shortname = "Spatial Awareness";

                                break;
                            case "OBSERVATION AND SPATIAL TRANSFORMATION":

                                shortname = "Conceptual Formation";

                                break;
                            case "ABSTRACT REASONING":

                                shortname = "Abstract Reasoning";

                                break;

                            case "MEMORY RECALL":

                                shortname = "Memory & Recall\n";

                                break;

                            case "VISUALIZATION":

                                shortname = "Visualization\n";

                                break;
                        }

                        PDTopCell53.Add(new Paragraph(shortname.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell53.Add(new Paragraph("\n", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell53.Width = 80;
                        PDTopCell53.BorderWidth = 2f;
                        PDTopCell53.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell53.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        PDTopCell53.BorderColor = new Color(255, 255, 255);
                        PDTopTable10.AddCell(PDTopCell53);

                        Cell PDTopCell54 = new Cell();




                        //////////////  rectangle of line 6

                        # region r5


                        iTextSharp.text.Table thirdTable6 = new iTextSharp.text.Table(5);
                        Cell thirdcell61 = new Cell();
                        thirdcell61.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell61.Width = 2;
                        thirdcell61.BackgroundColor = new Color(204, 186, 60);
                        thirdcell61.BorderWidth = 4f;
                        thirdcell61.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell1);

                        Cell thirdcell62 = new Cell();
                        thirdcell62.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell62.Width = 2;
                        thirdcell62.BackgroundColor = new Color(204, 186, 60);
                        thirdcell62.BorderWidth = 4f;
                        thirdcell62.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell2);

                        Cell thirdcell63 = new Cell();
                        thirdcell63.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell63.Width = 2;
                        thirdcell63.BackgroundColor = new Color(204, 186, 60);
                        thirdcell63.BorderWidth = 4f;
                        thirdcell63.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell3);

                        Cell thirdcell64 = new Cell();
                        thirdcell64.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell64.Width = 2;
                        thirdcell64.BackgroundColor = new Color(204, 186, 60);
                        thirdcell64.BorderWidth = 4f;
                        thirdcell64.BorderColor = new Color(255, 255, 255);
                        //thirdTable1.AddCell(thirdcell4);

                        Cell thirdcell65 = new Cell();
                        thirdcell65.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell65.Width = 2;
                        thirdcell65.BackgroundColor = new Color(204, 186, 60);
                        thirdcell65.BorderWidth = 4f;
                        thirdcell65.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell5);



                        switch (ds.Tables[0].Rows[1][1].ToString())
                        {
                            case "Very Low":

                                thirdcell61.BackgroundColor = new Color(225, 225, 0);
                                thirdcell62.BackgroundColor = new Color(71, 65, 18);
                                thirdcell63.BackgroundColor = new Color(71, 65, 18);
                                thirdcell64.BackgroundColor = new Color(71, 65, 18);
                                thirdcell65.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Low":

                                thirdcell61.BackgroundColor = new Color(225, 225, 0);
                                thirdcell62.BackgroundColor = new Color(225, 225, 0);
                                thirdcell63.BackgroundColor = new Color(71, 65, 18);
                                thirdcell64.BackgroundColor = new Color(71, 65, 18);
                                thirdcell65.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Moderate":

                                thirdcell61.BackgroundColor = new Color(225, 225, 0);
                                thirdcell62.BackgroundColor = new Color(225, 225, 0);
                                thirdcell63.BackgroundColor = new Color(225, 225, 0);
                                thirdcell64.BackgroundColor = new Color(71, 65, 18);
                                thirdcell65.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "High":

                                thirdcell61.BackgroundColor = new Color(225, 225, 0);
                                thirdcell62.BackgroundColor = new Color(225, 225, 0);
                                thirdcell63.BackgroundColor = new Color(225, 225, 0);
                                thirdcell64.BackgroundColor = new Color(225, 225, 0);
                                thirdcell65.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Very High":

                                thirdcell61.BackgroundColor = new Color(225, 225, 0);
                                thirdcell62.BackgroundColor = new Color(225, 225, 0);
                                thirdcell63.BackgroundColor = new Color(225, 225, 0);
                                thirdcell64.BackgroundColor = new Color(225, 225, 0);
                                thirdcell65.BackgroundColor = new Color(225, 225, 0);

                                break;
                        }

                        thirdTable6.AddCell(thirdcell61);
                        thirdTable6.AddCell(thirdcell62);
                        thirdTable6.AddCell(thirdcell63);
                        thirdTable6.AddCell(thirdcell64);
                        thirdTable6.AddCell(thirdcell65);
                        thirdTable6.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        thirdTable6.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;

                        //PDTopCell54.Add(thirdTable6);

                        ////////////////////////////////////////////////////

                        # endregion


                        switch (ds.Tables[0].Rows[5][1].ToString())
                        //switch (ds.Tables[0].Rows[1][1].ToString())
                        {
                            case "Very Low":

                                PDTopCell54.Add(rverylow);

                                break;
                            case "Low":

                                PDTopCell54.Add(rlow);

                                break;
                            case "Moderate":

                                PDTopCell54.Add(rmodrate);

                                break;
                            case "High":

                                PDTopCell54.Add(rhigh);

                                break;
                            case "Very High":

                                PDTopCell54.Add(rveryhi);

                                break;
                        }



                        PDTopCell54.Width = 80;
                        PDTopCell54.BorderWidth = 2f;
                        PDTopCell54.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell54.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        PDTopCell54.BorderColor = new Color(255, 255, 255);
                        PDTopTable10.AddCell(PDTopCell54);

                        Cell PDTopCell55 = new Cell();

                        ff = (float)System.Convert.ToSingle(ds.Tables[0].Rows[5][2].ToString());
                        //ff = (float)System.Convert.ToSingle(ds.Tables[0].Rows[1][2].ToString());
                        per = (int)Math.Ceiling(ff);

                        PDTopCell55.Add(new Paragraph(per.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell55.Width = 80;
                        PDTopCell55.BorderWidth = 2f;
                        PDTopCell55.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell55.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        PDTopCell55.BorderColor = new Color(255, 255, 255);
                        PDTopTable10.AddCell(PDTopCell55);

                        Cell PDTopCell56 = new Cell();
                        //PDTopCell56.Add(new Paragraph(ds.Tables[0].Rows[1][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell56.Add(new Paragraph(ds.Tables[0].Rows[5][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell56.Width = 80;
                        PDTopCell56.BorderWidth = 2f;
                        PDTopCell56.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell56.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        PDTopCell56.BorderColor = new Color(255, 255, 255);
                        PDTopTable10.AddCell(PDTopCell56);

                        ///////////// table seventh row 

                        Cell n7 = new Cell();
                        n7.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        n7.Width = 80;

                        n7.BackgroundColor = new Color(225, 225, 0);
                        n7.BorderWidth = 2f;
                        n7.BorderColor = new Color(255, 255, 255);
                        n7.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        n7.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        // PDTopTable10.AddCell(n7);

                        Cell PDTopCell57 = new Cell();
                        //PDTopCell57.Add(new Paragraph("Memory & Recall ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));

                        switch (ds.Tables[0].Rows[6][0].ToString())
                        //switch (ds.Tables[0].Rows[6][1].ToString())
                        //{
                        //    case "Numerical Ability":

                        //        shortname = "Numerical\n";

                        //        break;
                        //    case "Observation and Spatial Transformation":

                        //        shortname = "Observation";

                        //        break;
                        //    case "Spatial Awareness":

                        //        shortname = "Spatial Awareness";

                        //        break;
                        //    case "Observation and Concept Formation":

                        //        shortname = "Conceptual Formation";

                        //        break;
                        //    case "Abstract Reasoning":

                        //        shortname = "Abstract Reasoning";

                        //        break;

                        //    case "Memory Recall":

                        //        shortname = "Memory & Recall\n";

                        //        break;

                        //    case "Visualization":

                        //        shortname = "Visualization\n";

                        //        break;
                        //}
                        {
                            case "NUMERICAL ABILITY":

                                shortname = "Numerical\n";

                                break;
                            case "OBSERVATION AND CONCEPT FORMATION":

                                shortname = "Observation";

                                break;
                            case "SPATIAL AWARENESS":

                                shortname = "Spatial Awareness";

                                break;
                            case "OBSERVATION AND SPATIAL TRANSFORMATION":

                                shortname = "Conceptual Formation";

                                break;
                            case "ABSTRACT REASONING":

                                shortname = "Abstract Reasoning";

                                break;

                            case "MEMORY RECALL":

                                shortname = "Memory & Recall\n";

                                break;

                            case "VISUALIZATION":

                                shortname = "Visualization\n";

                                break;
                        }


                        PDTopCell57.Add(new Paragraph(shortname.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell57.Add(new Paragraph("\n", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell57.Width = 80;
                        PDTopCell57.BackgroundColor = new Color(219, 219, 219);
                        PDTopCell57.BorderWidth = 2f;
                        PDTopCell57.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell57.VerticalAlignment = iTextSharp.text.Element.ALIGN_TOP;
                        PDTopCell57.BorderColor = new Color(255, 255, 255);
                        PDTopTable10.AddCell(PDTopCell57);

                        Cell PDTopCell58 = new Cell();
                        //////////////  rectangle of line 7

                        #region r6
                        iTextSharp.text.Table thirdTable7 = new iTextSharp.text.Table(5);
                        Cell thirdcell71 = new Cell();
                        thirdcell71.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell71.Width = 2;
                        thirdcell71.BackgroundColor = new Color(204, 186, 60);
                        thirdcell71.BorderWidth = 4f;
                        thirdcell71.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell1);

                        Cell thirdcell72 = new Cell();
                        thirdcell72.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell72.Width = 2;
                        thirdcell72.BackgroundColor = new Color(204, 186, 60);
                        thirdcell72.BorderWidth = 4f;
                        thirdcell72.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell2);

                        Cell thirdcell73 = new Cell();
                        thirdcell73.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell73.Width = 2;
                        thirdcell73.BackgroundColor = new Color(204, 186, 60);
                        thirdcell73.BorderWidth = 4f;
                        thirdcell73.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell3);

                        Cell thirdcell74 = new Cell();
                        thirdcell74.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell74.Width = 2;
                        thirdcell74.BackgroundColor = new Color(204, 186, 60);
                        thirdcell74.BorderWidth = 4f;
                        thirdcell74.BorderColor = new Color(255, 255, 255);
                        //thirdTable1.AddCell(thirdcell4);

                        Cell thirdcell75 = new Cell();
                        thirdcell75.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        thirdcell75.Width = 2;
                        thirdcell75.BackgroundColor = new Color(204, 186, 60);
                        thirdcell75.BorderWidth = 4f;
                        thirdcell75.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell5);



                        switch (ds.Tables[0].Rows[5][1].ToString())
                        {
                            case "Very Low":

                                thirdcell71.BackgroundColor = new Color(225, 225, 0);
                                thirdcell72.BackgroundColor = new Color(71, 65, 18);
                                thirdcell73.BackgroundColor = new Color(71, 65, 18);
                                thirdcell74.BackgroundColor = new Color(71, 65, 18);
                                thirdcell75.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Low":

                                thirdcell71.BackgroundColor = new Color(225, 225, 0);
                                thirdcell72.BackgroundColor = new Color(225, 225, 0);
                                thirdcell73.BackgroundColor = new Color(71, 65, 18);
                                thirdcell74.BackgroundColor = new Color(71, 65, 18);
                                thirdcell75.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Moderate":

                                thirdcell71.BackgroundColor = new Color(225, 225, 0);
                                thirdcell72.BackgroundColor = new Color(225, 225, 0);
                                thirdcell73.BackgroundColor = new Color(225, 225, 0);
                                thirdcell74.BackgroundColor = new Color(71, 65, 18);
                                thirdcell75.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "High":

                                thirdcell71.BackgroundColor = new Color(225, 225, 0);
                                thirdcell72.BackgroundColor = new Color(225, 225, 0);
                                thirdcell73.BackgroundColor = new Color(225, 225, 0);
                                thirdcell74.BackgroundColor = new Color(225, 225, 0);
                                thirdcell75.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Very High":

                                thirdcell71.BackgroundColor = new Color(225, 225, 0);
                                thirdcell72.BackgroundColor = new Color(225, 225, 0);
                                thirdcell73.BackgroundColor = new Color(225, 225, 0);
                                thirdcell74.BackgroundColor = new Color(225, 225, 0);
                                thirdcell75.BackgroundColor = new Color(225, 225, 0);

                                break;
                        }

                        thirdTable7.AddCell(thirdcell71);
                        thirdTable7.AddCell(thirdcell72);
                        thirdTable7.AddCell(thirdcell73);
                        thirdTable7.AddCell(thirdcell74);
                        thirdTable7.AddCell(thirdcell75);
                        thirdTable7.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        thirdTable7.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;

                        //PDTopCell58.Add(thirdTable7);

                        ////////////////////////////////////////////////////

                        #endregion

                        switch (ds.Tables[0].Rows[6][1].ToString())
                        //switch (ds.Tables[0].Rows[5][1].ToString())
                        {
                            case "Very Low":

                                PDTopCell58.Add(rverylow);

                                break;
                            case "Low":

                                PDTopCell58.Add(rlow);

                                break;
                            case "Moderate":

                                PDTopCell58.Add(rmodrate);

                                break;
                            case "High":

                                PDTopCell58.Add(rhigh);

                                break;
                            case "Very High":

                                PDTopCell58.Add(rveryhi);

                                break;
                        }


                        PDTopCell58.Width = 80;
                        PDTopCell58.BackgroundColor = new Color(219, 219, 219);
                        PDTopCell58.BorderWidth = 2f;
                        PDTopCell58.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell58.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        PDTopCell58.BorderColor = new Color(255, 255, 255);
                        PDTopTable10.AddCell(PDTopCell58);

                        Cell PDTopCell59 = new Cell();

                        //ff = (float)System.Convert.ToSingle(ds.Tables[0].Rows[5][2].ToString());
                        ff = (float)System.Convert.ToSingle(ds.Tables[0].Rows[6][2].ToString());
                        per = (int)Math.Ceiling(ff);

                        PDTopCell59.Add(new Paragraph(per.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell59.Width = 80;
                        PDTopCell59.BackgroundColor = new Color(219, 219, 219);
                        PDTopCell59.BorderWidth = 2f;
                        PDTopCell59.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell59.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        PDTopCell59.BorderColor = new Color(255, 255, 255);
                        PDTopTable10.AddCell(PDTopCell59);

                        Cell PDTopCell60 = new Cell();
                        //                       PDTopCell60.Add(new Paragraph(ds.Tables[0].Rows[5][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell60.Add(new Paragraph(ds.Tables[0].Rows[6][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        PDTopCell60.Width = 80;
                        PDTopCell60.BackgroundColor = new Color(219, 219, 219);
                        PDTopCell60.BorderWidth = 2f;
                        PDTopCell60.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopCell60.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        PDTopCell60.BorderColor = new Color(255, 255, 255);
                        PDTopTable10.AddCell(PDTopCell60);
                        PDTopTable10.DefaultLayout.BorderWidthLeft = 20;

                        Cell PDTopCell24 = new Cell();
                        PDTopCell24.Add(PDTopTable10);
                        PDTopCell24.Width = 80;
                        PDTopTable9.AddCell(PDTopCell24);
                        ///////////////////////////////////////// end ability table 





                        Cell sapce = new Cell();
                        sapce.Add(new Paragraph("\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, Font.BOLD)));
                        PDTopTable9.AddCell(sapce);
                        PDTopTable9.AddCell(acell33);
                        Cell sapcee = new Cell();
                        sapcee.Add(new Paragraph("\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, Font.BOLD)));
                        PDTopTable9.AddCell(sapcee);

                        doc.Add(PDTopTable9);


                        doc.Add(dheyalogo);



                        //////////////////888888888888888888888888888888888888888888888888888



                        ///////////////////////////// page six

                        //  doc.NewPage();
                        //  iTextSharp.text.Image jpeg14 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/sixpage1.png"));
                        //  //jpeg.ScalePercent(35f);
                        //  jpeg14.ScaleToFit(550f, 500f);
                        //  // jpeg.SpacingAfter = -50f;
                        //  doc.Add(jpeg14);



                        //  iTextSharp.text.Table PDTopTable7 = new iTextSharp.text.Table(3);
                        //  PDTopTable7.Alignment = 0;
                        //  PDTopTable7.Width = 100;
                        //  // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        //  PDTopTable7.DefaultCellBorder = 0;
                        //  PDTopTable7.Border = 0;



                        //  Cell PDTopCell19 = new Cell();

                        //  Paragraph pp = new Paragraph();
                        //  Phrase phrase5 = new Phrase(18, new Chunk("Numerical Ability ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        //  Phrase phrase6 = new Phrase(18, new Chunk("  comprises of numerical computation, numerical estimation, numerical reasoning and data interpretation. A high score on the aptitude factor of Numerical ability would mean that you have greater understanding of numerical relationships and capacity in handling numerical concepts. This exhibits your ability to use numbers in a logical and rational way. Apart from having the ability to add, subtract, multiply and divide quickly and accurately, you are both quick and confident in your approach. It also demonstrates your ease with numbers. \n ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108,114))));
                        //  pp.Add(phrase5);
                        //  pp.Add(phrase6);
                        //  PDTopCell19.Add(pp);
                        //  //PDTopCell19.Add(new Paragraph("Numerical Ability ", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD, new Color(0, 64, 128))));
                        //  //PDTopCell19.Add(new Paragraph("Numerical ability comprises of numerical computation, numerical estimation, numerical reasoning and data interpretation. A high score on the aptitude factor of Numerical ability would mean that you have greater understanding of numerical relationships and capacity in handling numerical concepts. This exhibits your ability to use numbers in a logical and rational way. Apart from having the ability to add, subtract, multiply and divide quickly and accurately, you are both quick and confident in your approach. It also demonstrates your ease with numbers. \n ", FontFactory.GetFont(FontFactory.HELVETICA, 8)));

                        //  Paragraph pp1 = new Paragraph();
                        //  Phrase AbstractReasoning = new Phrase(18, new Chunk("\nAbstract Reasoning ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        //  Phrase AbstractReasoning1 = new Phrase(18, new Chunk("  assesses your ability to understand complex concepts and assimilate new information beyond previous experience. A high score on abstract reasoning would mean that you hold greater ability to analyze information and solve problems on a complex, thought-based level. Your abilities to apply knowledge in problem-solving using theory, metaphor, or complex analogy and understanding subjects on a complex level through analysis and evaluation, along with forming theories about the nature of objects, ideas, processes, and problem solving and understanding relationships between verbal and non-verbal ideas are useful where the job or task involves a high degree of problem solving, or dealing with complex data or concepts or developing strategies and policies and performing non-routine tasks where initiative is required. \n ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //  pp1.Add(AbstractReasoning);
                        //  pp1.Add(AbstractReasoning1);
                        //  PDTopCell19.Add(pp1);
                        //  //PDTopCell19.Add(new Paragraph("\nAbstract Reasoning ", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD, new Color(0, 64, 128))));
                        //  //PDTopCell19.Add(new Paragraph("Abstract Reasoning assesses your ability to understand complex concepts and assimilate new information beyond previous experience. A high score on abstract reasoning would mean that you hold greater ability to analyze information and solve problems on a complex, thought-based level. Your abilities to apply knowledge in problem-solving using theory, metaphor, or complex analogy and understanding subjects on a complex level through analysis and evaluation, along with forming theories about the nature of objects, ideas, processes, and problem solving and understanding relationships between verbal and non-verbal ideas are useful where the job or task involves a high degree of problem solving, or dealing with complex data or concepts or developing strategies and policies and performing non-routine tasks where initiative is required. \n\n", FontFactory.GetFont(FontFactory.HELVETICA, 8)));



                        //  Paragraph pp2 = new Paragraph();
                        //  Phrase SpatialVisualizationAbility = new Phrase(18, new Chunk("\nSpatial Visualization Ability ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        //  Phrase SpatialVisualizationAbility1 = new Phrase(18, new Chunk("  refers to the ability to mentally manipulate 2-dimensional and 3-dimensional figures or in other words it is the ability to manipulate representations of visual objects mentally. This skill requires estimation of one’s position in relation to a static object. A high score on spatial visualization ability would mean you have a greater ability to visualize a three dimensional object from a pattern and also to visualize an object if rotated in the space. It also means that you have a greater skill to analyze, visualize, comprehend and express imaginative signs and shapes and have the capability to identify forms from the patterns and vice versa. \n ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //  pp2.Add(SpatialVisualizationAbility);
                        //  pp2.Add(SpatialVisualizationAbility1);
                        //  PDTopCell19.Add(pp2);
                        //  //PDTopCell19.Add(new Paragraph("\nSpatial Visualization Ability ", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD, new Color(0, 64, 128))));
                        //  //PDTopCell19.Add(new Paragraph("Spatial Visualization Ability refers to the ability to mentally manipulate 2-dimensional and 3-dimensional figures or in other words it is the ability to manipulate representations of visual objects mentally. This skill requires estimation of one’s position in relation to a static object. A high score on spatial visualization ability would mean you have a greater ability to visualize a three dimensional object from a pattern and also to visualize an object if rotated in the space. It also means that you have a greater skill to analyze, visualize, comprehend and express imaginative signs and shapes and have the capability to identify forms from the patterns and vice versa. \n\n", FontFactory.GetFont(FontFactory.HELVETICA, 8)));


                        //  Paragraph pp3 = new Paragraph();
                        //  Phrase ConceptFormation = new Phrase(18, new Chunk("\nConcept Formation ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        //  Phrase ConceptFormation1 = new Phrase(18, new Chunk("  involves the recognition that some objects or events belong together while others do not. It is ability to develop abstract rules or mental constructs based on sensory experience. It entails an understanding of a phenomenon's characteristics and how they are logically linked. It is a learning process by which items are categorized and related to each other. A high score in concept formation would mean your ability to find commonalities among different concepts and to manipulate ideas on an abstract level. It shows you hold a greater ability of noting a fact or occurrence for a special purpose and also respond to common features of categories of objects or events. You also possess a greater ability to form a concept on the basis of generalization or grouping by developing mental categories for an objects, events or ideas that have a common set of features. \n ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //  pp3.Add(SpatialVisualizationAbility);
                        //  pp3.Add(SpatialVisualizationAbility1);
                        //  PDTopCell19.Add(pp3);
                        //  //PDTopCell19.Add(new Paragraph("\n Concept Formation ", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD, new Color(0, 64, 128))));
                        //  //PDTopCell19.Add(new Paragraph("Concept formation involves the recognition that some objects or events belong together while others do not. It is ability to develop abstract rules or mental constructs based on sensory experience. It entails an understanding of a phenomenon's characteristics and how they are logically linked. It is a learning process by which items are categorized and related to each other. A high score in concept formation would mean your ability to find commonalities among different concepts and to manipulate ideas on an abstract level. It shows you hold a greater ability of noting a fact or occurrence for a special purpose and also respond to common features of categories of objects or events. You also possess a greater ability to form a concept on the basis of generalization or grouping by developing mental categories for an objects, events or ideas that have a common set of features.\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 8)));

                        //  Paragraph pp4 = new Paragraph();
                        //  Phrase ObservationandSpatialTransformation = new Phrase(18, new Chunk("\n Observation and Spatial Transformation ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        //  Phrase ObservationandSpatialTransformation1 = new Phrase(18, new Chunk(" It is the ability to visualize spatial patterns and mentally manipulate them over a time-ordered sequence of spatial transformations. This ability is important for generating and conceptualizing solutions to multi-step problems that arise in areas such as architecture, engineering, science, mathematics, art, games, and everyday life. A high score in observation and spatial transformation would mean you hold a greater ability to assimilate information by viewing and observing an event or occurrence and responding to find out the hidden. You also possess a greater ability to identify a problem by observing and viewing. \n ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //  pp4.Add(ObservationandSpatialTransformation);
                        //  pp4.Add(ObservationandSpatialTransformation1);
                        //  PDTopCell19.Add(pp4);
                        //  //PDTopCell19.Add(new Paragraph("\n Observation and Spatial Transformation", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD, new Color(0, 64, 128))));
                        //  //PDTopCell19.Add(new Paragraph("It is the ability to visualize spatial patterns and mentally manipulate them over a time-ordered sequence of spatial transformations. This ability is important for generating and conceptualizing solutions to multi-step problems that arise in areas such as architecture, engineering, science, mathematics, art, games, and everyday life. A high score in observation and spatial transformation would mean you hold a greater ability to assimilate information by viewing and observing an event or occurrence and responding to find out the hidden. You also possess a greater ability to identify a problem by observing and viewing.\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 8)));

                        //  Paragraph pp5 = new Paragraph();
                        //  Phrase SpatialAwreness = new Phrase(18, new Chunk("\n Spatial Awreness ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        //  Phrase SpatialAwreness1 = new Phrase(18, new Chunk(" is the awareness of a fully 3 dimensional space. It is the skill to analyze, visualize, comprehend and express these imaginative signs and shapes. It demonstrates your ability to manipulate shapes in two dimensions or to visualize three-dimensional objects presented as two-dimensional pictures. A high score in this ability shows your capacity to interpret and make drawings, form mental images, and visualize movement or change in those images. You have the ability to solve critical problems in the complex real world. But more importantly, a developed spatial ability helps you to get contract letter for your dream specific job. \n ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //  pp5.Add(SpatialAwreness);
                        //  pp5.Add(SpatialAwreness1);
                        //  PDTopCell19.Add(pp5);
                        //  //PDTopCell19.Add(new Paragraph("\n Spatial Awreness ", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD, new Color(0, 64, 128))));
                        //  //PDTopCell19.Add(new Paragraph("Spatial Awareness is the awareness of a fully 3 dimensional space. It is the skill to analyze, visualize, comprehend and express these imaginative signs and shapes. It demonstrates your ability to manipulate shapes in two dimensions or to visualize three-dimensional objects presented as two-dimensional pictures. A high score in this ability shows your capacity to interpret and make drawings, form mental images, and visualize movement or change in those images. You have the ability to solve critical problems in the complex real world. But more importantly, a developed spatial ability helps you to get contract letter for your dream specific job. \n\n", FontFactory.GetFont(FontFactory.HELVETICA, 8)));

                        //  Paragraph pp6 = new Paragraph();
                        //  Phrase MemoryandRecall = new Phrase(18, new Chunk("\n Memory and Recall ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        //  Phrase MemoryandRecall1 = new Phrase(18, new Chunk(" It is the ability to recall images, sounds, or objects in memory with extreme accuracy and detail.  A high score in memory and recall would mean that you can store encoded information and later retrieve the same vividly for future usage. You also can identify whatever you have memorized in the past with greater ease. You possess the skill to retrieve prior learning or experiences by images or words. \n ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //  pp6.Add(MemoryandRecall);
                        //  pp6.Add(MemoryandRecall1);
                        //  PDTopCell19.Add(pp6);
                        //  //PDTopCell19.Add(new Paragraph("\n Memory and Recall", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD, new Color(0, 64, 128))));
                        //  //PDTopCell19.Add(new Paragraph("It is the ability to recall images, sounds, or objects in memory with extreme accuracy and detail.  A high score in memory and recall would mean that you can store encoded information and later retrieve the same vividly for future usage. You also can identify whatever you have memorized in the past with greater ease. You possess the skill to retrieve prior learning or experiences by images or words. \n\n", FontFactory.GetFont(FontFactory.HELVETICA, 8)));
                        //  PDTopCell19.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;




                        //  PDTopCell19.Width = 80;
                        //  PDTopTable7.AddCell(PDTopCell19);


                        //  ///////////////// graff for ability

                        //  //strcmd = "SELECT ability_code, P_rating FROM (select distinct c_id,test_id,ability_code,P_rating,rating from tbl_candidate_test_results where c_id = '" + c_id + "') as x where c_id = '" + c_id + "'order by test_id";
                        //  ////strcmd = "SELECT ability_code, P_rating FROM tbl_candidate_test_results where c_id = '" + c_id + "' order by test_id";
                        //  //DataSet ds_g = clsdal.ExecDataSet(strcmd);
                        //  //strdata = ds_g.Tables[0].Rows[6][1].ToString() + "," + ds_g.Tables[0].Rows[3][1].ToString() + "," + ds_g.Tables[0].Rows[4][1].ToString() + "," + ds_g.Tables[0].Rows[0][1].ToString() + "," + ds_g.Tables[0].Rows[2][1].ToString() + "," + ds_g.Tables[0].Rows[1][1].ToString() + "," + ds_g.Tables[0].Rows[5][1].ToString();
                        //  //iTextSharp.text.Image png1 = iTextSharp.text.Image.GetInstance("http://chart.apis.google.com/chart?cht=rs&chd=t:" + strdata + "&chs=300x300&chl=NA|AR|SVA|CF|OST|SA|MR&chco=000000&chls=2.0,4.0,0.0&chm=B,00000080,0,1.0,5.0|d,000000,0,0.0,10.0|d,000000,0,1.0,10.0|d,000000,0,2.0,10.0|d,000000,0,3.0,10.0|d,000000,0,4.0,10.0|d,000000,0,5.0,10.0|d,000000,0,6.0,10.0|d,000000,0,7.0,10.0&chxt=r&chxr=2,0,100");

                        //  //Cell acell3 = new Cell();
                        //  //acell3.Add(png1);
                        //  //acell3.Add(new Paragraph("\n"));
                        //  //acell3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        //  ////acell2.BorderColor = new Color(192, 192, 192);
                        //  //acell3.BackgroundColor = new Color(70, 114, 217);
                        //  //acell3.Border = 0;
                        //  //PDTopTable7.AddCell(acell3);

                        //  //////////////.net chartvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv


                        //  //#region Radar Chart

                        //  //AbilityBarChart.Visible = false;

                        //  //String StrSql = "SELECT ability_code, P_rating FROM (select distinct c_id,test_id,ability_code,P_rating,rating from tbl_candidate_test_results where c_id = '" + c_id + "') as x where c_id = '" + c_id + "'order by test_id";
                        //  //DataSet dsChart = clsdb_Xaction.ExecDataSet(StrSql);
                        //  //// Populate series data
                        //  //double[] yValues = { Convert.ToDouble(dsChart.Tables[0].Rows[0][1].ToString()), Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString()), Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString()), Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString()), Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString()), Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString()), Convert.ToDouble(dsChart.Tables[0].Rows[6][1].ToString()) };
                        //  //string[] xValues = { "NA", "AR", "SVA", "CF", "OST", "SA", "MR"};
                        //  //AbilityBarChart.Series["Series1"].Points.DataBindXY(xValues, yValues);

                        //  //// Set radar chart type
                        //  //AbilityBarChart.Series["Series1"].ChartType = System.Web.UI.DataVisualization.Charting.SeriesChartType.Radar;

                        //  //// Set radar chart style (Area, Line or Marker)
                        //  //AbilityBarChart.Series["Series1"]["RadarDrawingStyle"] = "Area";

                        //  //// Set circular area drawing style (Circle or Polygon)
                        //  //AbilityBarChart.Series["Series1"]["AreaDrawingStyle"] = "Circle";

                        //  //// Set labels style (Auto, Horizontal, Circular or Radial)
                        //  //AbilityBarChart.Series["Series1"]["CircularLabelsStyle"] = "Horizontal";

                        //  //// Show as 3D
                        //  ////AbilityBarChart.ChartAreas["ChartArea1"].Area3DStyle.Enable3D = true;

                        //  //AbilityBarChart.Width = 500;
                        //  //AbilityBarChart.Height = 250;

                        //  ////for saving image
                        //  //AbilityBarChart.SaveImage(Server.MapPath("./Reports_graph/" + candidate_name + ".png"), System.Web.UI.DataVisualization.Charting.ChartImageFormat.Png);
                        //  //# endregion




                        //  ///////////////////vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv



                        //  PDTopTable7.AddCell(acell33);

                        // // iTextSharp.text.Image png1 = iTextSharp.text.Image.GetInstance(@StrChartPath);






                        //  /////////     add bar chart ////////////////////////

                        //  iTextSharp.text.Table thirdTable = new iTextSharp.text.Table(1);

                        //  Cell thirdcell = new Cell();
                        //  switch (ds.Tables[0].Rows[6][1].ToString())
                        //  {
                        //      case "Very Low":
                        //          //thirdTable.Widths = new float[] { 20, 80 };
                        //          //thirdcell.Add(new Chunk("\n"));
                        //          //thirdcell.BackgroundColor = new Color(255, 0, 0);
                        //          //thirdcell.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcell.Add(verylow);

                        //          break;
                        //      case "Low":
                        //          //thirdTable.Widths = new float[] { 40, 60 };
                        //          //thirdcell.Add(new Chunk("\n"));
                        //          //thirdcell.BackgroundColor = new Color(255, 0, 0);
                        //          //thirdcell.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcell.Add(low);
                        //          break;
                        //      case "Moderate":
                        //          //thirdTable.Widths = new float[] { 60, 40 };
                        //          //thirdcell.Add(new Chunk("\n"));
                        //          //thirdcell.BackgroundColor = new Color(255, 255, 0);
                        //          //thirdcell.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcell.Add(middal);
                        //          break;
                        //      case "High":
                        //          //thirdTable.Widths = new float[] { 80, 20 };
                        //          //thirdcell.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, new Color(255, 255, 255))));
                        //          //thirdcell.BackgroundColor = new Color(0, 64, 0);
                        //          //thirdcell.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcell.Add(high);
                        //          break;
                        //      case "Very High":
                        //          //thirdTable.Widths = new float[] { 100, 0 };
                        //          //thirdcell.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, new Color(255, 255, 255))));
                        //          //thirdcell.BackgroundColor = new Color(0, 64, 0);
                        //          //thirdcell.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcell.Add(veryhigh);
                        //          break;
                        //  }
                        //  //thirdTable.Widths = new float[] { 50, 50 };
                        //  //Cell thirdcell = new Cell("Low");
                        //  //thirdcell.BackgroundColor = new Color(255, 0, 0);

                        //  thirdTable.AddCell(thirdcell);
                        //  //thirdTable.AddCell("");





                        //  iTextSharp.text.Table thirdTabl1 = new iTextSharp.text.Table(1);

                        //  Cell thirdcll1 = new Cell();
                        //  switch (ds.Tables[0].Rows[3][1].ToString())
                        //  {
                        //      case "Very Low":
                        //          //thirdTabl1.Widths = new float[] { 20, 80 };
                        //          //thirdcll1.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //          //thirdcll1.BackgroundColor = new Color(255, 0, 0);
                        //          //thirdcll1.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcll1.Add(verylow);
                        //          break;
                        //      case "Low":
                        //          //thirdTabl1.Widths = new float[] { 40, 60 };
                        //          //thirdcll1.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //          //thirdcll1.BackgroundColor = new Color(255, 0, 0);
                        //          //thirdcll1.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcll1.Add(low);
                        //          break;
                        //      case "Moderate":
                        //          //thirdTabl1.Widths = new float[] { 60, 40 };
                        //          //thirdcll1.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //          //thirdcll1.BackgroundColor = new Color(255, 255, 0);
                        //          //thirdcll1.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcll1.Add(middal);
                        //          break;
                        //      case "High":
                        //          //thirdTabl1.Widths = new float[] { 80, 20 };
                        //          //thirdcll1.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //          //thirdcll1.BackgroundColor = new Color(0, 64, 0);
                        //          //thirdcll1.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcll1.Add(high);
                        //          break;
                        //      case "Very High":
                        //          //thirdTabl1.Widths = new float[] { 100, 0 };
                        //          //thirdcll1.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, new Color(255, 255, 255))));
                        //          //thirdcll1.BackgroundColor = new Color(0, 64, 0);
                        //          //thirdcll1.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcll1.Add(veryhigh);
                        //          break;
                        //  }
                        //  //thirdTable.Widths = new float[] { 50, 50 };
                        //  //Cell thirdcell = new Cell("Low");
                        //  //thirdcell.BackgroundColor = new Color(255, 0, 0);

                        //  thirdTabl1.AddCell(thirdcll1);
                        // // thirdTabl1.AddCell("");


                        //  iTextSharp.text.Table thirdTabl2 = new iTextSharp.text.Table(1);

                        //  Cell thirdcll2 = new Cell();
                        //  switch (ds.Tables[0].Rows[4][1].ToString())
                        //  {
                        //      case "Very Low":
                        //          //thirdTabl2.Widths = new float[] { 20, 80 };
                        //          //thirdcll2.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //          //thirdcll2.BackgroundColor = new Color(255, 0, 0);
                        //          //thirdcll2.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcll2.Add(verylow);
                        //          break;
                        //      case "Low":
                        //          //thirdTabl2.Widths = new float[] { 40, 60 };
                        //          //thirdcll2.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //          //thirdcll2.BackgroundColor = new Color(255, 0, 0);
                        //          //thirdcll2.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcll2.Add(low);
                        //          break;
                        //      case "Moderate":
                        //          //thirdTabl2.Widths = new float[] { 60, 40 };
                        //          //thirdcll2.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //          //thirdcll2.BackgroundColor = new Color(255, 255, 0);
                        //          //thirdcll2.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcll2.Add(middal);
                        //          break;
                        //      case "High":
                        //          //thirdTabl2.Widths = new float[] { 80, 20 };
                        //          //thirdcll2.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //          //thirdcll2.BackgroundColor = new Color(0, 64, 0);
                        //          //thirdcll2.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcll2.Add(high);
                        //          break;
                        //      case "Very High":
                        //          //thirdTabl2.Widths = new float[] { 100, 0 };
                        //          //thirdcll2.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, new Color(255, 255, 255))));
                        //          //thirdcll2.BackgroundColor = new Color(0, 64, 0);
                        //          //thirdcll2.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcll2.Add(veryhigh);
                        //          break;
                        //  }
                        //  //thirdTable.Widths = new float[] { 50, 50 };
                        //  //Cell thirdcell = new Cell("Low");
                        //  //thirdcell.BackgroundColor = new Color(255, 0, 0);

                        //  thirdTabl2.AddCell(thirdcll2);
                        ////  thirdTabl2.AddCell("");


                        //  iTextSharp.text.Table thirdTabl3 = new iTextSharp.text.Table(1);
                        //  Cell thirdcll3 = new Cell();
                        //  switch (ds.Tables[0].Rows[0][1].ToString())
                        //  {
                        //      case "Very Low":
                        //          //thirdTabl3.Widths = new float[] { 20, 80 };
                        //          //thirdcll3.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //          //thirdcll3.BackgroundColor = new Color(255, 0, 0);
                        //          //thirdcll3.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcll3.Add(verylow);
                        //          break;
                        //      case "Low":
                        //          //thirdTabl3.Widths = new float[] { 40, 60 };
                        //          //thirdcll3.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //          //thirdcll3.BackgroundColor = new Color(255, 0, 0);
                        //          //thirdcll3.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcll3.Add(low);
                        //          break;
                        //      case "Moderate":
                        //          //thirdTabl3.Widths = new float[] { 60, 40 };
                        //          //thirdcll3.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //          //thirdcll3.BackgroundColor = new Color(255, 255, 0);
                        //          //thirdcll3.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcll3.Add(middal);
                        //          break;
                        //      case "High":
                        //          //thirdTabl3.Widths = new float[] { 80, 20 };
                        //          //thirdcll3.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //          //thirdcll3.BackgroundColor = new Color(0, 64, 0);
                        //          //thirdcll3.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcll3.Add(high);
                        //          break;
                        //      case "Very High":
                        //          //thirdTabl3.Widths = new float[] { 100, 0 };
                        //          //thirdcll3.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, new Color(255, 255, 255))));
                        //          //thirdcll3.BackgroundColor = new Color(0, 64, 0);
                        //          //thirdcll3.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcll3.Add(veryhigh);
                        //          break;
                        //  }
                        //  //thirdTable.Widths = new float[] { 50, 50 };
                        //  //Cell thirdcell = new Cell("Low");
                        //  //thirdcell.BackgroundColor = new Color(255, 0, 0);

                        //  thirdTabl3.AddCell(thirdcll3);
                        // // thirdTabl3.AddCell("");


                        //  iTextSharp.text.Table thirdTabl4 = new iTextSharp.text.Table(1);
                        //  Cell thirdcll4 = new Cell();
                        //  switch (ds.Tables[0].Rows[2][1].ToString())
                        //  {
                        //      case "Very Low":
                        //          //thirdTabl4.Widths = new float[] { 20, 80 };
                        //          //thirdcll4.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //          //thirdcll4.BackgroundColor = new Color(255, 0, 0);
                        //          //thirdcll4.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcll4.Add(verylow);
                        //          break;
                        //      case "Low":
                        //          //thirdTabl4.Widths = new float[] { 40, 60 };
                        //          //thirdcll4.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //          //thirdcll4.BackgroundColor = new Color(255, 0, 0);
                        //          //thirdcll4.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcll4.Add(low);
                        //          break;
                        //      case "Moderate":
                        //          //thirdTabl4.Widths = new float[] { 60, 40 };
                        //          //thirdcll4.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //          //thirdcll4.BackgroundColor = new Color(255, 255, 0);
                        //          //thirdcll4.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcll4.Add(middal);
                        //          break;
                        //      case "High":
                        //          //thirdTabl4.Widths = new float[] { 80, 20 };
                        //          //thirdcll4.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //          //thirdcll4.BackgroundColor = new Color(0, 64, 0);
                        //          //thirdcll4.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcll4.Add(high);
                        //          break;
                        //      case "Very High":
                        //          //thirdTabl4.Widths = new float[] { 100, 0 };
                        //          //thirdcll4.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, new Color(255, 255, 255))));
                        //          //thirdcll4.BackgroundColor = new Color(0, 64, 0);
                        //          //thirdcll4.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcll4.Add(veryhigh);
                        //          break;
                        //  }
                        //  //thirdTable.Widths = new float[] { 50, 50 };
                        //  //Cell thirdcell = new Cell("Low");
                        //  //thirdcell.BackgroundColor = new Color(255, 0, 0);

                        //  thirdTabl4.AddCell(thirdcll4);
                        // // thirdTabl4.AddCell("");



                        //  iTextSharp.text.Table thirdTabl5 = new iTextSharp.text.Table(1);
                        //  Cell thirdcll5 = new Cell();
                        //  switch (ds.Tables[0].Rows[1][1].ToString())
                        //  {
                        //      case "Very Low":
                        //          //thirdTabl5.Widths = new float[] { 20, 80 };
                        //          //thirdcll5.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //          //thirdcll5.BackgroundColor = new Color(255, 0, 0);
                        //          //thirdcll5.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcll5.Add(verylow);
                        //          break;
                        //      case "Low":
                        //          //thirdTabl5.Widths = new float[] { 40, 60 };
                        //          //thirdcll5.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //          //thirdcll5.BackgroundColor = new Color(255, 0, 0);
                        //          //thirdcll5.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcll5.Add(low);
                        //          break;
                        //      case "Moderate":
                        //          //thirdTabl5.Widths = new float[] { 60, 40 };
                        //          //thirdcll5.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //          //thirdcll5.BackgroundColor = new Color(255, 255, 0);
                        //          //thirdcll5.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcll5.Add(middal);
                        //          break;
                        //      case "High":
                        //          //thirdTabl5.Widths = new float[] { 80, 20 };
                        //          //thirdcll5.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //          //thirdcll5.BackgroundColor = new Color(0, 64, 0);
                        //          //thirdcll5.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcll5.Add(high);
                        //          break;
                        //      case "Very High":
                        //          //thirdTabl5.Widths = new float[] { 100, 0 };
                        //          //thirdcll5.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, new Color(255, 255, 255))));
                        //          //thirdcll5.BackgroundColor = new Color(0, 64, 0);
                        //          //thirdcll5.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcll5.Add(veryhigh);
                        //          break;
                        //  }
                        //  //thirdTable.Widths = new float[] { 50, 50 };
                        //  //Cell thirdcell = new Cell("Low");
                        //  //thirdcell.BackgroundColor = new Color(255, 0, 0);

                        //  thirdTabl5.AddCell(thirdcll5);
                        // // thirdTabl5.AddCell("");



                        //  iTextSharp.text.Table thirdTabl6 = new iTextSharp.text.Table(1);
                        //  Cell thirdcell6 = new Cell();
                        //  switch (ds.Tables[0].Rows[5][1].ToString())
                        //  {
                        //      case "Very Low":
                        //          //thirdTabl6.Widths = new float[] { 20, 80 };
                        //          //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //          //thirdcell6.BackgroundColor = new Color(255, 0, 0);
                        //          //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcell6.Add(verylow);
                        //          break;
                        //      case "Low":
                        //          //thirdTabl6.Widths = new float[] { 40, 60 };
                        //          //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //          //thirdcell6.BackgroundColor = new Color(255, 0, 0);
                        //          //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcell6.Add(low);
                        //          break;
                        //      case "Moderate":
                        //          //thirdTabl6.Widths = new float[] { 60, 40 };
                        //          //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //          //thirdcell6.BackgroundColor = new Color(255, 255, 0);
                        //          //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcell6.Add(middal);
                        //          break;
                        //      case "High":
                        //          //thirdTabl6.Widths = new float[] { 80, 20 };
                        //          //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //          //thirdcell6.BackgroundColor = new Color(0, 64, 0);
                        //          //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcell6.Add(high);
                        //          break;
                        //      case "Very High":
                        //          //thirdTabl6.Widths = new float[] { 100, 0 };
                        //          //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, new Color(255, 255, 255))));
                        //          //thirdcell6.BackgroundColor = new Color(0, 64, 0);
                        //          //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcell6.Add(veryhigh);
                        //          break;
                        //  }
                        //  //thirdTable.Widths = new float[] { 50, 50 };
                        //  //Cell thirdcell = new Cell("Low");
                        //  //thirdcell.BackgroundColor = new Color(255, 0, 0);

                        //  thirdTabl6.AddCell(thirdcell6);
                        // // thirdTabl6.AddCell("");


                        //  iTextSharp.text.Table thirdTabl7 = new iTextSharp.text.Table(1);
                        //  Cell thirdcell7 = new Cell();
                        //  switch (ds.Tables[0].Rows[6][1].ToString())
                        //  {
                        //      case "Very Low":
                        //          //thirdTabl6.Widths = new float[] { 20, 80 };
                        //          //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //          //thirdcell6.BackgroundColor = new Color(255, 0, 0);
                        //          //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcell7.Add(verylow);
                        //          break;
                        //      case "Low":
                        //          //thirdTabl6.Widths = new float[] { 40, 60 };
                        //          //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //          //thirdcell6.BackgroundColor = new Color(255, 0, 0);
                        //          //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcell7.Add(low);
                        //          break;
                        //      case "Moderate":
                        //          //thirdTabl6.Widths = new float[] { 60, 40 };
                        //          //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //          //thirdcell6.BackgroundColor = new Color(255, 255, 0);
                        //          //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcell7.Add(middal);
                        //          break;
                        //      case "High":
                        //          //thirdTabl6.Widths = new float[] { 80, 20 };
                        //          //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //          //thirdcell6.BackgroundColor = new Color(0, 64, 0);
                        //          //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcell7.Add(high);
                        //          break;
                        //      case "Very High":
                        //          //thirdTabl6.Widths = new float[] { 100, 0 };
                        //          //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, new Color(255, 255, 255))));
                        //          //thirdcell6.BackgroundColor = new Color(0, 64, 0);
                        //          //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //          thirdcell7.Add(veryhigh);
                        //          break;
                        //  }
                        //  //thirdTable.Widths = new float[] { 50, 50 };
                        //  //Cell thirdcell = new Cell("Low");
                        //  //thirdcell.BackgroundColor = new Color(255, 0, 0);

                        //  thirdTabl7.AddCell(thirdcell7);
                        //  // thirdTabl6.AddCell("");





                        //  /////////////end bar chart /////////////////////////


                        //  iTextSharp.text.Table barchart = new iTextSharp.text.Table(1);
                        //  barchart.BackgroundColor = new Color(45, 136, 204);

                        //  Cell barchartcell1 = new Cell();

                        //  barchartcell1.Add(thirdTable);
                        //  barchart.AddCell(barchartcell1);
                        //  Cell b = new Cell("\n");
                        //  b.BorderColor = new Color(255, 255, 255);
                        //  barchart.AddCell(b);

                        //  Cell barchartcell2 = new Cell();
                        //  barchartcell2.Add(thirdTabl2);
                        //  barchart.AddCell(barchartcell2);
                        //  Cell b1 = new Cell("\n");
                        //  b1.BorderColor = new Color(255, 255, 255);
                        //  barchart.AddCell(b1);

                        //  Cell barchartcell3 = new Cell();
                        //  barchartcell3.Add(thirdTabl3);
                        //  barchart.AddCell(barchartcell3);
                        //  Cell b2 = new Cell("\n");
                        //  b2.BorderColor = new Color(255, 255, 255);
                        //  barchart.AddCell(b2);

                        //  Cell barchartcell4 = new Cell();
                        //  barchartcell4.Add(thirdTabl4);
                        //  barchart.AddCell(barchartcell4);
                        //  Cell b3 = new Cell("\n");
                        //  b3.BorderColor = new Color(255, 255, 255);
                        //  barchart.AddCell(b3);

                        //  Cell barchartcell5 = new Cell();
                        //  barchartcell5.Add(thirdTabl5);
                        //  barchart.AddCell(barchartcell5);
                        //  Cell b4 = new Cell("\n");
                        //  b4.BorderColor=new Color(255, 255, 255);
                        //  barchart.AddCell(b4);

                        //  Cell barchartcell6 = new Cell();
                        //  barchartcell6.Add(thirdTabl6);
                        //  barchart.AddCell(barchartcell6);
                        //  Cell b5 = new Cell("\n");
                        //  b5.BorderColor = new Color(255, 255, 255);
                        //  barchart.AddCell(b5);



                        //  Cell barchartcell7 = new Cell();
                        //  barchartcell7.Add(thirdTabl7);
                        //  barchart.AddCell(barchartcell7);
                        //  barchart.DefaultVerticalAlignment = iTextSharp .text.Element.ALIGN_TOP;





                        //  Cell acell3 = new Cell();
                        // // acell3.Add(png1);
                        //  acell3.Add(barchart);


                        //  acell3.VerticalAlignment = iTextSharp .text.Element.ALIGN_TOP;
                        //  acell3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        //  //acell2.BorderColor = new Color(192, 192, 192);
                        //  acell3.BackgroundColor = new Color(45, 136, 204);
                        //  acell3.Border = 0;
                        //  PDTopTable7.AddCell(acell3);



                        //PDTopTable7.SetWidths(width);
                        //  doc.Add(PDTopTable7);


                        ///////////////////////// constraction page

                        iTextSharp.text.Image veryhigh = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/veryhibar.png"));
                        iTextSharp.text.Image high = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/hibar.png"));
                        iTextSharp.text.Image middal = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/middelbar.png"));
                        iTextSharp.text.Image low = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/barlow.png"));
                        iTextSharp.text.Image verylow = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/verylow.png"));


                        doc.Add(dheyalogo);
                        doc.NewPage();
                        iTextSharp.text.Image jpeg14 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/sixpage1.png"));
                        //jpeg.ScalePercent(35f);
                        jpeg14.ScaleToFit(600f, 550f);
                        jpeg14.SetAbsolutePosition(0, 600);
                        // jpeg.SpacingAfter = -50f;
                        doc.Add(jpeg14);


                        iTextSharp.text.Table maintablebb1 = new iTextSharp.text.Table(1);
                        maintablebb1.Width = 100;
                        maintablebb1.DefaultCellBorder = 0;
                        maintablebb1.Border = 0;


                        Cell maintabbl0 = new Cell();
                        maintabbl0.Add(new Paragraph("\n\n\n\n\n\n\n\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        Cell maintabbl1 = new Cell();
                        Cell maintabbl2 = new Cell();
                        Cell maintabbl3 = new Cell();
                        Cell maintabbl4 = new Cell();
                        Cell maintabbl5 = new Cell();
                        Cell maintabbl6 = new Cell();
                        Cell maintabbl7 = new Cell();


                        iTextSharp.text.Table tbb1 = new iTextSharp.text.Table(3);
                        tbb1.Alignment = 0;
                        tbb1.Width = 100;

                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        tbb1.DefaultCellBorder = 0;
                        tbb1.Border = 0;

                        //iTextSharp.text.Image endblock = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/endblock.png"));
                        //endblock.ScaleToFit(10f, 10f);
                        //Chunk imageChunk1 = new Chunk(endblock, 0, 0);
                        //Phrase limage = new Phrase();
                        //limage.Add(imageChunk1);


                        Cell btbCelll119 = new Cell();
                        btbCelll119.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;



                        Paragraph pp = new Paragraph();
                        Phrase phrase5 = new Phrase(18, new Chunk("\nNumerical Ability ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase phrase6 = new Phrase(18, new Chunk("comprises of numerical computation, numerical estimation, numerical reasoning and data interpretation. A high score on the aptitude factor of Numerical Ability would mean that you have greater understanding of numerical relationships and capacity in handling numerical concepts. This exhibits your ability to use numbers in a logical and rational way. Apart from having the ability to add, subtract, multiply and divide quickly and accurately, you are both quick and confident in your approach. It also demonstrates your ease with numbers.", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp.Add(phrase5);
                        pp.Add(phrase6);
                        pp.Add(limage);
                        btbCelll119.Add(pp);



                        tbb1.AddCell(btbCelll119);
                        tbb1.AddCell(acell33);
                        tbb1.SetWidths(width);


                        Cell btbcellbb = new Cell();
                        btbcellbb.BackgroundColor = new Color(45, 136, 204);
                        btbcellbb.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        switch (dssssssss.Tables[0].Rows[6][1].ToString())
                        {
                            case "Very Low":

                                btbcellbb.Add(verylow);

                                break;
                            case "Low":

                                btbcellbb.Add(low);
                                break;
                            case "Moderate":

                                btbcellbb.Add(middal);
                                break;
                            case "High":

                                btbcellbb.Add(high);
                                break;
                            case "Very High":

                                btbcellbb.Add(veryhigh);
                                break;
                        }
                        btbcellbb.Add(new Paragraph(dssssssss.Tables[0].Rows[6][1].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        btbcellbb.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        btbcellbb.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        tbb1.AddCell(btbcellbb);
                        // doc.Add(PDTopTableee7);
                        maintabbl1.Add(tbb1);



                        //////   second row

                        iTextSharp.text.Table tbb2 = new iTextSharp.text.Table(3);
                        tbb2.Alignment = 0;
                        tbb2.Width = 100;

                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        tbb2.DefaultCellBorder = 0;
                        tbb2.Border = 0;




                        Cell btbCelll1110 = new Cell();
                        btbCelll1110.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;



                        Paragraph pp1 = new Paragraph();
                        Phrase AbstractReasoning = new Phrase(18, new Chunk("\nAbstract Reasoning ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase AbstractReasoning1 = new Phrase(18, new Chunk("assesses your ability to understand complex concepts and assimilate new information beyond previous experience. A high score on abstract reasoning would mean that you hold greater ability to analyze information and solve problems on a complex, thought-based level. Your abilities to apply knowledge in problem-solving using theory, metaphor, or complex analogy and understanding subjects on a complex level through analysis and evaluation, along with forming theories about the nature of objects, ideas, processes, and problem solving and understanding relationships between verbal and non-verbal ideas are useful where the job or task involves a high degree of problem solving, or dealing with complex data or concepts or developing strategies and policies and performing non-routine tasks where initiative is required.", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp1.Add(AbstractReasoning);
                        pp1.Add(AbstractReasoning1);
                        pp1.Add(limage);
                        btbCelll1110.Add(pp1);





                        tbb2.AddCell(btbCelll1110);
                        tbb2.AddCell(acell33);
                        tbb2.SetWidths(width);


                        Cell btbcellbb1 = new Cell();
                        btbcellbb1.BackgroundColor = new Color(45, 136, 204);
                        btbcellbb1.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        switch (dssssssss.Tables[0].Rows[3][1].ToString())
                        {
                            case "Very Low":

                                btbcellbb1.Add(verylow);

                                break;
                            case "Low":

                                btbcellbb1.Add(low);
                                break;
                            case "Moderate":

                                btbcellbb1.Add(middal);
                                break;
                            case "High":

                                btbcellbb1.Add(high);
                                break;
                            case "Very High":

                                btbcellbb1.Add(veryhigh);
                                break;
                        }
                        btbcellbb1.Add(new Paragraph(dssssssss.Tables[0].Rows[3][1].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        btbcellbb1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        btbcellbb1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        tbb2.AddCell(btbcellbb1);
                        // doc.Add(PDTopTableee7);
                        maintabbl2.Add(tbb2);



                        //////   third row

                        iTextSharp.text.Table tbb3 = new iTextSharp.text.Table(3);
                        tbb3.Alignment = 0;
                        tbb3.Width = 100;

                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        tbb3.DefaultCellBorder = 0;
                        tbb3.Border = 0;

                        iTextSharp.text.Image lastpatch = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/lastpatch.png"));
                        lastpatch.ScaleToFit(190f, 190f);
                        lastpatch.SetAbsolutePosition(369, -45);
                        //doc.Add(lastpatch);

                        Cell btbCelll1111 = new Cell();
                        btbCelll1111.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;

                        Paragraph pp2 = new Paragraph();
                        Phrase SpatialVisualizationAbility = new Phrase(18, new Chunk("\nSpatial Visualization Ability ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase SpatialVisualizationAbility1 = new Phrase(18, new Chunk("refers to the ability to mentally manipulate 2-dimensional and 3-dimensional figures or in other words it is the ability to manipulate representations of visual objects mentally. This skill requires estimation of one’s position in relation to a static object. A high score on spatial visualization ability would mean you have a greater ability to visualize a three dimensional object from a pattern and also to visualize an object if rotated in the space. It also means that you have a greater skill to analyze, visualize, comprehend and express imaginative signs and shapes and have the capability to identify forms from the patterns and vice versa.  ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp2.Add(SpatialVisualizationAbility);
                        pp2.Add(SpatialVisualizationAbility1);
                        pp2.Add(limage);
                        btbCelll1111.Add(pp2);



                        tbb3.AddCell(btbCelll1111);
                        tbb3.AddCell(acell33);
                        tbb3.SetWidths(width);


                        Cell btbcellbb2 = new Cell();
                        btbcellbb2.BackgroundColor = new Color(45, 136, 204);
                        btbcellbb2.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        switch (dssssssss.Tables[0].Rows[4][1].ToString())
                        {
                            case "Very Low":

                                btbcellbb2.Add(verylow);

                                break;
                            case "Low":

                                btbcellbb2.Add(low);
                                break;
                            case "Moderate":

                                btbcellbb2.Add(middal);
                                break;
                            case "High":

                                btbcellbb2.Add(high);
                                break;
                            case "Very High":

                                btbcellbb2.Add(veryhigh);
                                break;
                        }
                        btbcellbb2.Add(new Paragraph(dssssssss.Tables[0].Rows[4][1].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        btbcellbb2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        btbcellbb2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        tbb3.AddCell(btbcellbb2);
                        // doc.Add(PDTopTableee7);
                        maintabbl3.Add(tbb3);



                        ////////////////////////////////////////////////////////////////////////////////////

                        iTextSharp.text.Table tbb7 = new iTextSharp.text.Table(3);
                        tbb7.Alignment = 0;
                        tbb7.Width = 100;

                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        tbb7.DefaultCellBorder = 0;
                        tbb7.Border = 0;

                        doc.Add(dheyalogo);


                        Cell btbCelll1115 = new Cell();
                        btbCelll1115.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;


                        Paragraph ppr7 = new Paragraph();

                        Phrase ConceptFormation = new Phrase(18, new Chunk("\nConcept Formation ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase ConceptFormation1 = new Phrase(18, new Chunk("Concept Formation involves the recognition that some objects or events belong together while others do not. It is ability to develop abstract rules or mental constructs based on sensory experience. It entails an understanding of a phenomenon's characteristics and how they are logically linked. It is a learning process by which items are categorized and related to each other. A high score in concept formation would mean your ability to find commonalities among different concepts and to manipulate ideas on an abstract level. It shows you hold a greater ability of noting a fact or occurrence for a special purpose and also respond to common features of categories of objects or events. You also possess a greater ability to form a concept on the basis of generalization or grouping by developing mental categories for an objects, events or ideas that have a common set of features.", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        ppr7.Add(ConceptFormation);
                        ppr7.Add(ConceptFormation1);
                        ppr7.Add(limage);
                        btbCelll1115.Add(ppr7);


                        tbb7.AddCell(btbCelll1115);
                        tbb7.AddCell(acell33);
                        tbb7.SetWidths(width);


                        Cell btbcellbb6 = new Cell();
                        btbcellbb6.BackgroundColor = new Color(45, 136, 204);
                        btbcellbb6.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        switch (dssssssss.Tables[0].Rows[0][1].ToString())
                        {
                            case "Very Low":

                                btbcellbb6.Add(verylow);

                                break;
                            case "Low":

                                btbcellbb6.Add(low);
                                break;
                            case "Moderate":

                                btbcellbb6.Add(middal);
                                break;
                            case "High":

                                btbcellbb6.Add(high);
                                break;
                            case "Very High":

                                btbcellbb6.Add(veryhigh);
                                break;
                        }
                        btbcellbb6.Add(new Paragraph(dssssssss.Tables[0].Rows[0][1].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        btbcellbb6.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        btbcellbb6.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        tbb7.AddCell(btbcellbb6);
                        // doc.Add(PDTopTableee7);
                        maintabbl4.Add(tbb7);




                        ////// fourth row

                        iTextSharp.text.Table tbb4 = new iTextSharp.text.Table(3);
                        tbb4.Alignment = 0;
                        tbb4.Width = 100;

                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        tbb4.DefaultCellBorder = 0;
                        tbb4.Border = 0;




                        Cell btbCelll1112 = new Cell();
                        btbCelll1112.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;



                        Paragraph pp4 = new Paragraph();
                        Phrase ObservationandSpatialTransformation = new Phrase(18, new Chunk("\nObservation and Spatial Transformation ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase ObservationandSpatialTransformation1 = new Phrase(18, new Chunk(" It is the ability to visualize spatial patterns and mentally manipulate them over a time-ordered sequence of spatial transformations. This ability is important for generating and conceptualizing solutions to multi-step problems that arise in areas such as architecture, engineering, science, mathematics, art, games, and everyday life. A high score in observation and spatial transformation would mean you hold a greater ability to assimilate information by viewing and observing an event or occurrence and responding to find out the hidden. You also possess a greater ability to identify a problem by observing and viewing.", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp4.Add(ObservationandSpatialTransformation);
                        pp4.Add(ObservationandSpatialTransformation1);
                        pp4.Add(limage);
                        btbCelll1112.Add(pp4);



                        tbb4.AddCell(btbCelll1112);
                        tbb4.AddCell(acell33);
                        tbb4.SetWidths(width);


                        Cell btbcellbb3 = new Cell();
                        btbcellbb3.BackgroundColor = new Color(45, 136, 204);
                        btbcellbb3.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        switch (dssssssss.Tables[0].Rows[2][1].ToString())
                        {
                            case "Very Low":

                                btbcellbb3.Add(verylow);

                                break;
                            case "Low":

                                btbcellbb3.Add(low);
                                break;
                            case "Moderate":

                                btbcellbb3.Add(middal);
                                break;
                            case "High":

                                btbcellbb3.Add(high);
                                break;
                            case "Very High":

                                btbcellbb3.Add(veryhigh);
                                break;
                        }
                        btbcellbb3.Add(new Paragraph(dssssssss.Tables[0].Rows[2][1].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        btbcellbb3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        btbcellbb3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                        tbb4.AddCell(btbcellbb3);
                        // doc.Add(PDTopTableee7);
                        maintabbl5.Add(tbb4);


                        ////// fifth row

                        iTextSharp.text.Table tbb5 = new iTextSharp.text.Table(3);
                        tbb5.Alignment = 0;
                        tbb5.Width = 100;

                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        tbb5.DefaultCellBorder = 0;
                        tbb5.Border = 0;




                        Cell btbCelll1113 = new Cell();
                        btbCelll1113.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;



                        Paragraph pp5 = new Paragraph();
                        Phrase SpatialAwreness = new Phrase(18, new Chunk("\nSpatial Awareness ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase SpatialAwreness1 = new Phrase(18, new Chunk(" is the awareness of a fully 3 dimensional space. It is the skill to analyze, visualize, comprehend and express these imaginative signs and shapes. It demonstrates your ability to manipulate shapes in two dimensions or to visualize three-dimensional objects presented as two-dimensional pictures. A high score in this ability shows your capacity to interpret and make drawings, form mental images, and visualize movement or change in those images. You have the ability to solve critical problems in the complex real world. But more importantly, a developed spatial ability helps you to get contract letter for your dream specific job. ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp5.Add(SpatialAwreness);
                        pp5.Add(SpatialAwreness1);
                        pp5.Add(limage);
                        btbCelll1113.Add(pp5);


                        tbb5.AddCell(btbCelll1113);
                        tbb5.AddCell(acell33);
                        tbb5.SetWidths(width);


                        Cell btbcellbb4 = new Cell();
                        btbcellbb4.BackgroundColor = new Color(45, 136, 204);
                        btbcellbb4.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        switch (dssssssss.Tables[0].Rows[1][1].ToString())
                        {
                            case "Very Low":

                                btbcellbb4.Add(verylow);

                                break;
                            case "Low":

                                btbcellbb4.Add(low);
                                break;
                            case "Moderate":

                                btbcellbb4.Add(middal);
                                break;
                            case "High":

                                btbcellbb4.Add(high);
                                break;
                            case "Very High":

                                btbcellbb4.Add(veryhigh);
                                break;
                        }
                        btbcellbb4.Add(new Paragraph(dssssssss.Tables[0].Rows[1][1].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        btbcellbb4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        btbcellbb4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        tbb5.AddCell(btbcellbb4);
                        // doc.Add(PDTopTableee7);
                        maintabbl6.Add(tbb5);


                        ////// sixth row

                        iTextSharp.text.Table tbb6 = new iTextSharp.text.Table(3);
                        tbb6.Alignment = 0;
                        tbb6.Width = 100;

                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        tbb6.DefaultCellBorder = 0;
                        tbb6.Border = 0;




                        Cell btbCelll1114 = new Cell();
                        btbCelll1114.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;




                        Paragraph pp6 = new Paragraph();
                        Phrase MemoryandRecall = new Phrase(18, new Chunk("\nMemory and Recall ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase MemoryandRecall1 = new Phrase(18, new Chunk(" It is the ability to recall images, sounds, or objects in memory with extreme accuracy and detail.  A high score in memory and recall would mean that you can store encoded information and later retrieve the same vividly for future usage. You also can identify whatever you have memorized in the past with greater ease. You possess the skill to retrieve prior learning or experiences by images or words.", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp6.Add(MemoryandRecall);
                        pp6.Add(MemoryandRecall1);
                        pp6.Add(limage);
                        btbCelll1114.Add(pp6);


                        tbb6.AddCell(btbCelll1114);
                        tbb6.AddCell(acell33);
                        tbb6.SetWidths(width);


                        Cell btbcellbb5 = new Cell();
                        btbcellbb5.BackgroundColor = new Color(45, 136, 204);
                        btbcellbb5.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        switch (dssssssss.Tables[0].Rows[5][1].ToString())
                        {
                            case "Very Low":

                                btbcellbb5.Add(verylow);

                                break;
                            case "Low":

                                btbcellbb5.Add(low);
                                break;
                            case "Moderate":

                                btbcellbb5.Add(middal);
                                break;
                            case "High":

                                btbcellbb5.Add(high);
                                break;
                            case "Very High":

                                btbcellbb5.Add(veryhigh);
                                break;
                        }
                        btbcellbb5.Add(new Paragraph(dssssssss.Tables[0].Rows[5][1].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        btbcellbb5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        btbcellbb5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        tbb6.AddCell(btbcellbb5);
                        // doc.Add(PDTopTableee7);
                        maintabbl7.Add(tbb6);




                        maintablebb1.AddCell(maintabbl0);
                        maintablebb1.AddCell(maintabbl1);
                        maintablebb1.AddCell(maintabbl2);
                        maintablebb1.AddCell(maintabbl3);
                        maintablebb1.AddCell(maintabbl4);
                        maintablebb1.AddCell(maintabbl5);
                        maintablebb1.AddCell(maintabbl6);
                        maintablebb1.AddCell(maintabbl7);
                        doc.Add(maintablebb1);


                        //////////////////////////////// page seven///////////////////////

                        doc.Add(dheyalogo);


                        doc.NewPage();
                        ps1();
                        // persnalitychart();

                        iTextSharp.text.Table PDTopTable999 = new iTextSharp.text.Table(3);
                        PDTopTable999.Alignment = 0;
                        PDTopTable999.Width = 100;
                        // PDTopTable9.Padding = 20f;
                        PDTopTable999.SetWidths(yy);
                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        PDTopTable999.DefaultCellBorder = 0;
                        PDTopTable999.Border = 0;




                        Cell PDTopCell25 = new Cell();

                        Paragraph pop1 = new Paragraph();
                        pop1.SetLeading(25.0f, 25.0f);
                        Phrase ph2 = new Phrase(18, new Chunk("SUMMARY OF YOUR PERSONALITY STRENGTHS ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase ph3 = new Phrase(18, new Chunk("Your personality from within is your identity. What you see from outside is just your behavior. However your behavior is driven by your attitude, your thinking, your values, your up-bringing etc. In the assessments we are assessing your personality based on 9 factors that define your behavior and that would make a difference on to your performance on a long term.We call this as your behavioral assets.", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pop1.Add(ph2);
                        pop1.Add(ph3);
                        pop1.Add(limage);
                        PDTopCell25.Add(pop1);
                        PDTopCell25.Width = 80;
                        PDTopCell25.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        PDTopTable999.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_TOP;
                        PDTopTable999.AddCell(PDTopCell25);

                        PDTopTable999.AddCell(acell33);



                        //////////////////////////////////////add PERSONALITY STRENGTHS table#####################################################################
                        ///////////////////////////////////##################################/////////////////////////////////////////////////////////////////////



                        iTextSharp.text.Table PDTopTable11 = new iTextSharp.text.Table(4);
                        PDTopTable11.Alignment = 0;
                        PDTopTable11.Width = 100;

                        // PDTopTable10.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        //PDTopTable10.DefaultCellBorder = 0;
                        //PDTopTable10.Border = 0;

                        ////////////////////// Add table heading
                        Cell persnality_heading_cell1 = new Cell();
                        persnality_heading_cell1.Add(new Paragraph("Behavior", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        persnality_heading_cell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        persnality_heading_cell1.Width = 80;

                        persnality_heading_cell1.BackgroundColor = new Color(231, 206, 37);
                        persnality_heading_cell1.BorderWidth = 2f;
                        persnality_heading_cell1.BorderColor = new Color(255, 255, 255);
                        persnality_heading_cell1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        persnality_heading_cell1.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopTable11.AddCell(persnality_heading_cell1);

                        Cell persnality_heading_cell2 = new Cell();
                        persnality_heading_cell2.Add(new Paragraph("Rating", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        persnality_heading_cell2.Width = 80;
                        persnality_heading_cell2.BackgroundColor = new Color(231, 206, 37);
                        persnality_heading_cell2.BorderWidth = 2f;
                        persnality_heading_cell2.BorderColor = new Color(255, 255, 255);
                        persnality_heading_cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        persnality_heading_cell2.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopTable11.AddCell(persnality_heading_cell2);

                        Cell persnality_heading_cell3 = new Cell();
                        persnality_heading_cell3.Add(new Paragraph("Percentile", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        persnality_heading_cell3.Width = 80;
                        persnality_heading_cell3.BackgroundColor = new Color(231, 206, 37);
                        persnality_heading_cell3.BorderWidth = 2f;
                        persnality_heading_cell3.BorderColor = new Color(255, 255, 255);
                        persnality_heading_cell3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        persnality_heading_cell3.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopTable11.AddCell(persnality_heading_cell3);

                        Cell persnality_heading_cell4 = new Cell();
                        persnality_heading_cell4.Add(new Paragraph("Rating", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        persnality_heading_cell4.Width = 80;
                        persnality_heading_cell4.BackgroundColor = new Color(231, 206, 37);
                        persnality_heading_cell4.BorderWidth = 2f;
                        persnality_heading_cell4.BorderColor = new Color(255, 255, 255);
                        persnality_heading_cell4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        persnality_heading_cell4.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                        PDTopTable11.AddCell(persnality_heading_cell4);

                        ////////////////////// end table heading


                        /////////////////////// get marks of candidate 





                        //////////////////////// end get marks of candidate



                        ///////// table first row
                        Cell first_row_cell1 = new Cell();
                        String chart2lblname = "";
                        switch (ds1.Tables[0].Rows[0][2].ToString())
                        {
                            case "1":
                                chart2lblname = "Relationships";
                                break;
                            case "2":
                                chart2lblname = "Emotional Stability";
                                break;
                            case "3":
                                chart2lblname = "Assertiveness";
                                break;
                            case "4":
                                chart2lblname = "Enthusiasm";
                                break;
                            case "5":
                                chart2lblname = "Conscientious";
                                break;
                            case "6":
                                chart2lblname = "Responsiveness";
                                break;
                            case "7":
                                chart2lblname = "Tough Minded";
                                break;
                            case "8":
                                chart2lblname = "Self Assurance";
                                break;
                            case "9":
                                chart2lblname = "Relaxed";
                                break;
                        }


                        first_row_cell1.Add(new Paragraph(chart2lblname.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        first_row_cell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));
                        first_row_cell1.Width = 80;
                        first_row_cell1.BackgroundColor = new Color(219, 219, 219);
                        first_row_cell1.BorderWidth = 2f;
                        first_row_cell1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        first_row_cell1.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        first_row_cell1.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(first_row_cell1);

                        Cell first_row_cell2 = new Cell();


                        //////////////  rectangle of line 1
                        # region r11

                        iTextSharp.text.Table per1 = new iTextSharp.text.Table(5);
                        Cell per_thirdcell1 = new Cell();
                        per_thirdcell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_thirdcell1.Width = 2;
                        per_thirdcell1.BackgroundColor = new Color(225, 225, 0);
                        per_thirdcell1.BorderWidth = 4f;
                        per_thirdcell1.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell1);

                        Cell per_thirdcell2 = new Cell();
                        per_thirdcell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_thirdcell2.Width = 2;
                        per_thirdcell2.BackgroundColor = new Color(225, 225, 0);
                        per_thirdcell2.BorderWidth = 4f;
                        per_thirdcell2.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell2);

                        Cell per_thirdcell3 = new Cell();
                        per_thirdcell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_thirdcell3.Width = 2;
                        per_thirdcell3.BackgroundColor = new Color(225, 225, 0);
                        per_thirdcell3.BorderWidth = 4f;
                        per_thirdcell3.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell3);

                        Cell per_thirdcell4 = new Cell();
                        per_thirdcell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_thirdcell4.Width = 2;
                        per_thirdcell4.BackgroundColor = new Color(225, 225, 0);
                        per_thirdcell4.BorderWidth = 4f;
                        per_thirdcell4.BorderColor = new Color(255, 255, 255);
                        //thirdTable1.AddCell(thirdcell4);

                        Cell per_thirdcell5 = new Cell();
                        per_thirdcell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_thirdcell5.Width = 2;
                        per_thirdcell5.BackgroundColor = new Color(225, 225, 0);
                        per_thirdcell5.BorderWidth = 4f;
                        per_thirdcell5.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell5);



                        switch (ds1.Tables[0].Rows[0][0].ToString())
                        {
                            case "Very Low":

                                per_thirdcell1.BackgroundColor = new Color(225, 225, 0);
                                per_thirdcell2.BackgroundColor = new Color(71, 65, 18);
                                per_thirdcell3.BackgroundColor = new Color(71, 65, 18);
                                per_thirdcell4.BackgroundColor = new Color(71, 65, 18);
                                per_thirdcell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Low":

                                per_thirdcell1.BackgroundColor = new Color(225, 225, 0);
                                per_thirdcell2.BackgroundColor = new Color(225, 225, 0);
                                per_thirdcell3.BackgroundColor = new Color(71, 65, 18);
                                per_thirdcell4.BackgroundColor = new Color(71, 65, 18);
                                per_thirdcell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Moderate":

                                per_thirdcell1.BackgroundColor = new Color(225, 225, 0);
                                per_thirdcell2.BackgroundColor = new Color(225, 225, 0);
                                per_thirdcell3.BackgroundColor = new Color(225, 225, 0);
                                per_thirdcell4.BackgroundColor = new Color(71, 65, 18);
                                per_thirdcell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "High":

                                per_thirdcell1.BackgroundColor = new Color(225, 225, 0);
                                per_thirdcell2.BackgroundColor = new Color(225, 225, 0);
                                per_thirdcell3.BackgroundColor = new Color(225, 225, 0);
                                per_thirdcell4.BackgroundColor = new Color(225, 225, 0);
                                per_thirdcell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Very High":

                                per_thirdcell1.BackgroundColor = new Color(225, 225, 0);
                                per_thirdcell2.BackgroundColor = new Color(225, 225, 0);
                                per_thirdcell3.BackgroundColor = new Color(225, 225, 0);
                                per_thirdcell4.BackgroundColor = new Color(225, 225, 0);
                                per_thirdcell5.BackgroundColor = new Color(225, 225, 0);

                                break;
                        }

                        per1.AddCell(per_thirdcell1);
                        per1.AddCell(per_thirdcell2);
                        per1.AddCell(per_thirdcell3);
                        per1.AddCell(per_thirdcell4);
                        per1.AddCell(per_thirdcell5);
                        per1.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        per1.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        ////////////////////////////////////////////////////


                        // first_row_cell2.Add(per1);
                        # endregion

                        switch (ds1.Tables[0].Rows[0][0].ToString())
                        {
                            case "Very Low":

                                first_row_cell2.Add(rverylow);

                                break;
                            case "Low":

                                first_row_cell2.Add(rlow);

                                break;
                            case "Moderate":

                                first_row_cell2.Add(rmodrate);

                                break;
                            case "High":

                                first_row_cell2.Add(rhigh);

                                break;
                            case "Very High":

                                first_row_cell2.Add(rveryhi);

                                break;
                        }



                        first_row_cell2.Width = 80;
                        first_row_cell2.BackgroundColor = new Color(219, 219, 219);
                        first_row_cell2.BorderWidth = 2f;
                        first_row_cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        first_row_cell2.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        first_row_cell2.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(first_row_cell2);

                        Cell first_row_cell3 = new Cell();

                        float fff = (float)System.Convert.ToSingle(ds1.Tables[0].Rows[0][1].ToString());
                        int perf = (int)Math.Ceiling(fff);

                        first_row_cell3.Add(new Paragraph(perf.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        first_row_cell3.Width = 80;
                        first_row_cell3.BackgroundColor = new Color(219, 219, 219);
                        first_row_cell3.BorderWidth = 2f;
                        first_row_cell3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        first_row_cell3.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        first_row_cell3.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(first_row_cell3);

                        Cell first_row_cell4 = new Cell();
                        first_row_cell4.Add(new Paragraph(ds1.Tables[0].Rows[0][0].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        first_row_cell4.Width = 80;
                        first_row_cell4.BackgroundColor = new Color(219, 219, 219);
                        first_row_cell4.BorderWidth = 2f;
                        first_row_cell4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        first_row_cell4.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        first_row_cell4.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(first_row_cell4);


                        /////////// table second row

                        Cell second_row_cell1 = new Cell();

                        switch (ds1.Tables[0].Rows[1][2].ToString())
                        {
                            case "1":
                                chart2lblname = "Relationships";
                                break;
                            case "2":
                                chart2lblname = "Emotional Stability";
                                break;
                            case "3":
                                chart2lblname = "Assertiveness";
                                break;
                            case "4":
                                chart2lblname = "Enthusiasm";
                                break;
                            case "5":
                                chart2lblname = "Conscientious";
                                break;
                            case "6":
                                chart2lblname = "Responsiveness";
                                break;
                            case "7":
                                chart2lblname = "Tough Minded";
                                break;
                            case "8":
                                chart2lblname = "Self Assurance";
                                break;
                            case "9":
                                chart2lblname = "Relaxed";
                                break;
                        }


                        second_row_cell1.Add(new Paragraph(chart2lblname.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        second_row_cell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));
                        second_row_cell1.Width = 80;
                        second_row_cell1.BorderWidth = 2f;
                        second_row_cell1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        second_row_cell1.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        second_row_cell1.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(second_row_cell1);

                        Cell second_row_cell2 = new Cell();


                        //////////////  rectangle of line 2
                        # region r22
                        iTextSharp.text.Table per_line2rect = new iTextSharp.text.Table(5);
                        Cell per_line2rect_cell1 = new Cell();
                        per_line2rect_cell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line2rect_cell1.Width = 2;
                        per_line2rect_cell1.BackgroundColor = new Color(204, 186, 60);
                        per_line2rect_cell1.BorderWidth = 4f;
                        per_line2rect_cell1.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell1);

                        Cell per_line2rect_cell2 = new Cell();
                        per_line2rect_cell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line2rect_cell2.Width = 2;
                        per_line2rect_cell2.BackgroundColor = new Color(204, 186, 60);
                        per_line2rect_cell2.BorderWidth = 4f;
                        per_line2rect_cell2.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell2);

                        Cell per_line2rect_cell3 = new Cell();
                        per_line2rect_cell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line2rect_cell3.Width = 2;
                        per_line2rect_cell3.BackgroundColor = new Color(204, 186, 60);
                        per_line2rect_cell3.BorderWidth = 4f;
                        per_line2rect_cell3.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell3);

                        Cell per_line2rect_cell4 = new Cell();
                        per_line2rect_cell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line2rect_cell4.Width = 2;
                        per_line2rect_cell4.BackgroundColor = new Color(204, 186, 60);
                        per_line2rect_cell4.BorderWidth = 4f;
                        per_line2rect_cell4.BorderColor = new Color(255, 255, 255);
                        //thirdTable1.AddCell(thirdcell4);

                        Cell per_line2rect_cell5 = new Cell();
                        per_line2rect_cell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line2rect_cell5.Width = 2;
                        per_line2rect_cell5.BackgroundColor = new Color(204, 186, 60);
                        per_line2rect_cell5.BorderWidth = 4f;
                        per_line2rect_cell5.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell5);



                        switch (ds1.Tables[0].Rows[1][0].ToString())
                        {
                            case "Very Low":

                                per_line2rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line2rect_cell2.BackgroundColor = new Color(71, 65, 18);
                                per_line2rect_cell3.BackgroundColor = new Color(71, 65, 18);
                                per_line2rect_cell4.BackgroundColor = new Color(71, 65, 18);
                                per_line2rect_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Low":

                                per_line2rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line2rect_cell2.BackgroundColor = new Color(225, 225, 0);
                                per_line2rect_cell3.BackgroundColor = new Color(71, 65, 18);
                                per_line2rect_cell4.BackgroundColor = new Color(71, 65, 18);
                                per_line2rect_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Moderate":

                                per_line2rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line2rect_cell2.BackgroundColor = new Color(225, 225, 0);
                                per_line2rect_cell3.BackgroundColor = new Color(225, 225, 0);
                                per_line2rect_cell4.BackgroundColor = new Color(71, 65, 18);
                                per_line2rect_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "High":

                                per_line2rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line2rect_cell2.BackgroundColor = new Color(225, 225, 0);
                                per_line2rect_cell3.BackgroundColor = new Color(225, 225, 0);
                                per_line2rect_cell4.BackgroundColor = new Color(225, 225, 0);
                                per_line2rect_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Very High":

                                per_line2rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line2rect_cell2.BackgroundColor = new Color(225, 225, 0);
                                per_line2rect_cell3.BackgroundColor = new Color(225, 225, 0);
                                per_line2rect_cell4.BackgroundColor = new Color(225, 225, 0);
                                per_line2rect_cell5.BackgroundColor = new Color(225, 225, 0);

                                break;
                        }

                        per_line2rect.AddCell(per_line2rect_cell1);
                        per_line2rect.AddCell(per_line2rect_cell2);
                        per_line2rect.AddCell(per_line2rect_cell3);
                        per_line2rect.AddCell(per_line2rect_cell4);
                        per_line2rect.AddCell(per_line2rect_cell5);
                        per_line2rect.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        per_line2rect.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;

                        //second_row_cell2.Add(per_line2rect);

                        ////////////////////////////////////////////////////

                        # endregion

                        switch (ds1.Tables[0].Rows[1][0].ToString())
                        {
                            case "Very Low":

                                second_row_cell2.Add(rverylow);

                                break;
                            case "Low":

                                second_row_cell2.Add(rlow);

                                break;
                            case "Moderate":

                                second_row_cell2.Add(rmodrate);

                                break;
                            case "High":

                                second_row_cell2.Add(rhigh);

                                break;
                            case "Very High":

                                second_row_cell2.Add(rveryhi);

                                break;
                        }


                        second_row_cell2.Width = 80;
                        second_row_cell2.BorderWidth = 2f;
                        second_row_cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        second_row_cell2.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        second_row_cell2.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(second_row_cell2);



                        fff = (float)System.Convert.ToSingle(ds1.Tables[0].Rows[1][1].ToString());
                        perf = (int)Math.Ceiling(fff);

                        Cell second_row_cell3 = new Cell();
                        second_row_cell3.Add(new Paragraph(perf.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        second_row_cell3.Width = 80;
                        second_row_cell3.BorderWidth = 2f;
                        second_row_cell3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        second_row_cell3.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        second_row_cell3.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(second_row_cell3);

                        Cell second_row_cell4 = new Cell();
                        second_row_cell4.Add(new Paragraph(ds1.Tables[0].Rows[1][0].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        second_row_cell4.Width = 80;
                        second_row_cell4.BorderWidth = 2f;
                        second_row_cell4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        second_row_cell4.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        second_row_cell4.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(second_row_cell4);


                        /////////////// table third row 

                        Cell third_row_cell1 = new Cell();

                        switch (ds1.Tables[0].Rows[2][2].ToString())
                        {
                            case "1":
                                chart2lblname = "Relationships";
                                break;
                            case "2":
                                chart2lblname = "Emotional Stability";
                                break;
                            case "3":
                                chart2lblname = "Assertiveness";
                                break;
                            case "4":
                                chart2lblname = "Enthusiasm";
                                break;
                            case "5":
                                chart2lblname = "Conscientious";
                                break;
                            case "6":
                                chart2lblname = "Responsiveness";
                                break;
                            case "7":
                                chart2lblname = "Tough Minded";
                                break;
                            case "8":
                                chart2lblname = "Self Assurance";
                                break;
                            case "9":
                                chart2lblname = "Relaxed";
                                break;
                        }


                        third_row_cell1.Add(new Paragraph(chart2lblname.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        third_row_cell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));
                        third_row_cell1.Width = 80;
                        third_row_cell1.BackgroundColor = new Color(219, 219, 219);
                        third_row_cell1.BorderWidth = 2f;
                        third_row_cell1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        third_row_cell1.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        third_row_cell1.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(third_row_cell1);

                        Cell third_row_cell2 = new Cell();




                        //////////////  rectangle of line 3

                        #region rr3


                        iTextSharp.text.Table per_line3rect = new iTextSharp.text.Table(5);
                        Cell per_line3rect_cell1 = new Cell();
                        per_line3rect_cell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line3rect_cell1.Width = 2;
                        per_line3rect_cell1.BackgroundColor = new Color(204, 186, 60);
                        per_line3rect_cell1.BorderWidth = 4f;
                        per_line3rect_cell1.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell1);

                        Cell per_line3rect_cell2 = new Cell();
                        per_line3rect_cell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line3rect_cell2.Width = 2;
                        per_line3rect_cell2.BackgroundColor = new Color(204, 186, 60);
                        per_line3rect_cell2.BorderWidth = 4f;
                        per_line3rect_cell2.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell2);

                        Cell per_line3rect_cell3 = new Cell();
                        per_line3rect_cell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line3rect_cell3.Width = 2;
                        per_line3rect_cell3.BackgroundColor = new Color(204, 186, 60);
                        per_line3rect_cell3.BorderWidth = 4f;
                        per_line3rect_cell3.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell3);

                        Cell per_line3rect_cell4 = new Cell();
                        per_line3rect_cell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line3rect_cell4.Width = 2;
                        per_line3rect_cell4.BackgroundColor = new Color(204, 186, 60);
                        per_line3rect_cell4.BorderWidth = 4f;
                        per_line3rect_cell4.BorderColor = new Color(255, 255, 255);
                        //thirdTable1.AddCell(thirdcell4);

                        Cell per_line3rect_cell5 = new Cell();
                        per_line3rect_cell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line3rect_cell5.Width = 2;
                        per_line3rect_cell5.BackgroundColor = new Color(204, 186, 60);
                        per_line3rect_cell5.BorderWidth = 4f;
                        per_line3rect_cell5.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell5);



                        switch (ds1.Tables[0].Rows[2][0].ToString())
                        {
                            case "Very Low":

                                per_line3rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line3rect_cell2.BackgroundColor = new Color(71, 65, 18);
                                per_line3rect_cell3.BackgroundColor = new Color(71, 65, 18);
                                per_line3rect_cell4.BackgroundColor = new Color(71, 65, 18);
                                per_line3rect_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Low":

                                per_line3rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line3rect_cell2.BackgroundColor = new Color(225, 225, 0);
                                per_line3rect_cell3.BackgroundColor = new Color(71, 65, 18);
                                per_line3rect_cell4.BackgroundColor = new Color(71, 65, 18);
                                per_line3rect_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Moderate":

                                per_line3rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line3rect_cell2.BackgroundColor = new Color(225, 225, 0);
                                per_line3rect_cell3.BackgroundColor = new Color(225, 225, 0);
                                per_line3rect_cell4.BackgroundColor = new Color(71, 65, 18);
                                per_line3rect_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "High":

                                per_line3rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line3rect_cell2.BackgroundColor = new Color(225, 225, 0);
                                per_line3rect_cell3.BackgroundColor = new Color(225, 225, 0);
                                per_line3rect_cell4.BackgroundColor = new Color(225, 225, 0);
                                per_line3rect_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Very High":

                                per_line3rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line3rect_cell2.BackgroundColor = new Color(225, 225, 0);
                                per_line3rect_cell3.BackgroundColor = new Color(225, 225, 0);
                                per_line3rect_cell4.BackgroundColor = new Color(225, 225, 0);
                                per_line3rect_cell5.BackgroundColor = new Color(225, 225, 0);

                                break;
                        }

                        per_line3rect.AddCell(per_line3rect_cell1);
                        per_line3rect.AddCell(per_line3rect_cell2);
                        per_line3rect.AddCell(per_line3rect_cell3);
                        per_line3rect.AddCell(per_line3rect_cell4);
                        per_line3rect.AddCell(per_line3rect_cell5);
                        per_line3rect.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        per_line3rect.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;

                        //third_row_cell2.Add(per_line3rect);

                        ////////////////////////////////////////////////////

                        # endregion



                        switch (ds1.Tables[0].Rows[2][0].ToString())
                        {
                            case "Very Low":

                                third_row_cell2.Add(rverylow);

                                break;
                            case "Low":

                                third_row_cell2.Add(rlow);

                                break;
                            case "Moderate":

                                third_row_cell2.Add(rmodrate);

                                break;
                            case "High":

                                third_row_cell2.Add(rhigh);

                                break;
                            case "Very High":

                                third_row_cell2.Add(rveryhi);

                                break;
                        }



                        third_row_cell2.Width = 80;
                        third_row_cell2.BackgroundColor = new Color(219, 219, 219);
                        third_row_cell2.BorderWidth = 2f;
                        third_row_cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        third_row_cell2.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        third_row_cell2.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(third_row_cell2);


                        fff = (float)System.Convert.ToSingle(ds1.Tables[0].Rows[2][1].ToString());
                        perf = (int)Math.Ceiling(fff);

                        Cell third_row_cell3 = new Cell();
                        third_row_cell3.Add(new Paragraph(perf.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        third_row_cell3.Width = 80;
                        third_row_cell3.BackgroundColor = new Color(219, 219, 219);
                        third_row_cell3.BorderWidth = 2f;
                        third_row_cell3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        third_row_cell3.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        third_row_cell3.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(third_row_cell3);

                        Cell third_row_cell4 = new Cell();
                        third_row_cell4.Add(new Paragraph(ds1.Tables[0].Rows[2][0].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        third_row_cell4.Width = 80;
                        third_row_cell4.BackgroundColor = new Color(219, 219, 219);
                        third_row_cell4.BorderWidth = 2f;
                        third_row_cell4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        third_row_cell4.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        third_row_cell4.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(third_row_cell4);


                        /////////////// table fourth row 

                        Cell fourth_row_cell1 = new Cell();

                        switch (ds1.Tables[0].Rows[3][2].ToString())
                        {
                            case "1":
                                chart2lblname = "Relationships";
                                break;
                            case "2":
                                chart2lblname = "Emotional Stability";
                                break;
                            case "3":
                                chart2lblname = "Assertiveness";
                                break;
                            case "4":
                                chart2lblname = "Enthusiasm";
                                break;
                            case "5":
                                chart2lblname = "Conscientious";
                                break;
                            case "6":
                                chart2lblname = "Responsiveness";
                                break;
                            case "7":
                                chart2lblname = "Tough Minded";
                                break;
                            case "8":
                                chart2lblname = "Self Assurance";
                                break;
                            case "9":
                                chart2lblname = "Relaxed";
                                break;
                        }



                        fourth_row_cell1.Add(new Paragraph(chart2lblname.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        fourth_row_cell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));
                        fourth_row_cell1.Width = 80;
                        fourth_row_cell1.BorderWidth = 2f;
                        fourth_row_cell1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fourth_row_cell1.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fourth_row_cell1.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(fourth_row_cell1);

                        Cell fourth_row_cell2 = new Cell();


                        //////////////  rectangle of line 4

                        # region rr4


                        iTextSharp.text.Table per_line4rect = new iTextSharp.text.Table(5);
                        Cell per_line4rect_cell1 = new Cell();
                        per_line4rect_cell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line4rect_cell1.Width = 2;
                        per_line4rect_cell1.BackgroundColor = new Color(204, 186, 60);
                        per_line4rect_cell1.BorderWidth = 4f;
                        per_line4rect_cell1.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell1);

                        Cell per_line4rect_cell2 = new Cell();
                        per_line4rect_cell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line4rect_cell2.Width = 2;
                        per_line4rect_cell2.BackgroundColor = new Color(204, 186, 60);
                        per_line4rect_cell2.BorderWidth = 4f;
                        per_line4rect_cell2.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell2);

                        Cell per_line4rect_cell3 = new Cell();
                        per_line4rect_cell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line4rect_cell3.Width = 2;
                        per_line4rect_cell3.BackgroundColor = new Color(204, 186, 60);
                        per_line4rect_cell3.BorderWidth = 4f;
                        per_line4rect_cell3.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell3);

                        Cell per_line4rect_cell4 = new Cell();
                        per_line4rect_cell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line4rect_cell4.Width = 2;
                        per_line4rect_cell4.BackgroundColor = new Color(204, 186, 60);
                        per_line4rect_cell4.BorderWidth = 4f;
                        per_line4rect_cell4.BorderColor = new Color(255, 255, 255);
                        //thirdTable1.AddCell(thirdcell4);

                        Cell per_line4rect_cell5 = new Cell();
                        per_line4rect_cell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line4rect_cell5.Width = 2;
                        per_line4rect_cell5.BackgroundColor = new Color(204, 186, 60);
                        per_line4rect_cell5.BorderWidth = 4f;
                        per_line4rect_cell5.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell5);



                        switch (ds1.Tables[0].Rows[3][0].ToString())
                        {
                            case "Very Low":

                                per_line4rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line4rect_cell2.BackgroundColor = new Color(71, 65, 18);
                                per_line4rect_cell3.BackgroundColor = new Color(71, 65, 18);
                                per_line4rect_cell4.BackgroundColor = new Color(71, 65, 18);
                                per_line4rect_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Low":

                                per_line4rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line4rect_cell2.BackgroundColor = new Color(225, 225, 0);
                                per_line4rect_cell3.BackgroundColor = new Color(71, 65, 18);
                                per_line4rect_cell4.BackgroundColor = new Color(71, 65, 18);
                                per_line4rect_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Moderate":

                                per_line4rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line4rect_cell2.BackgroundColor = new Color(225, 225, 0);
                                per_line4rect_cell3.BackgroundColor = new Color(225, 225, 0);
                                per_line4rect_cell4.BackgroundColor = new Color(71, 65, 18);
                                per_line4rect_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "High":

                                per_line4rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line4rect_cell2.BackgroundColor = new Color(225, 225, 0);
                                per_line4rect_cell3.BackgroundColor = new Color(225, 225, 0);
                                per_line4rect_cell4.BackgroundColor = new Color(225, 225, 0);
                                per_line4rect_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Very High":

                                per_line4rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line4rect_cell2.BackgroundColor = new Color(225, 225, 0);
                                per_line4rect_cell3.BackgroundColor = new Color(225, 225, 0);
                                per_line4rect_cell4.BackgroundColor = new Color(225, 225, 0);
                                per_line4rect_cell5.BackgroundColor = new Color(225, 225, 0); ;

                                break;
                        }

                        per_line4rect.AddCell(per_line4rect_cell1);
                        per_line4rect.AddCell(per_line4rect_cell2);
                        per_line4rect.AddCell(per_line4rect_cell3);
                        per_line4rect.AddCell(per_line4rect_cell4);
                        per_line4rect.AddCell(per_line4rect_cell5);
                        per_line4rect.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        per_line4rect.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;

                        //fourth_row_cell2.Add(per_line4rect);

                        ////////////////////////////////////////////////////

                        #endregion


                        switch (ds1.Tables[0].Rows[3][0].ToString())
                        {
                            case "Very Low":

                                fourth_row_cell2.Add(rverylow);

                                break;
                            case "Low":

                                fourth_row_cell2.Add(rlow);

                                break;
                            case "Moderate":

                                fourth_row_cell2.Add(rmodrate);

                                break;
                            case "High":

                                fourth_row_cell2.Add(rhigh);

                                break;
                            case "Very High":

                                fourth_row_cell2.Add(rveryhi);

                                break;
                        }



                        fourth_row_cell2.Width = 80;
                        fourth_row_cell2.BorderWidth = 2f;
                        fourth_row_cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fourth_row_cell2.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        fourth_row_cell2.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(fourth_row_cell2);

                        Cell fourth_row_cell3 = new Cell();


                        fff = (float)System.Convert.ToSingle(ds1.Tables[0].Rows[3][1].ToString());
                        perf = (int)Math.Ceiling(fff);

                        fourth_row_cell3.Add(new Paragraph(perf.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        fourth_row_cell3.Width = 80;
                        fourth_row_cell3.BorderWidth = 2f;
                        fourth_row_cell3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fourth_row_cell3.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fourth_row_cell3.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(fourth_row_cell3);

                        Cell fourth_row_cell4 = new Cell();
                        fourth_row_cell4.Add(new Paragraph(ds1.Tables[0].Rows[3][0].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        fourth_row_cell4.Width = 80;
                        fourth_row_cell4.BorderWidth = 2f;
                        fourth_row_cell4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fourth_row_cell4.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fourth_row_cell4.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(fourth_row_cell4);




                        /////////////// table fifth row 

                        Cell fifth_row_cell1 = new Cell();

                        switch (ds1.Tables[0].Rows[4][2].ToString())
                        {
                            case "1":
                                chart2lblname = "Relationships";
                                break;
                            case "2":
                                chart2lblname = "Emotional Stability";
                                break;
                            case "3":
                                chart2lblname = "Assertiveness";
                                break;
                            case "4":
                                chart2lblname = "Enthusiasm";
                                break;
                            case "5":
                                chart2lblname = "Conscientious";
                                break;
                            case "6":
                                chart2lblname = "Responsiveness";
                                break;
                            case "7":
                                chart2lblname = "Tough Minded";
                                break;
                            case "8":
                                chart2lblname = "Self Assurance";
                                break;
                            case "9":
                                chart2lblname = "Relaxed";
                                break;
                        }



                        fifth_row_cell1.Add(new Paragraph(chart2lblname.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        fifth_row_cell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));
                        fifth_row_cell1.Width = 80;
                        fifth_row_cell1.BackgroundColor = new Color(219, 219, 219);
                        fifth_row_cell1.BorderWidth = 2f;
                        fifth_row_cell1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fifth_row_cell1.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fifth_row_cell1.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(fifth_row_cell1);

                        Cell fifth_row_cell2 = new Cell();


                        //////////////  rectangle of line 5

                        # region r55


                        iTextSharp.text.Table per_line5rect = new iTextSharp.text.Table(5);
                        Cell per_line5rect_cell1 = new Cell();
                        per_line5rect_cell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line5rect_cell1.Width = 2;
                        per_line5rect_cell1.BackgroundColor = new Color(204, 186, 60);
                        per_line5rect_cell1.BorderWidth = 4f;
                        per_line5rect_cell1.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell1);

                        Cell per_line5rect_cell2 = new Cell();
                        per_line5rect_cell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line5rect_cell2.Width = 2;
                        per_line5rect_cell2.BackgroundColor = new Color(204, 186, 60);
                        per_line5rect_cell2.BorderWidth = 4f;
                        per_line5rect_cell2.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell2);

                        Cell per_line5rect_cell3 = new Cell();
                        per_line5rect_cell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line5rect_cell3.Width = 2;
                        per_line5rect_cell3.BackgroundColor = new Color(204, 186, 60);
                        per_line5rect_cell3.BorderWidth = 4f;
                        per_line5rect_cell3.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell3);

                        Cell per_line5rect_cell4 = new Cell();
                        per_line5rect_cell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line5rect_cell4.Width = 2;
                        per_line5rect_cell4.BackgroundColor = new Color(204, 186, 60);
                        per_line5rect_cell4.BorderWidth = 4f;
                        per_line5rect_cell4.BorderColor = new Color(255, 255, 255);
                        //thirdTable1.AddCell(thirdcell4);

                        Cell per_line5rect_cell5 = new Cell();
                        per_line5rect_cell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line5rect_cell5.Width = 2;
                        per_line5rect_cell5.BackgroundColor = new Color(204, 186, 60);
                        per_line5rect_cell5.BorderWidth = 4f;
                        per_line5rect_cell5.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell5);



                        switch (ds1.Tables[0].Rows[4][0].ToString())
                        {
                            case "Very Low":

                                per_line5rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line5rect_cell2.BackgroundColor = new Color(71, 65, 18);
                                per_line5rect_cell3.BackgroundColor = new Color(71, 65, 18);
                                per_line5rect_cell4.BackgroundColor = new Color(71, 65, 18);
                                per_line5rect_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Low":

                                per_line5rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line5rect_cell2.BackgroundColor = new Color(225, 225, 0);
                                per_line5rect_cell3.BackgroundColor = new Color(71, 65, 18);
                                per_line5rect_cell4.BackgroundColor = new Color(71, 65, 18);
                                per_line5rect_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Moderate":

                                per_line5rect_cell1.BackgroundColor = new Color(225, 225, 0); ;
                                per_line5rect_cell2.BackgroundColor = new Color(225, 225, 0);
                                per_line5rect_cell3.BackgroundColor = new Color(225, 225, 0);
                                per_line5rect_cell4.BackgroundColor = new Color(71, 65, 18);
                                per_line5rect_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "High":

                                per_line5rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line5rect_cell2.BackgroundColor = new Color(225, 225, 0);
                                per_line5rect_cell3.BackgroundColor = new Color(225, 225, 0);
                                per_line5rect_cell4.BackgroundColor = new Color(225, 225, 0);
                                per_line5rect_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Very High":

                                per_line5rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line5rect_cell2.BackgroundColor = new Color(225, 225, 0);
                                per_line5rect_cell3.BackgroundColor = new Color(225, 225, 0);
                                per_line5rect_cell4.BackgroundColor = new Color(225, 225, 0);
                                per_line5rect_cell5.BackgroundColor = new Color(225, 225, 0);

                                break;
                        }

                        per_line5rect.AddCell(per_line5rect_cell1);
                        per_line5rect.AddCell(per_line5rect_cell2);
                        per_line5rect.AddCell(per_line5rect_cell3);
                        per_line5rect.AddCell(per_line5rect_cell4);
                        per_line5rect.AddCell(per_line5rect_cell5);
                        per_line5rect.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        per_line5rect.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;


                        //fifth_row_cell2.Add(per_line5rect);
                        ////////////////////////////////////////////////////


                        # endregion


                        switch (ds1.Tables[0].Rows[4][0].ToString())
                        {
                            case "Very Low":

                                fifth_row_cell2.Add(rverylow);

                                break;
                            case "Low":

                                fifth_row_cell2.Add(rlow);

                                break;
                            case "Moderate":

                                fifth_row_cell2.Add(rmodrate);

                                break;
                            case "High":

                                fifth_row_cell2.Add(rhigh);

                                break;
                            case "Very High":

                                fifth_row_cell2.Add(rveryhi);

                                break;
                        }



                        //fifth_row_cell2.Add(per_line5rect);
                        fifth_row_cell2.Width = 80;
                        fifth_row_cell2.BackgroundColor = new Color(219, 219, 219);
                        fifth_row_cell2.BorderWidth = 2f;
                        fifth_row_cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fifth_row_cell2.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        fifth_row_cell2.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(fifth_row_cell2);

                        Cell fifth_row_cell3 = new Cell();


                        fff = (float)System.Convert.ToSingle(ds1.Tables[0].Rows[4][1].ToString());
                        perf = (int)Math.Ceiling(fff);

                        fifth_row_cell3.Add(new Paragraph(perf.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        fifth_row_cell3.Width = 80;
                        fifth_row_cell3.BackgroundColor = new Color(219, 219, 219);
                        fifth_row_cell3.BorderWidth = 2f;
                        fifth_row_cell3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fifth_row_cell3.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fifth_row_cell3.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(fifth_row_cell3);

                        Cell fifth_row_cell4 = new Cell();
                        fifth_row_cell4.Add(new Paragraph(ds1.Tables[0].Rows[4][0].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        fifth_row_cell4.Width = 80;
                        fifth_row_cell4.BackgroundColor = new Color(219, 219, 219);
                        fifth_row_cell4.BorderWidth = 2f;
                        fifth_row_cell4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fifth_row_cell4.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fifth_row_cell4.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(fifth_row_cell4);


                        /////////////// table sixth row 

                        Cell sixth_row_cell1 = new Cell();

                        switch (ds1.Tables[0].Rows[5][2].ToString())
                        {
                            case "1":
                                chart2lblname = "Relationships";
                                break;
                            case "2":
                                chart2lblname = "Emotional Stability";
                                break;
                            case "3":
                                chart2lblname = "Assertiveness";
                                break;
                            case "4":
                                chart2lblname = "Enthusiasm";
                                break;
                            case "5":
                                chart2lblname = "Conscientious";
                                break;
                            case "6":
                                chart2lblname = "Responsiveness";
                                break;
                            case "7":
                                chart2lblname = "Tough Minded";
                                break;
                            case "8":
                                chart2lblname = "Self Assurance";
                                break;
                            case "9":
                                chart2lblname = "Relaxed";
                                break;
                        }


                        sixth_row_cell1.Add(new Paragraph(chart2lblname.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        sixth_row_cell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));
                        sixth_row_cell1.Width = 80;
                        sixth_row_cell1.BorderWidth = 2f;
                        sixth_row_cell1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        sixth_row_cell1.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        sixth_row_cell1.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(sixth_row_cell1);

                        Cell sixth_row_cell2 = new Cell();




                        ////////////  rectangle of line 6


                        # region rr6

                        iTextSharp.text.Table per_line6rect = new iTextSharp.text.Table(5);
                        Cell per_line6rect_cell1 = new Cell();
                        per_line6rect_cell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line6rect_cell1.Width = 2;
                        per_line6rect_cell1.BackgroundColor = new Color(204, 186, 60);
                        per_line6rect_cell1.BorderWidth = 4f;
                        per_line6rect_cell1.BorderColor = new Color(255, 255, 255);
                        thirdTable1.AddCell(thirdcell1);

                        Cell per_line6rect_cell2 = new Cell();
                        per_line6rect_cell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line6rect_cell2.Width = 2;
                        per_line6rect_cell2.BackgroundColor = new Color(204, 186, 60);
                        per_line6rect_cell2.BorderWidth = 4f;
                        per_line6rect_cell2.BorderColor = new Color(255, 255, 255);
                        thirdTable1.AddCell(thirdcell2);

                        Cell per_line6rect_cell3 = new Cell();
                        per_line6rect_cell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line6rect_cell3.Width = 2;
                        per_line6rect_cell3.BackgroundColor = new Color(204, 186, 60);
                        per_line6rect_cell3.BorderWidth = 4f;
                        per_line6rect_cell3.BorderColor = new Color(255, 255, 255);
                        thirdTable1.AddCell(thirdcell3);

                        Cell per_line6rect_cell4 = new Cell();
                        per_line6rect_cell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line6rect_cell4.Width = 2;
                        per_line6rect_cell4.BackgroundColor = new Color(204, 186, 60);
                        per_line6rect_cell4.BorderWidth = 4f;
                        per_line6rect_cell4.BorderColor = new Color(255, 255, 255);
                        thirdTable1.AddCell(thirdcell4);

                        Cell per_line6rect_cell5 = new Cell();
                        per_line6rect_cell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line6rect_cell5.Width = 2;
                        per_line6rect_cell5.BackgroundColor = new Color(204, 186, 60);
                        per_line6rect_cell5.BorderWidth = 4f;
                        per_line6rect_cell5.BorderColor = new Color(255, 255, 255);
                        thirdTable1.AddCell(thirdcell5);



                        switch (ds1.Tables[0].Rows[5][0].ToString())
                        {
                            case "Very Low":

                                per_line6rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line6rect_cell2.BackgroundColor = new Color(71, 65, 18);
                                per_line6rect_cell3.BackgroundColor = new Color(71, 65, 18);
                                per_line6rect_cell4.BackgroundColor = new Color(71, 65, 18);
                                per_line6rect_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Low":

                                per_line6rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line6rect_cell2.BackgroundColor = new Color(225, 225, 0);
                                per_line6rect_cell3.BackgroundColor = new Color(71, 65, 18);
                                per_line6rect_cell4.BackgroundColor = new Color(71, 65, 18);
                                per_line6rect_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Moderate":

                                per_line6rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line6rect_cell2.BackgroundColor = new Color(225, 225, 0);
                                per_line6rect_cell3.BackgroundColor = new Color(225, 225, 0);
                                per_line6rect_cell4.BackgroundColor = new Color(71, 65, 18);
                                per_line6rect_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "High":

                                per_line6rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line6rect_cell2.BackgroundColor = new Color(225, 225, 0);
                                per_line6rect_cell3.BackgroundColor = new Color(225, 225, 0);
                                per_line6rect_cell4.BackgroundColor = new Color(225, 225, 0);
                                per_line6rect_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Very High":

                                per_line6rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line6rect_cell2.BackgroundColor = new Color(225, 225, 0);
                                per_line6rect_cell3.BackgroundColor = new Color(225, 225, 0);
                                per_line6rect_cell4.BackgroundColor = new Color(225, 225, 0);
                                per_line6rect_cell5.BackgroundColor = new Color(225, 225, 0);

                                break;
                        }

                        per_line6rect.AddCell(per_line6rect_cell1);
                        per_line6rect.AddCell(per_line6rect_cell2);
                        per_line6rect.AddCell(per_line6rect_cell3);
                        per_line6rect.AddCell(per_line6rect_cell4);
                        per_line6rect.AddCell(per_line6rect_cell5);
                        per_line6rect.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        per_line6rect.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;


                        //sixth_row_cell2.Add(per_line6rect);
                        //////////////////////////////////////////////////

                        # endregion
                        switch (ds1.Tables[0].Rows[5][0].ToString())
                        {
                            case "Very Low":

                                sixth_row_cell2.Add(rverylow);

                                break;
                            case "Low":

                                sixth_row_cell2.Add(rlow);

                                break;
                            case "Moderate":

                                sixth_row_cell2.Add(rmodrate);

                                break;
                            case "High":

                                sixth_row_cell2.Add(rhigh);

                                break;
                            case "Very High":

                                sixth_row_cell2.Add(rveryhi);

                                break;
                        }

                        // sixth_row_cell2.Add(per_line6rect);
                        sixth_row_cell2.Width = 80;
                        sixth_row_cell2.BorderWidth = 2f;
                        sixth_row_cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        sixth_row_cell2.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        sixth_row_cell2.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(sixth_row_cell2);

                        Cell sixth_row_cell3 = new Cell();


                        fff = (float)System.Convert.ToSingle(ds1.Tables[0].Rows[5][1].ToString());
                        perf = (int)Math.Ceiling(fff);

                        sixth_row_cell3.Add(new Paragraph(perf.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        sixth_row_cell3.Width = 80;
                        sixth_row_cell3.BorderWidth = 2f;
                        sixth_row_cell3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        sixth_row_cell3.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        sixth_row_cell3.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(sixth_row_cell3);

                        Cell sixth_row_cell4 = new Cell();
                        sixth_row_cell4.Add(new Paragraph(ds1.Tables[0].Rows[5][0].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        sixth_row_cell4.Width = 80;
                        sixth_row_cell4.BorderWidth = 2f;
                        sixth_row_cell4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        sixth_row_cell4.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        sixth_row_cell4.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(sixth_row_cell4);

                        /////////////// table seventh row 

                        Cell seven_row_cell1 = new Cell();

                        switch (ds1.Tables[0].Rows[6][2].ToString())
                        {
                            case "1":
                                chart2lblname = "Relationships";
                                break;
                            case "2":
                                chart2lblname = "Emotional Stability";
                                break;
                            case "3":
                                chart2lblname = "Assertiveness";
                                break;
                            case "4":
                                chart2lblname = "Enthusiasm";
                                break;
                            case "5":
                                chart2lblname = "Conscientious";
                                break;
                            case "6":
                                chart2lblname = "Responsiveness";
                                break;
                            case "7":
                                chart2lblname = "Tough Minded";
                                break;
                            case "8":
                                chart2lblname = "Self Assurance";
                                break;
                            case "9":
                                chart2lblname = "Relaxed";
                                break;
                        }

                        seven_row_cell1.Add(new Paragraph(chart2lblname.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        seven_row_cell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));
                        seven_row_cell1.Width = 80;
                        seven_row_cell1.BackgroundColor = new Color(219, 219, 219);
                        seven_row_cell1.BorderWidth = 2f;
                        seven_row_cell1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        seven_row_cell1.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        seven_row_cell1.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(seven_row_cell1);

                        Cell seven_row_cell2 = new Cell();
                        //////////////  rectangle of line 7
                        # region rr7

                        iTextSharp.text.Table per_line7rect = new iTextSharp.text.Table(5);
                        Cell per_line7rect_cell1 = new Cell();
                        per_line7rect_cell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line7rect_cell1.Width = 2;
                        per_line7rect_cell1.BackgroundColor = new Color(204, 186, 60);
                        per_line7rect_cell1.BorderWidth = 4f;
                        per_line7rect_cell1.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell1);

                        Cell per_line7rect_cell2 = new Cell();
                        per_line7rect_cell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line7rect_cell2.Width = 2;
                        per_line7rect_cell2.BackgroundColor = new Color(204, 186, 60);
                        per_line7rect_cell2.BorderWidth = 4f;
                        per_line7rect_cell2.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell2);

                        Cell per_line7rect_cell3 = new Cell();
                        per_line7rect_cell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line7rect_cell3.Width = 2;
                        per_line7rect_cell3.BackgroundColor = new Color(204, 186, 60);
                        per_line7rect_cell3.BorderWidth = 4f;
                        per_line7rect_cell3.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell3);

                        Cell per_line7rect_cell4 = new Cell();
                        per_line7rect_cell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line7rect_cell4.Width = 2;
                        per_line7rect_cell4.BackgroundColor = new Color(204, 186, 60);
                        per_line7rect_cell4.BorderWidth = 4f;
                        per_line7rect_cell4.BorderColor = new Color(255, 255, 255);
                        //thirdTable1.AddCell(thirdcell4);

                        Cell per_line7rect_cell5 = new Cell();
                        per_line7rect_cell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line7rect_cell5.Width = 2;
                        per_line7rect_cell5.BackgroundColor = new Color(204, 186, 60);
                        per_line7rect_cell5.BorderWidth = 4f;
                        per_line7rect_cell5.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell5);



                        switch (ds1.Tables[0].Rows[6][0].ToString())
                        {
                            case "Very Low":

                                per_line7rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line7rect_cell2.BackgroundColor = new Color(71, 65, 18);
                                per_line7rect_cell3.BackgroundColor = new Color(71, 65, 18);
                                per_line7rect_cell4.BackgroundColor = new Color(71, 65, 18);
                                per_line7rect_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Low":

                                per_line7rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line7rect_cell2.BackgroundColor = new Color(225, 225, 0);
                                per_line7rect_cell3.BackgroundColor = new Color(71, 65, 18);
                                per_line7rect_cell4.BackgroundColor = new Color(71, 65, 18);
                                per_line7rect_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Moderate":

                                per_line7rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line7rect_cell2.BackgroundColor = new Color(225, 225, 0);
                                per_line7rect_cell3.BackgroundColor = new Color(225, 225, 0);
                                per_line7rect_cell4.BackgroundColor = new Color(71, 65, 18);
                                per_line7rect_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "High":

                                per_line7rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line7rect_cell2.BackgroundColor = new Color(225, 225, 0);
                                per_line7rect_cell3.BackgroundColor = new Color(225, 225, 0);
                                per_line7rect_cell4.BackgroundColor = new Color(225, 225, 0);
                                per_line7rect_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Very High":

                                per_line7rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line7rect_cell2.BackgroundColor = new Color(225, 225, 0);
                                per_line7rect_cell3.BackgroundColor = new Color(225, 225, 0);
                                per_line7rect_cell4.BackgroundColor = new Color(225, 225, 0);
                                per_line7rect_cell5.BackgroundColor = new Color(225, 225, 0);

                                break;
                        }

                        per_line7rect.AddCell(per_line7rect_cell1);
                        per_line7rect.AddCell(per_line7rect_cell2);
                        per_line7rect.AddCell(per_line7rect_cell3);
                        per_line7rect.AddCell(per_line7rect_cell4);
                        per_line7rect.AddCell(per_line7rect_cell5);
                        per_line7rect.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        per_line7rect.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;


                        //seven_row_cell2.Add(per_line7rect);
                        ////////////////////////////////////////////////////

                        # endregion

                        switch (ds1.Tables[0].Rows[6][0].ToString())
                        {
                            case "Very Low":

                                seven_row_cell2.Add(rverylow);

                                break;
                            case "Low":

                                seven_row_cell2.Add(rlow);

                                break;
                            case "Moderate":

                                seven_row_cell2.Add(rmodrate);

                                break;
                            case "High":

                                seven_row_cell2.Add(rhigh);

                                break;
                            case "Very High":

                                seven_row_cell2.Add(rveryhi);

                                break;
                        }


                        // seven_row_cell2.Add(per_line7rect);
                        seven_row_cell2.Width = 80;
                        seven_row_cell2.BackgroundColor = new Color(219, 219, 219);
                        seven_row_cell2.BorderWidth = 2f;
                        seven_row_cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        seven_row_cell2.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        seven_row_cell2.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(seven_row_cell2);

                        Cell seven_row_cell3 = new Cell();

                        fff = (float)System.Convert.ToSingle(ds1.Tables[0].Rows[6][1].ToString());
                        perf = (int)Math.Ceiling(fff);

                        seven_row_cell3.Add(new Paragraph(perf.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        seven_row_cell3.Width = 80;
                        seven_row_cell3.BackgroundColor = new Color(219, 219, 219);
                        seven_row_cell3.BorderWidth = 2f;
                        seven_row_cell3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        seven_row_cell3.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        seven_row_cell3.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(seven_row_cell3);

                        Cell seven_row_cell4 = new Cell();
                        seven_row_cell4.Add(new Paragraph(ds1.Tables[0].Rows[6][0].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        seven_row_cell4.Width = 80;
                        seven_row_cell4.BackgroundColor = new Color(219, 219, 219);
                        seven_row_cell4.BorderWidth = 2f;
                        seven_row_cell4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        seven_row_cell4.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        seven_row_cell4.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(seven_row_cell4);





                        ///////////// table eight row 

                        Cell eight_row_cell1 = new Cell();

                        switch (ds1.Tables[0].Rows[7][2].ToString())
                        {
                            case "1":
                                chart2lblname = "Relationships";
                                break;
                            case "2":
                                chart2lblname = "Emotional Stability";
                                break;
                            case "3":
                                chart2lblname = "Assertiveness";
                                break;
                            case "4":
                                chart2lblname = "Enthusiasm";
                                break;
                            case "5":
                                chart2lblname = "Conscientious";
                                break;
                            case "6":
                                chart2lblname = "Responsiveness";
                                break;
                            case "7":
                                chart2lblname = "Tough Minded";
                                break;
                            case "8":
                                chart2lblname = "Self Assurance";
                                break;
                            case "9":
                                chart2lblname = "Relaxed";
                                break;
                        }


                        eight_row_cell1.Add(new Paragraph(chart2lblname.ToString() + "\n ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        eight_row_cell1.Width = 80;
                        //eight_row_cell1.BackgroundColor = new Color(219, 219, 219);
                        eight_row_cell1.BorderWidth = 2f;
                        eight_row_cell1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        eight_row_cell1.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        eight_row_cell1.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(eight_row_cell1);

                        Cell eight_row_cell2 = new Cell();

                        //////////////  rectangle of line 8
                        # region rr8

                        iTextSharp.text.Table per_line8rect = new iTextSharp.text.Table(5);
                        Cell per_line8rect_cell1 = new Cell();
                        per_line8rect_cell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line8rect_cell1.Width = 2;
                        per_line8rect_cell1.BackgroundColor = new Color(204, 186, 60);
                        per_line8rect_cell1.BorderWidth = 4f;
                        per_line8rect_cell1.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell1);

                        Cell per_line8rect_cell2 = new Cell();
                        per_line8rect_cell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line8rect_cell2.Width = 2;
                        per_line8rect_cell2.BackgroundColor = new Color(204, 186, 60);
                        per_line8rect_cell2.BorderWidth = 4f;
                        per_line8rect_cell2.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell2);

                        Cell per_line8rect_cell3 = new Cell();
                        per_line8rect_cell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line8rect_cell3.Width = 2;
                        per_line8rect_cell3.BackgroundColor = new Color(204, 186, 60);
                        per_line8rect_cell3.BorderWidth = 4f;
                        per_line8rect_cell3.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell3);

                        Cell per_line8rect_cell4 = new Cell();
                        per_line8rect_cell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line8rect_cell4.Width = 2;
                        per_line8rect_cell4.BackgroundColor = new Color(204, 186, 60);
                        per_line8rect_cell4.BorderWidth = 4f;
                        per_line8rect_cell4.BorderColor = new Color(255, 255, 255);
                        //thirdTable1.AddCell(thirdcell4);

                        Cell per_line8rect_cell5 = new Cell();
                        per_line8rect_cell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line8rect_cell5.Width = 2;
                        per_line8rect_cell5.BackgroundColor = new Color(204, 186, 60);
                        per_line8rect_cell5.BorderWidth = 4f;
                        per_line8rect_cell5.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell5);



                        switch (ds1.Tables[0].Rows[7][0].ToString())
                        {
                            case "Very Low":

                                per_line8rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line8rect_cell2.BackgroundColor = new Color(71, 65, 18);
                                per_line8rect_cell3.BackgroundColor = new Color(71, 65, 18);
                                per_line8rect_cell4.BackgroundColor = new Color(71, 65, 18);
                                per_line8rect_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Low":

                                per_line8rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line8rect_cell2.BackgroundColor = new Color(225, 225, 0);
                                per_line8rect_cell3.BackgroundColor = new Color(71, 65, 18);
                                per_line8rect_cell4.BackgroundColor = new Color(71, 65, 18);
                                per_line8rect_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Moderate":

                                per_line8rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line8rect_cell2.BackgroundColor = new Color(225, 225, 0);
                                per_line8rect_cell3.BackgroundColor = new Color(225, 225, 0);
                                per_line8rect_cell4.BackgroundColor = new Color(71, 65, 18);
                                per_line8rect_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "High":

                                per_line8rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line8rect_cell2.BackgroundColor = new Color(225, 225, 0);
                                per_line8rect_cell3.BackgroundColor = new Color(225, 225, 0);
                                per_line8rect_cell4.BackgroundColor = new Color(225, 225, 0);
                                per_line8rect_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Very High":

                                per_line8rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line8rect_cell2.BackgroundColor = new Color(225, 225, 0);
                                per_line8rect_cell3.BackgroundColor = new Color(225, 225, 0);
                                per_line8rect_cell4.BackgroundColor = new Color(225, 225, 0);
                                per_line8rect_cell5.BackgroundColor = new Color(225, 225, 0);

                                break;
                        }

                        per_line8rect.AddCell(per_line8rect_cell1);
                        per_line8rect.AddCell(per_line8rect_cell2);
                        per_line8rect.AddCell(per_line8rect_cell3);
                        per_line8rect.AddCell(per_line8rect_cell4);
                        per_line8rect.AddCell(per_line8rect_cell5);
                        per_line8rect.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        per_line8rect.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;


                        // eight_row_cell2.Add(per_line8rect);
                        ////////////////////////////////////////////////////

                        #endregion


                        switch (ds1.Tables[0].Rows[7][0].ToString())
                        {
                            case "Very Low":

                                eight_row_cell2.Add(rverylow);

                                break;
                            case "Low":

                                eight_row_cell2.Add(rlow);

                                break;
                            case "Moderate":

                                eight_row_cell2.Add(rmodrate);

                                break;
                            case "High":

                                eight_row_cell2.Add(rhigh);

                                break;
                            case "Very High":

                                eight_row_cell2.Add(rveryhi);

                                break;
                        }


                        // eight_row_cell2.Add(per_line8rect);
                        eight_row_cell2.Width = 80;
                        //eight_row_cell2.BackgroundColor = new Color(219, 219, 219);
                        eight_row_cell2.BorderWidth = 2f;
                        eight_row_cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        eight_row_cell2.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        eight_row_cell2.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(eight_row_cell2);

                        Cell eight_row_cell3 = new Cell();

                        fff = (float)System.Convert.ToSingle(ds1.Tables[0].Rows[7][1].ToString());
                        perf = (int)Math.Ceiling(fff);

                        eight_row_cell3.Add(new Paragraph(perf.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        eight_row_cell3.Width = 80;
                        // eight_row_cell3.BackgroundColor = new Color(219, 219, 219);
                        eight_row_cell3.BorderWidth = 2f;
                        eight_row_cell3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        eight_row_cell3.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        eight_row_cell3.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(eight_row_cell3);

                        Cell eight_row_cell4 = new Cell();
                        eight_row_cell4.Add(new Paragraph(ds1.Tables[0].Rows[7][0].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        eight_row_cell4.Width = 80;
                        //eight_row_cell4.BackgroundColor = new Color(219, 219, 219);
                        eight_row_cell4.BorderWidth = 2f;
                        eight_row_cell4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        eight_row_cell4.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        eight_row_cell4.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(eight_row_cell4);



                        ///////////// table nineth row 

                        Cell ninth_row_cell1 = new Cell();

                        switch (ds1.Tables[0].Rows[8][2].ToString())
                        {
                            case "1":
                                chart2lblname = "Relationships";
                                break;
                            case "2":
                                chart2lblname = "Emotional Stability";
                                break;
                            case "3":
                                chart2lblname = "Assertiveness";
                                break;
                            case "4":
                                chart2lblname = "Enthusiasm";
                                break;
                            case "5":
                                chart2lblname = "Conscientious";
                                break;
                            case "6":
                                chart2lblname = "Responsiveness";
                                break;
                            case "7":
                                chart2lblname = "Tough Minded";
                                break;
                            case "8":
                                chart2lblname = "Self Assurance";
                                break;
                            case "9":
                                chart2lblname = "Relaxed";
                                break;
                        }

                        ninth_row_cell1.Add(new Paragraph(chart2lblname.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        ninth_row_cell1.Add(new Paragraph("\n", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        ninth_row_cell1.Width = 80;
                        ninth_row_cell1.BackgroundColor = new Color(219, 219, 219);
                        ninth_row_cell1.BorderWidth = 2f;
                        ninth_row_cell1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        ninth_row_cell1.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        ninth_row_cell1.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(ninth_row_cell1);

                        Cell ninth_row_cell2 = new Cell();
                        //////////////  rectangle of line 9

                        # region rr9
                        iTextSharp.text.Table per_line9rect = new iTextSharp.text.Table(5);
                        Cell per_line9rect_cell1 = new Cell();
                        per_line9rect_cell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line9rect_cell1.Width = 2;
                        per_line9rect_cell1.BackgroundColor = new Color(204, 186, 60);
                        per_line9rect_cell1.BorderWidth = 4f;
                        per_line9rect_cell1.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell1);

                        Cell per_line9rect_cell2 = new Cell();
                        per_line9rect_cell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line9rect_cell2.Width = 2;
                        per_line9rect_cell2.BackgroundColor = new Color(204, 186, 60);
                        per_line9rect_cell2.BorderWidth = 4f;
                        per_line9rect_cell2.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell2);

                        Cell per_line9rect_cell3 = new Cell();
                        per_line9rect_cell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line9rect_cell3.Width = 2;
                        per_line9rect_cell3.BackgroundColor = new Color(204, 186, 60);
                        per_line9rect_cell3.BorderWidth = 4f;
                        per_line9rect_cell3.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell3);

                        Cell per_line9rect_cell4 = new Cell();
                        per_line9rect_cell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line9rect_cell4.Width = 2;
                        per_line9rect_cell4.BackgroundColor = new Color(204, 186, 60);
                        per_line9rect_cell4.BorderWidth = 4f;
                        per_line9rect_cell4.BorderColor = new Color(255, 255, 255);
                        //thirdTable1.AddCell(thirdcell4);

                        Cell per_line9rect_cell5 = new Cell();
                        per_line9rect_cell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        per_line9rect_cell5.Width = 2;
                        per_line9rect_cell5.BackgroundColor = new Color(204, 186, 60);
                        per_line9rect_cell5.BorderWidth = 4f;
                        per_line9rect_cell5.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell5);



                        switch (ds.Tables[0].Rows[5][1].ToString())
                        {
                            case "Very Low":

                                per_line9rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line9rect_cell2.BackgroundColor = new Color(71, 65, 18);
                                per_line9rect_cell3.BackgroundColor = new Color(71, 65, 18);
                                per_line9rect_cell4.BackgroundColor = new Color(71, 65, 18);
                                per_line9rect_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Low":

                                per_line9rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line9rect_cell2.BackgroundColor = new Color(225, 225, 0);
                                per_line9rect_cell3.BackgroundColor = new Color(71, 65, 18);
                                per_line9rect_cell4.BackgroundColor = new Color(71, 65, 18);
                                per_line9rect_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Moderate":

                                per_line9rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line9rect_cell2.BackgroundColor = new Color(225, 225, 0);
                                per_line9rect_cell3.BackgroundColor = new Color(225, 225, 0);
                                per_line9rect_cell4.BackgroundColor = new Color(71, 65, 18);
                                per_line9rect_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "High":

                                per_line9rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line9rect_cell2.BackgroundColor = new Color(225, 225, 0);
                                per_line9rect_cell3.BackgroundColor = new Color(225, 225, 0);
                                per_line9rect_cell4.BackgroundColor = new Color(225, 225, 0);
                                per_line9rect_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Very High":

                                per_line9rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                per_line9rect_cell2.BackgroundColor = new Color(225, 225, 0);
                                per_line9rect_cell3.BackgroundColor = new Color(225, 225, 0);
                                per_line9rect_cell4.BackgroundColor = new Color(225, 225, 0);
                                per_line9rect_cell5.BackgroundColor = new Color(225, 225, 0);

                                break;
                        }

                        per_line9rect.AddCell(per_line9rect_cell1);
                        per_line9rect.AddCell(per_line9rect_cell2);
                        per_line9rect.AddCell(per_line9rect_cell3);
                        per_line9rect.AddCell(per_line9rect_cell4);
                        per_line9rect.AddCell(per_line9rect_cell5);
                        per_line9rect.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        per_line9rect.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;

                        // ninth_row_cell2.Add(per_line9rect);

                        ////////////////////////////////////////////////////

                        #endregion


                        switch (ds1.Tables[0].Rows[8][0].ToString())
                        {
                            case "Very Low":

                                ninth_row_cell2.Add(rverylow);

                                break;
                            case "Low":

                                ninth_row_cell2.Add(rlow);

                                break;
                            case "Moderate":

                                ninth_row_cell2.Add(rmodrate);

                                break;
                            case "High":

                                ninth_row_cell2.Add(rhigh);

                                break;
                            case "Very High":

                                ninth_row_cell2.Add(rveryhi);

                                break;
                        }
                        // ninth_row_cell2.Add(per_line9rect);
                        ninth_row_cell2.Width = 80;
                        ninth_row_cell2.BackgroundColor = new Color(219, 219, 219);
                        ninth_row_cell2.BorderWidth = 2f;
                        ninth_row_cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        ninth_row_cell2.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        ninth_row_cell2.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(ninth_row_cell2);

                        Cell ninth_row_cell3 = new Cell();

                        fff = (float)System.Convert.ToSingle(ds1.Tables[0].Rows[8][1].ToString());
                        perf = (int)Math.Ceiling(fff);

                        ninth_row_cell3.Add(new Paragraph(perf.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        ninth_row_cell3.Width = 80;
                        ninth_row_cell3.BackgroundColor = new Color(219, 219, 219);
                        ninth_row_cell3.BorderWidth = 2f;
                        ninth_row_cell3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        ninth_row_cell3.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        ninth_row_cell3.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(ninth_row_cell3);

                        Cell ninth_row_cell4 = new Cell();
                        ninth_row_cell4.Add(new Paragraph(ds1.Tables[0].Rows[8][0].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        ninth_row_cell4.Width = 80;
                        ninth_row_cell4.BackgroundColor = new Color(219, 219, 219);
                        ninth_row_cell4.BorderWidth = 2f;
                        ninth_row_cell4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        ninth_row_cell4.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        ninth_row_cell4.BorderColor = new Color(255, 255, 255);
                        PDTopTable11.AddCell(ninth_row_cell4);

                        Cell PDTopCell26 = new Cell();
                        PDTopCell26.Add(PDTopTable11);
                        PDTopCell26.Width = 80;
                        PDTopTable999.AddCell(PDTopCell26);


                        //////////////////////////////////////////////////////////////////// end PERSONALITY STRENGTHS table


                        //Cell sapce1 = new Cell();
                        //sapce1.Add(new Paragraph("\n\n\n\n\n\n\n\n\n\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, Font.BOLD)));
                        //PDTopTable999.AddCell(sapce1);
                        //PDTopTable999.AddCell(acell33);
                        //Cell sapce2 = new Cell();
                        //sapce2.Add(new Paragraph("\n\n\n\n\n\n\n\n\n\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, Font.BOLD)));
                        //PDTopTable999.AddCell(sapce2);
                        doc.Add(PDTopTable999);


                        doc.Add(dheyalogo);

                        //////////////////////////////////////////////////////////////////
                        doc.Add(dheyalogo);
                        doc.NewPage();
                        iTextSharp.text.Image sevenpagefirst1 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/sevenfirst1.png"));
                        //jpeg.ScalePercent(35f);
                        sevenpagefirst1.ScaleToFit(600f, 550f);
                        sevenpagefirst1.SetAbsolutePosition(0, 600);
                        // jpeg.SpacingAfter = -50f;
                        doc.Add(sevenpagefirst1);

                        iTextSharp.text.Image textcrop = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/textcrop.png"));
                        //jpeg.ScalePercent(35f);
                        textcrop.ScaleToFit(283f, 232f);
                        textcrop.SetAbsolutePosition(38, 135);
                        // jpeg.SpacingAfter = -50f;
                        //  doc.Add(textcrop);


                        iTextSharp.text.Table maintableb1 = new iTextSharp.text.Table(1);
                        maintableb1.Width = 100;
                        maintableb1.DefaultCellBorder = 0;
                        maintableb1.Border = 0;


                        Cell maintabl0 = new Cell();
                        maintabl0.Add(new Paragraph("\n\n\n\n\n\n\n\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        Cell maintabl1 = new Cell();
                        Cell maintabl2 = new Cell();
                        Cell maintabl3 = new Cell();
                        Cell maintabl4 = new Cell();
                        Cell maintabl5 = new Cell();
                        Cell maintabl6 = new Cell();
                        Cell maintabl7 = new Cell();
                        Cell maintabl8 = new Cell();
                        Cell maintabl9 = new Cell();




                        iTextSharp.text.Table tb1 = new iTextSharp.text.Table(3);
                        tb1.Alignment = 0;
                        tb1.Width = 100;

                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        tb1.DefaultCellBorder = 0;
                        tb1.Border = 0;

                        //iTextSharp.text.Image endblock = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/endblock.png"));
                        //endblock.ScaleToFit(10f, 10f);
                        //Chunk imageChunk1 = new Chunk(endblock, 0, 0);
                        //Phrase limage = new Phrase();
                        //limage.Add(imageChunk1);


                        Cell tbCelll119 = new Cell();
                        tbCelll119.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;



                        tbCelll119.Add(new Paragraph("\n\n\n\nRelationship Orientation", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Paragraph pp7 = new Paragraph();
                        Phrase RelationshipOrientation = new Phrase(18, new Chunk("HIGH", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase RelationshipOrientation1 = new Phrase(18, new Chunk(" High scores indicate that the person has a positive outlook towards people, the team and the society. Also this person is cooperative, participative and outgoing. Extreme high scores indicate an easy-going temperament.   ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp7.Add(RelationshipOrientation);
                        pp7.Add(RelationshipOrientation1);
                        pp7.Add(limage);
                        tbCelll119.Add(pp7);
                        Paragraph pp77 = new Paragraph();
                        Phrase RelationshipOrientation2 = new Phrase(18, new Chunk("LOW", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase RelationshipOrientation3 = new Phrase(18, new Chunk(" Low scores indicate that this person is likely to be impersonal, aloof and not too friendly. This person prefers to remain isolated from the society/group. Also this person is cool, distant and reserved. Also a hesitant and overly formal behaviour is expected.  ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp77.Add(RelationshipOrientation2);
                        pp77.Add(RelationshipOrientation3);
                        pp77.Add(limage);
                        tbCelll119.Add(pp77);


                        tb1.AddCell(tbCelll119);
                        tb1.AddCell(acell33);
                        tb1.SetWidths(width);


                        Cell tbcellbb = new Cell();
                        tbcellbb.BackgroundColor = new Color(45, 136, 204);
                        tbcellbb.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        switch (dsss1.Tables[0].Rows[0][0].ToString())
                        {
                            case "Very Low":

                                tbcellbb.Add(verylow);

                                break;
                            case "Low":

                                tbcellbb.Add(low);
                                break;
                            case "Moderate":

                                tbcellbb.Add(middal);
                                break;
                            case "High":

                                tbcellbb.Add(high);
                                break;
                            case "Very High":

                                tbcellbb.Add(veryhigh);
                                break;
                        }
                        tbcellbb.Add(new Paragraph(dsss1.Tables[0].Rows[0][0].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        tbcellbb.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        tbcellbb.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        tb1.AddCell(tbcellbb);
                        // doc.Add(PDTopTableee7);
                        maintabl1.Add(tb1);

                        //////////////////////second row

                        iTextSharp.text.Table tb2 = new iTextSharp.text.Table(3);
                        tb2.Alignment = 0;
                        tb2.Width = 100;

                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        tb2.DefaultCellBorder = 0;
                        tb2.Border = 0;




                        Cell tbCelll110 = new Cell();
                        tbCelll110.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        //Paragraph ppp16 = new Paragraph();

                        //Phrase nMt = new Phrase(18, new Chunk("Management ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        //Phrase nMt1 = new Phrase(18, new Chunk(" Management is the process of getting activities completed and effectively with and through other people. It is the managerial process of forming a strategic vision, setting objectives, crafting a strategy and then implementing and executing the plan. You have an interest in management field means you like the activities where some management is needed. Like-managing deals, organize such events or activities, make plans for the growth, manage people & their activities etc.", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //ppp16.Add(nMt);
                        //ppp16.Add(nMt1);
                        //ppp16.Add(lm);
                        //tbCelll119.Add(ppp16);


                        tbCelll110.Add(new Paragraph("\nEmotionally Stable", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Paragraph pp8 = new Paragraph();
                        Phrase EmotionallyStable = new Phrase(18, new Chunk("HIGH", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase EmotionallyStable1 = new Phrase(18, new Chunk(" High scores indicate that this person is in good control of personal emotions. This person has a greater tolerance to handle frustration and face reality calmly.This person doesn’t get stressed or anxious under pressure. This person tries to maintain poise and maturity most of the times. This person doesn’t worry and get disturbed over petty inconvenience.  ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp8.Add(EmotionallyStable);
                        pp8.Add(EmotionallyStable1);
                        pp8.Add(limage);
                        tbCelll110.Add(pp8);
                        Paragraph pp88 = new Paragraph();
                        Phrase EmotionallyStable2 = new Phrase(18, new Chunk("LOW", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase EmotionallyStable3 = new Phrase(18, new Chunk(" Low scores indicate that this person is likely to have problems controlling emotions. This person also is likely to over-react to situations. He or she tends to become disorganized under pressure.There exists a tendency to get frustrated too fast. This person gets irritated, tensed, restless & impatient by his/her own feelings/ emotions too often. This person finds it difficult to cope effectively with stress.  ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp88.Add(EmotionallyStable2);
                        pp88.Add(EmotionallyStable3);
                        pp88.Add(limage);
                        tbCelll110.Add(pp88);


                        tb2.AddCell(tbCelll110);
                        tb2.AddCell(acell33);
                        tb2.SetWidths(width);


                        Cell tbcellbb1 = new Cell();
                        tbcellbb1.BackgroundColor = new Color(45, 136, 204);
                        tbcellbb1.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        switch (dsss1.Tables[0].Rows[1][0].ToString())
                        {
                            case "Very Low":

                                tbcellbb1.Add(verylow);

                                break;
                            case "Low":

                                tbcellbb1.Add(low);
                                break;
                            case "Moderate":

                                tbcellbb1.Add(middal);
                                break;
                            case "High":

                                tbcellbb1.Add(high);
                                break;
                            case "Very High":

                                tbcellbb1.Add(veryhigh);
                                break;
                        }
                        tbcellbb1.Add(new Paragraph(dsss1.Tables[0].Rows[1][0].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        tbcellbb1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        tbcellbb1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        tb2.AddCell(tbcellbb1);
                        // doc.Add(PDTopTableee7);
                        maintabl2.Add(tb2);


                        //////////////////////third row



                        iTextSharp.text.Table tb3 = new iTextSharp.text.Table(3);
                        tb3.Alignment = 0;
                        tb3.Width = 100;

                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        tb3.DefaultCellBorder = 0;
                        tb3.Border = 0;



                        Cell tbCelll111 = new Cell();
                        tbCelll111.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        //Paragraph ppp16 = new Paragraph();

                        //Phrase nMt = new Phrase(18, new Chunk("Management ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        //Phrase nMt1 = new Phrase(18, new Chunk(" Management is the process of getting activities completed and effectively with and through other people. It is the managerial process of forming a strategic vision, setting objectives, crafting a strategy and then implementing and executing the plan. You have an interest in management field means you like the activities where some management is needed. Like-managing deals, organize such events or activities, make plans for the growth, manage people & their activities etc.", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //ppp16.Add(nMt);
                        //ppp16.Add(nMt1);
                        //ppp16.Add(lm);
                        //tbCelll119.Add(ppp16);

                        doc.Add(dheyalogo);
                        //doc.Add(lastpatch);

                        tbCelll111.Add(new Paragraph("\nAssertive", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Paragraph prp9 = new Paragraph();
                        Phrase Arssertive = new Phrase(18, new Chunk("HIGH", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase Arssertive1 = new Phrase(18, new Chunk(" High  scores  indicate that  this  person  loves  competition  is   competitive  by nature. This  person  is  likely  to  be  freeminded  and  independent.This  person  can  express  feelings  and  thoughts  with  greater  ease.This  person  knows  his/her  rights  and  tends  to  control  others  and  helps  them  know  their  rights. This  person  has  good  control  over  his/her anger  and  manages  to express  his/her  displeasure  in  a  logical  way.", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //prp9.SetLeading(50.0f, 50.0f);
                        prp9.Add(Arssertive);
                        prp9.Add(Arssertive1);
                        prp9.Add(limage);
                        tbCelll111.Add(prp9);


                        Paragraph pp99 = new Paragraph();
                        Phrase thissss = new Phrase(18, new Chunk("\n\nThis person knows his/her rights and tends to control others and helps them know their rights. This person has good control over his/her anger and manages to express his/her displeasure in a logical way.", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        Phrase Assertive2 = new Phrase(18, new Chunk("\n\n\nLOW", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase Assertive3 = new Phrase(18, new Chunk(" Low scores indicate that this person dislikes competition. This person also prefers a non demanding environment. This person has a non demanding disposition and has low decision needs.This person mostly avoids taking an independent decision or stance on issues. This person depends on others for a decision. He/she also finds it difficult to express his /her feelings, thoughts and desires.  ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //prp9.SetLeading(50.0f, 50.0f);
                        // pp99.Add(thissss);
                        //pp99.Add(limage);
                        pp99.Add(Assertive2);
                        pp99.Add(Assertive3);
                        pp99.Add(limage);
                        // pp99.SetLeading(25.0f, 25.0f);
                        tbCelll111.Add(pp99);

                        tb3.AddCell(tbCelll111);
                        tb3.AddCell(acell33);
                        tb3.SetWidths(width);


                        Cell tbcellbb2 = new Cell();
                        tbcellbb2.BackgroundColor = new Color(45, 136, 204);
                        tbcellbb2.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        switch (dsss1.Tables[0].Rows[2][0].ToString())
                        {
                            case "Very Low":

                                tbcellbb2.Add(verylow);

                                break;
                            case "Low":

                                tbcellbb2.Add(low);
                                break;
                            case "Moderate":

                                tbcellbb2.Add(middal);
                                break;
                            case "High":

                                tbcellbb2.Add(high);
                                break;
                            case "Very High":

                                tbcellbb2.Add(veryhigh);
                                break;
                        }

                        tbcellbb2.Add(new Paragraph(dsss1.Tables[0].Rows[2][0].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        tbcellbb2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        tbcellbb2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        tb3.AddCell(tbcellbb2);
                        // doc.Add(PDTopTableee7);
                        maintabl3.Add(tb3);

                        //////////////////////fourth row

                        iTextSharp.text.Table tb4 = new iTextSharp.text.Table(3);
                        tb4.Alignment = 0;
                        tb4.Width = 100;

                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        tb4.DefaultCellBorder = 0;
                        tb4.Border = 0;




                        Cell tbCelll112 = new Cell();


                        tbCelll112.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;


                        tbCelll112.Add(new Paragraph("\nEnthusiasm and Energy ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Paragraph pp10 = new Paragraph();
                        Phrase EnthusiasmandEnergy = new Phrase(18, new Chunk("HIGH", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase EnthusiasmandEnergy1 = new Phrase(18, new Chunk(" High scores indicate that this person would always be ready to take up and accept new and greater responsibilities. This person would like to take new challenges & handle critical situations with great alacrity. This person also displays high energy and willingness to experience new and unknown experience or situations. Also this person would willingly deal adequately with difficult conditions. This person displays a tendency to take lead in new varied activities and love adventures (exploring unchartered territories). Also this person is known as insightful and imaginative. ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp10.Add(EnthusiasmandEnergy);
                        pp10.Add(EnthusiasmandEnergy1);
                        pp10.Add(limage);
                        tbCelll112.Add(pp10);
                        Paragraph pp100 = new Paragraph();

                        Phrase EnthusiasmandEnergy2 = new Phrase(18, new Chunk("LOW", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase EnthusiasmandEnergy3 = new Phrase(18, new Chunk("Low scores indicate avoidance of new or increased responsibilities, activities and challenges. This person also prefers to stay away from critical situations. This person also doesn’t get involved in group event or team oriented activities. This person has a tendency to ignore dealing adequately with difficult conditions. This person is risk and change averse. ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp100.Add(EnthusiasmandEnergy2);
                        pp100.Add(EnthusiasmandEnergy3);
                        pp100.Add(limage);
                        tbCelll112.Add(pp100);


                        tb4.AddCell(tbCelll112);
                        tb4.AddCell(acell33);
                        tb4.SetWidths(width);


                        Cell tbcellbb3 = new Cell();
                        tbcellbb3.BackgroundColor = new Color(45, 136, 204);
                        tbcellbb3.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        switch (dsss1.Tables[0].Rows[3][0].ToString())
                        {
                            case "Very Low":

                                tbcellbb3.Add(verylow);

                                break;
                            case "Low":

                                tbcellbb3.Add(low);
                                break;
                            case "Moderate":

                                tbcellbb3.Add(middal);
                                break;
                            case "High":

                                tbcellbb3.Add(high);
                                break;
                            case "Very High":

                                tbcellbb3.Add(veryhigh);
                                break;
                        }
                        tbcellbb3.Add(new Paragraph(dsss1.Tables[0].Rows[3][0].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        tbcellbb3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        tbcellbb3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        tb4.AddCell(tbcellbb3);
                        // doc.Add(PDTopTableee7);
                        maintabl4.Add(tb4);


                        //////////////////////fifth row

                        iTextSharp.text.Table tb5 = new iTextSharp.text.Table(3);
                        tb5.Alignment = 0;
                        tb5.Width = 100;

                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        tb5.DefaultCellBorder = 0;
                        tb5.Border = 0;




                        Cell tbCelll113 = new Cell();
                        tbCelll113.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;

                        tbCelll113.Add(new Paragraph("\nResponsibility and Conscientiousness ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));

                        Paragraph pp11 = new Paragraph();
                        Phrase ResponsibilityandConscientiousness = new Phrase(18, new Chunk("HIGH", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase ResponsibilityandConscientiousness1 = new Phrase(18, new Chunk(" Person with high scores shows diligence, drive and domination by a sense of his/her duty. The person has a great regard for moral standards and ethics. You can expect honesty and sincerity towards his/her work. This person also displays strong sense of responsibility and orderliness. ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp11.Add(ResponsibilityandConscientiousness);
                        pp11.Add(ResponsibilityandConscientiousness1);
                        pp11.Add(limage);
                        tbCelll113.Add(pp11);
                        Paragraph pp101 = new Paragraph();
                        Phrase ResponsibilityandConscientiousness2 = new Phrase(18, new Chunk("LOW", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase ResponsibilityandConscientiousness3 = new Phrase(18, new Chunk(" Person with low scores show low levels of persistence, drive & domination by a sense of his/her duty. Also this person may lack complete commitment towards the given task/work.  ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp101.Add(ResponsibilityandConscientiousness2);
                        pp101.Add(ResponsibilityandConscientiousness3);
                        pp101.Add(limage);
                        tbCelll113.Add(pp101);


                        tb5.AddCell(tbCelll113);
                        tb5.AddCell(acell33);
                        tb5.SetWidths(width);


                        Cell tbcellbb4 = new Cell();
                        tbcellbb4.BackgroundColor = new Color(45, 136, 204);
                        tbcellbb4.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        switch (dsss1.Tables[0].Rows[4][0].ToString())
                        {
                            case "Very Low":

                                tbcellbb4.Add(verylow);

                                break;
                            case "Low":

                                tbcellbb4.Add(low);
                                break;
                            case "Moderate":

                                tbcellbb4.Add(middal);
                                break;
                            case "High":

                                tbcellbb4.Add(high);
                                break;
                            case "Very High":

                                tbcellbb4.Add(veryhigh);
                                break;
                        }
                        tbcellbb4.Add(new Paragraph(dsss1.Tables[0].Rows[4][0].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        tbcellbb4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        tbcellbb4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        tb5.AddCell(tbcellbb4);
                        // doc.Add(PDTopTableee7);
                        maintabl5.Add(tb5);


                        //////////////////////sixth row

                        iTextSharp.text.Table tb6 = new iTextSharp.text.Table(3);
                        tb6.Alignment = 0;
                        tb6.Width = 100;

                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        tb6.DefaultCellBorder = 0;
                        tb6.Border = 0;




                        Cell tbCelll114 = new Cell();
                        tbCelll114.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;


                        tbCelll114.Add(new Paragraph("\nSocial Responsiveness ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));

                        Paragraph pp12 = new Paragraph();
                        Phrase SocialResponsiveness = new Phrase(18, new Chunk("HIGH", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase SocialResponsiveness1 = new Phrase(18, new Chunk(" The person with high scores is socially precise. This person displays greater self-discipline and respects customs, social protocol, and also would have good manners. This person has a firm code of right and wrong, good and bad. Also, the person shows a strong sense of identity, awareness of “self”. This person also maintains a positive social reputation in the society.", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp12.Add(SocialResponsiveness);
                        pp12.Add(SocialResponsiveness1);
                        pp12.Add(limage);
                        tbCelll114.Add(pp12);
                        Paragraph pp102 = new Paragraph();
                        Phrase SocialResponsiveness2 = new Phrase(18, new Chunk("LOW", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase SocialResponsiveness3 = new Phrase(18, new Chunk(" Person with low scores considers himself/herself free from social constraints, norms and conventions. This person may not respect customs or even question them. By nature, this person is open minded and open by attitude and follows his/her own urges. He/she doesn’t persist with boring tasks. ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp102.Add(SocialResponsiveness2);
                        pp102.Add(SocialResponsiveness3);
                        pp102.Add(limage);
                        tbCelll114.Add(pp102);


                        tb6.AddCell(tbCelll114);
                        tb6.AddCell(acell33);
                        tb6.SetWidths(width);


                        Cell tbcellbb5 = new Cell();
                        tbcellbb5.BackgroundColor = new Color(45, 136, 204);
                        tbcellbb5.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        switch (dsss1.Tables[0].Rows[5][0].ToString())
                        {
                            case "Very Low":

                                tbcellbb5.Add(verylow);

                                break;
                            case "Low":

                                tbcellbb5.Add(low);
                                break;
                            case "Moderate":

                                tbcellbb5.Add(middal);
                                break;
                            case "High":

                                tbcellbb5.Add(high);
                                break;
                            case "Very High":

                                tbcellbb5.Add(veryhigh);
                                break;
                        }
                        tbcellbb5.Add(new Paragraph(dsss1.Tables[0].Rows[5][0].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        tbcellbb5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        tbcellbb5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        tb6.AddCell(tbcellbb5);
                        // doc.Add(PDTopTableee7);
                        maintabl6.Add(tb6);


                        //////////////////////seventh row

                        iTextSharp.text.Table tb7 = new iTextSharp.text.Table(3);
                        tb7.Alignment = 0;
                        tb7.Width = 100;

                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        tb7.DefaultCellBorder = 0;
                        tb7.Border = 0;


                        // doc.Add(lastpatch);

                        Cell tbCelll115 = new Cell();
                        tbCelll115.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;


                        tbCelll115.Add(new Paragraph("\n\n\n\n\n\n\nTough Minded ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));

                        Paragraph pp13 = new Paragraph();
                        Phrase ToughMinded = new Phrase(18, new Chunk("HIGH", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase ToughMinded1 = new Phrase(18, new Chunk(" The person with high scores is cool, emotionally detached and controlled. This person is capable of making rapid decisions when necessary. This person would be able to adjust quickly under pressure of time. Also this person by nature is alert and analytical with new information. This person is disciplined and intellectual in nature and rejects illusions. This person has a greater resilience and can take rejection or disapproval in a positive manner. ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp13.Add(ToughMinded);
                        pp13.Add(ToughMinded1);
                        pp13.Add(limage);
                        tbCelll115.Add(pp13);
                        Paragraph pp103 = new Paragraph();
                        Phrase ToughMinded2 = new Phrase(18, new Chunk("LOW", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase ToughMinded3 = new Phrase(18, new Chunk(" Person with low scores is emotionally connected, involved and open. This person finds it difficult to take firm and independent decisions. This person displays an emotionally connected thinking and is driven more by emotions than practicality. ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp103.Add(ToughMinded2);
                        pp103.Add(ToughMinded3);
                        pp103.Add(limage);
                        tbCelll115.Add(pp103);
                        doc.Add(dheyalogo);

                        tb7.AddCell(tbCelll115);
                        tb7.AddCell(acell33);
                        tb7.SetWidths(width);


                        Cell tbcellbb6 = new Cell();
                        tbcellbb6.BackgroundColor = new Color(45, 136, 204);
                        tbcellbb6.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        switch (dsss1.Tables[0].Rows[6][0].ToString())
                        {
                            case "Very Low":

                                tbcellbb6.Add(verylow);

                                break;
                            case "Low":

                                tbcellbb6.Add(low);
                                break;
                            case "Moderate":

                                tbcellbb6.Add(middal);
                                break;
                            case "High":

                                tbcellbb6.Add(high);
                                break;
                            case "Very High":

                                tbcellbb6.Add(veryhigh);
                                break;
                        }
                        tbcellbb6.Add(new Paragraph(dsss1.Tables[0].Rows[6][0].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        tbcellbb6.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        tbcellbb6.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        tb7.AddCell(tbcellbb6);
                        // doc.Add(PDTopTableee7);
                        maintabl7.Add(tb7);


                        //////////////////////eight row

                        iTextSharp.text.Table tb8 = new iTextSharp.text.Table(3);
                        tb8.Alignment = 0;
                        tb8.Width = 100;

                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        tb8.DefaultCellBorder = 0;
                        tb8.Border = 0;




                        Cell tbCelll116 = new Cell();
                        tbCelll116.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;


                        tbCelll116.Add(new Paragraph("\n\nSelf-Assured ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Paragraph pp14 = new Paragraph();
                        Phrase SelfAssured = new Phrase(18, new Chunk("HIGH", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase SelfAssured1 = new Phrase(18, new Chunk(" By nature the person with high scores in self assured behaviour is placid, secured, satisfied,confident and untroubled. This person is independent and can operate autonomously. This person prefers to take his/her own decisions and is capable and confident of facing any particular situation. This person has greater levels of self belief and higher confidence in his/her capabilities.  ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp14.Add(SelfAssured);
                        pp14.Add(SelfAssured1);
                        pp14.Add(limage);
                        tbCelll116.Add(pp14);
                        Paragraph pp104 = new Paragraph();
                        Phrase SelfAssured2 = new Phrase(18, new Chunk("LOW", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase SelfAssured3 = new Phrase(18, new Chunk(" By nature this person is dependent on others. This person is more group oriented and always prefers to work with a group. This person is more of a follower than a leader. This person is likely to display low levels of self-belief and confidence in matters of personal capability. ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp104.Add(SelfAssured2);
                        pp104.Add(SelfAssured3);
                        pp104.Add(limage);
                        tbCelll116.Add(pp104);


                        tb8.AddCell(tbCelll116);
                        tb8.AddCell(acell33);
                        tb8.SetWidths(width);


                        Cell tbcellbb7 = new Cell();
                        tbcellbb7.BackgroundColor = new Color(45, 136, 204);
                        tbcellbb7.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        switch (dsss1.Tables[0].Rows[7][0].ToString())
                        {
                            case "Very Low":

                                tbcellbb7.Add(verylow);

                                break;
                            case "Low":

                                tbcellbb7.Add(low);
                                break;
                            case "Moderate":

                                tbcellbb7.Add(middal);
                                break;
                            case "High":

                                tbcellbb7.Add(high);
                                break;
                            case "Very High":

                                tbcellbb7.Add(veryhigh);
                                break;
                        }
                        tbcellbb7.Add(new Paragraph(dsss1.Tables[0].Rows[7][0].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        tbcellbb7.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        tbcellbb7.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        tb8.AddCell(tbcellbb7);
                        // doc.Add(PDTopTableee7);
                        maintabl8.Add(tb8);


                        //////////////////////ninth row

                        iTextSharp.text.Table tb9 = new iTextSharp.text.Table(3);
                        tb9.Alignment = 0;
                        tb9.Width = 100;

                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        tb9.DefaultCellBorder = 0;
                        tb9.Border = 0;




                        Cell tbCelll117 = new Cell();
                        tbCelll117.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;




                        tbCelll117.Add(new Paragraph("\nRelaxed ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Paragraph pp15 = new Paragraph();
                        Phrase Relaxed = new Phrase(18, new Chunk("HIGH", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase Relaxed1 = new Phrase(18, new Chunk(" The person with high scores in relaxed behaviour is cool, calm & relaxed by nature. This person doesn’t get frustrated or tensed even in the critical situations. This person is calm and displays thoughtfulness. This person on extreme levels tends to resist actions and changes. This person prefers a non-changing and constant/routine environment.  ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp15.Add(Relaxed);
                        pp15.Add(Relaxed1);
                        pp15.Add(limage);
                        tbCelll117.Add(pp15);
                        Paragraph pp105 = new Paragraph();
                        Phrase Relaxed2 = new Phrase(18, new Chunk("LOW", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase Relaxed3 = new Phrase(18, new Chunk(" This person gets anxious very soon.This person is restless, mobile and alert.This person displays impatience to complex issues or problems. This person is high paced and a sharp thinker. This person cannot work calmly and needs action and changing environment/work as a stimulant. ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp105.Add(Relaxed2);
                        pp105.Add(Relaxed3);
                        pp105.Add(limage);
                        tbCelll117.Add(pp105);


                        tb9.AddCell(tbCelll117);
                        tb9.AddCell(acell33);
                        tb9.SetWidths(width);


                        Cell tbcellbb8 = new Cell();
                        tbcellbb8.BackgroundColor = new Color(45, 136, 204);
                        tbcellbb8.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        switch (dsss1.Tables[0].Rows[8][0].ToString())
                        {
                            case "Very Low":

                                tbcellbb8.Add(verylow);

                                break;
                            case "Low":

                                tbcellbb8.Add(low);
                                break;
                            case "Moderate":

                                tbcellbb8.Add(middal);
                                break;
                            case "High":

                                tbcellbb8.Add(high);
                                break;
                            case "Very High":

                                tbcellbb8.Add(veryhigh);
                                break;
                        }
                        tbcellbb8.Add(new Paragraph(dsss1.Tables[0].Rows[8][0].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        tbcellbb8.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        tbcellbb8.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        tb9.AddCell(tbcellbb8);
                        // doc.Add(PDTopTableee7);
                        maintabl9.Add(tb9);







                        maintableb1.AddCell(maintabl0);
                        maintableb1.AddCell(maintabl1);
                        maintableb1.AddCell(maintabl2);
                        maintableb1.AddCell(maintabl3);
                        maintableb1.AddCell(maintabl4);
                        maintableb1.AddCell(maintabl5);
                        maintableb1.AddCell(maintabl6);
                        maintableb1.AddCell(maintabl7);
                        maintableb1.AddCell(maintabl8);
                        maintableb1.AddCell(maintabl9);
                        doc.Add(maintableb1);






                        //////////////////////////////////////////////////////////////////

                        doc.Add(dheyalogo);
                        doc.NewPage();

                        in1bar();


                        iTextSharp.text.Table lasttabledis = new iTextSharp.text.Table(1);
                        lasttabledis.Alignment = 0;
                        lasttabledis.Width = 100;
                        lasttabledis.DefaultCellBorder = 0;
                        lasttabledis.Border = 0;

                        Cell PDTopCell27 = new Cell();

                        Paragraph pop2 = new Paragraph();
                        pop2.SetLeading(15.0f, 15.0f);
                        Phrase ph4 = new Phrase(18, new Chunk("\n\n\n\n\n\n\n\n\nSUMMARY OF YOUR PERSONALITY INTERESTS ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase ph5 = new Phrase(18, new Chunk("Your Interests define your likes or dislikes for certain kind of activities. In the activities of your interests, this section captures the areas where you perform whole heartedly and also enjoy the most. In the interest inventory we have made an effort to keep into your interests and have linked them into a set of careers.", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pop2.Add(ph4);
                        pop2.Add(ph5);
                        pop2.Add(limage);


                        PDTopCell27.Add(pop2);
                        PDTopCell27.Width = 80;
                        PDTopCell27.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        lasttabledis.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_TOP;
                        lasttabledis.AddCell(PDTopCell27);
                        doc.Add(lasttabledis);






                        iTextSharp.text.Table PDTopTable9999 = new iTextSharp.text.Table(3);
                        PDTopTable9999.Alignment = 0;
                        PDTopTable9999.Width = 100;
                        // PDTopTable9.Padding = 20f;
                        PDTopTable9999.SetWidths(yy);
                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        PDTopTable9999.DefaultCellBorder = 0;
                        PDTopTable9999.Border = 0;

                        Cell PDTopCell27_haf = new Cell();

                        //add here hapf table 

                        iTextSharp.text.Table PDTopTable12_half = new iTextSharp.text.Table(4);

                        PDTopTable12_half.Alignment = 0;
                        PDTopTable12_half.Width = 100;

                        // PDTopTable10.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        //PDTopTable10.DefaultCellBorder = 0;
                        //PDTopTable10.Border = 0;

                        ////////////////////// Add table heading
                        Cell INTERESTS_heading_cell1_half = new Cell();
                        INTERESTS_heading_cell1_half.Add(new Paragraph("Interest", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        INTERESTS_heading_cell1_half.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        INTERESTS_heading_cell1_half.Width = 80;

                        INTERESTS_heading_cell1_half.BackgroundColor = new Color(231, 206, 37);
                        INTERESTS_heading_cell1_half.BorderWidth = 2f;
                        INTERESTS_heading_cell1_half.BorderColor = new Color(255, 255, 255);
                        INTERESTS_heading_cell1_half.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        INTERESTS_heading_cell1_half.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopTable12_half.AddCell(INTERESTS_heading_cell1_half);

                        Cell INTERESTS_heading_cell2_half = new Cell();
                        INTERESTS_heading_cell2_half.Add(new Paragraph("Rating", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        INTERESTS_heading_cell2_half.Width = 80;
                        INTERESTS_heading_cell2_half.BackgroundColor = new Color(231, 206, 37);
                        INTERESTS_heading_cell2_half.BorderWidth = 2f;
                        INTERESTS_heading_cell2_half.BorderColor = new Color(255, 255, 255);
                        INTERESTS_heading_cell2_half.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        INTERESTS_heading_cell2_half.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopTable12_half.AddCell(INTERESTS_heading_cell2_half);

                        Cell INTERESTS_heading_cell3_half = new Cell();
                        INTERESTS_heading_cell3_half.Add(new Paragraph("Percentile", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        INTERESTS_heading_cell3_half.Width = 80;
                        INTERESTS_heading_cell3_half.BackgroundColor = new Color(231, 206, 37);
                        INTERESTS_heading_cell3_half.BorderWidth = 2f;
                        INTERESTS_heading_cell3_half.BorderColor = new Color(255, 255, 255);
                        INTERESTS_heading_cell3_half.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        INTERESTS_heading_cell3_half.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopTable12_half.AddCell(INTERESTS_heading_cell3_half);

                        Cell INTERESTS_heading_cell4_half = new Cell();
                        INTERESTS_heading_cell4_half.Add(new Paragraph("Rating", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        INTERESTS_heading_cell4_half.Width = 80;
                        INTERESTS_heading_cell4_half.BackgroundColor = new Color(231, 206, 37);
                        INTERESTS_heading_cell4_half.BorderWidth = 2f;
                        INTERESTS_heading_cell4_half.BorderColor = new Color(255, 255, 255);
                        INTERESTS_heading_cell4_half.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        INTERESTS_heading_cell4_half.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                        PDTopTable12_half.AddCell(INTERESTS_heading_cell4_half);

                        ////////////////////// end table heading


                        /////////////////////// get marks of candidate 


                        //strcmd = "SELECT P_rating,rating FROM tbl_II_cand_factors where c_id = '" + c_id + "'order by factor_no";
                        //DataSet ds2 = clsdb_Xaction.ExecDataSet(strcmd);

                        //////////////////////// end get marks of candidate



                        ///////// table first row
                        Cell first_INTERESTS_row_cell1 = new Cell();
                        //first_INTERESTS_row_cell1.Add(new Paragraph("Management", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        first_INTERESTS_row_cell1.Add(new Paragraph(ds2.Tables[0].Rows[0].ItemArray[2].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        first_INTERESTS_row_cell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));
                        first_INTERESTS_row_cell1.Width = 80;
                        first_INTERESTS_row_cell1.BackgroundColor = new Color(219, 219, 219);
                        first_INTERESTS_row_cell1.BorderWidth = 2f;
                        first_INTERESTS_row_cell1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        first_INTERESTS_row_cell1.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        first_INTERESTS_row_cell1.BorderColor = new Color(255, 255, 255);
                        PDTopTable12_half.AddCell(first_INTERESTS_row_cell1);

                        Cell first_INTERESTS_row_cell2 = new Cell();


                        //////////////  rectangle of line 1
                        # region rr111

                        iTextSharp.text.Table INTERESTS_per1 = new iTextSharp.text.Table(5);
                        Cell INTERESTS_1_cell1 = new Cell();
                        INTERESTS_1_cell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_1_cell1.Width = 2;
                        INTERESTS_1_cell1.BackgroundColor = new Color(225, 225, 0);
                        INTERESTS_1_cell1.BorderWidth = 4f;
                        INTERESTS_1_cell1.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell1);

                        Cell INTERESTS_1_cell2 = new Cell();
                        INTERESTS_1_cell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_1_cell2.Width = 2;
                        INTERESTS_1_cell2.BackgroundColor = new Color(225, 225, 0);
                        INTERESTS_1_cell2.BorderWidth = 4f;
                        INTERESTS_1_cell2.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell2);

                        Cell INTERESTS_1_cell3 = new Cell();
                        INTERESTS_1_cell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_1_cell3.Width = 2;
                        INTERESTS_1_cell3.BackgroundColor = new Color(225, 225, 0);
                        INTERESTS_1_cell3.BorderWidth = 4f;
                        INTERESTS_1_cell3.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell3);

                        Cell INTERESTS_1_cell4 = new Cell();
                        INTERESTS_1_cell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_1_cell4.Width = 2;
                        INTERESTS_1_cell4.BackgroundColor = new Color(225, 225, 0);
                        INTERESTS_1_cell4.BorderWidth = 4f;
                        INTERESTS_1_cell4.BorderColor = new Color(255, 255, 255);
                        //thirdTable1.AddCell(thirdcell4);

                        Cell INTERESTS_1_cell5 = new Cell();
                        INTERESTS_1_cell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_1_cell5.Width = 2;
                        INTERESTS_1_cell5.BackgroundColor = new Color(225, 225, 0);
                        INTERESTS_1_cell5.BorderWidth = 4f;
                        INTERESTS_1_cell5.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell5);



                        switch (ds2.Tables[0].Rows[0][1].ToString())
                        {
                            case "Very Low":

                                INTERESTS_1_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_1_cell2.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_1_cell3.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_1_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_1_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Low":

                                INTERESTS_1_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_1_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_1_cell3.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_1_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_1_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Moderate":

                                INTERESTS_1_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_1_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_1_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_1_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_1_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "High":

                                INTERESTS_1_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_1_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_1_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_1_cell4.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_1_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Very High":

                                INTERESTS_1_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_1_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_1_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_1_cell4.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_1_cell5.BackgroundColor = new Color(225, 225, 0);

                                break;
                        }

                        INTERESTS_per1.AddCell(INTERESTS_1_cell1);
                        INTERESTS_per1.AddCell(INTERESTS_1_cell2);
                        INTERESTS_per1.AddCell(INTERESTS_1_cell3);
                        INTERESTS_per1.AddCell(INTERESTS_1_cell4);
                        INTERESTS_per1.AddCell(INTERESTS_1_cell5);
                        INTERESTS_per1.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        INTERESTS_per1.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        ////////////////////////////////////////////////////
                        # endregion



                        switch (ds2.Tables[0].Rows[0][1].ToString())
                        {
                            case "Very Low":

                                first_INTERESTS_row_cell2.Add(rverylow);

                                break;
                            case "Low":

                                first_INTERESTS_row_cell2.Add(rlow);

                                break;
                            case "Moderate":

                                first_INTERESTS_row_cell2.Add(rmodrate);

                                break;
                            case "High":

                                first_INTERESTS_row_cell2.Add(rhigh);

                                break;
                            case "Very High":

                                first_INTERESTS_row_cell2.Add(rveryhi);

                                break;
                        }


                        // first_INTERESTS_row_cell2.Add(INTERESTS_per1);
                        first_INTERESTS_row_cell2.Width = 80;
                        first_INTERESTS_row_cell2.BackgroundColor = new Color(219, 219, 219);
                        first_INTERESTS_row_cell2.BorderWidth = 2f;
                        first_INTERESTS_row_cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        first_INTERESTS_row_cell2.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        first_INTERESTS_row_cell2.BorderColor = new Color(255, 255, 255);
                        PDTopTable12_half.AddCell(first_INTERESTS_row_cell2);

                        Cell first_INTERESTS_row_cell3 = new Cell();

                        float ffff = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[0][0].ToString());
                        int perff = (int)Math.Ceiling(ffff);

                        first_INTERESTS_row_cell3.Add(new Paragraph(perff.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        first_INTERESTS_row_cell3.Width = 80;
                        first_INTERESTS_row_cell3.BackgroundColor = new Color(219, 219, 219);
                        first_INTERESTS_row_cell3.BorderWidth = 2f;
                        first_INTERESTS_row_cell3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        first_INTERESTS_row_cell3.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        first_INTERESTS_row_cell3.BorderColor = new Color(255, 255, 255);
                        PDTopTable12_half.AddCell(first_INTERESTS_row_cell3);

                        Cell first_INTERESTS_row_cell4 = new Cell();
                        first_INTERESTS_row_cell4.Add(new Paragraph(ds2.Tables[0].Rows[0][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        first_INTERESTS_row_cell4.Width = 80;
                        first_INTERESTS_row_cell4.BackgroundColor = new Color(219, 219, 219);
                        first_INTERESTS_row_cell4.BorderWidth = 2f;
                        first_INTERESTS_row_cell4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        first_INTERESTS_row_cell4.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        first_INTERESTS_row_cell4.BorderColor = new Color(255, 255, 255);
                        PDTopTable12_half.AddCell(first_INTERESTS_row_cell4);


                        /////////// table second row

                        Cell second_INTERESTS_row_cell1 = new Cell();

                        //second_INTERESTS_row_cell1.Add(new Paragraph("Technical", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        second_INTERESTS_row_cell1.Add(new Paragraph(ds2.Tables[0].Rows[1].ItemArray[2].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        second_INTERESTS_row_cell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));
                        second_INTERESTS_row_cell1.Width = 80;
                        second_INTERESTS_row_cell1.BorderWidth = 2f;
                        second_INTERESTS_row_cell1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        second_INTERESTS_row_cell1.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        second_INTERESTS_row_cell1.BorderColor = new Color(255, 255, 255);
                        PDTopTable12_half.AddCell(second_INTERESTS_row_cell1);

                        Cell second_INTERESTS_row_cell2 = new Cell();


                        //////////////  rectangle of line 2
                        # region rr222

                        iTextSharp.text.Table INTERESTS_per2 = new iTextSharp.text.Table(5);
                        Cell INTERESTS_2_cell1 = new Cell();
                        INTERESTS_2_cell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_2_cell1.Width = 2;
                        INTERESTS_2_cell1.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_2_cell1.BorderWidth = 4f;
                        INTERESTS_2_cell1.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell1);

                        Cell INTERESTS_2_cell2 = new Cell();
                        INTERESTS_2_cell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_2_cell2.Width = 2;
                        INTERESTS_2_cell2.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_2_cell2.BorderWidth = 4f;
                        INTERESTS_2_cell2.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell2);

                        Cell INTERESTS_2_cell3 = new Cell();
                        INTERESTS_2_cell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_2_cell3.Width = 2;
                        INTERESTS_2_cell3.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_2_cell3.BorderWidth = 4f;
                        INTERESTS_2_cell3.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell3);

                        Cell INTERESTS_2_cell4 = new Cell();
                        INTERESTS_2_cell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_2_cell4.Width = 2;
                        INTERESTS_2_cell4.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_2_cell4.BorderWidth = 4f;
                        INTERESTS_2_cell4.BorderColor = new Color(255, 255, 255);
                        //thirdTable1.AddCell(thirdcell4);

                        Cell INTERESTS_2_cell5 = new Cell();
                        INTERESTS_2_cell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_2_cell5.Width = 2;
                        INTERESTS_2_cell5.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_2_cell5.BorderWidth = 4f;
                        INTERESTS_2_cell5.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell5);

                        switch (ds2.Tables[0].Rows[1][1].ToString())
                        {
                            case "Very Low":

                                INTERESTS_2_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_2_cell2.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_2_cell3.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_2_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_2_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Low":

                                INTERESTS_2_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_2_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_2_cell3.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_2_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_2_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Moderate":

                                INTERESTS_2_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_2_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_2_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_2_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_2_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "High":

                                INTERESTS_2_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_2_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_2_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_2_cell4.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_2_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Very High":

                                INTERESTS_2_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_2_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_2_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_2_cell4.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_2_cell5.BackgroundColor = new Color(225, 225, 0);

                                break;
                        }

                        INTERESTS_per2.AddCell(INTERESTS_2_cell1);
                        INTERESTS_per2.AddCell(INTERESTS_2_cell2);
                        INTERESTS_per2.AddCell(INTERESTS_2_cell3);
                        INTERESTS_per2.AddCell(INTERESTS_2_cell4);
                        INTERESTS_per2.AddCell(INTERESTS_2_cell5);
                        INTERESTS_per2.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        INTERESTS_per2.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        ////////////////////////////////////////////////////
                        # endregion


                        switch (ds2.Tables[0].Rows[1][1].ToString())
                        {
                            case "Very Low":

                                second_INTERESTS_row_cell2.Add(rverylow);

                                break;
                            case "Low":

                                second_INTERESTS_row_cell2.Add(rlow);

                                break;
                            case "Moderate":

                                second_INTERESTS_row_cell2.Add(rmodrate);

                                break;
                            case "High":

                                second_INTERESTS_row_cell2.Add(rhigh);

                                break;
                            case "Very High":

                                second_INTERESTS_row_cell2.Add(rveryhi);

                                break;
                        }

                        // second_INTERESTS_row_cell2.Add(INTERESTS_per2);
                        second_INTERESTS_row_cell2.Width = 80;
                        second_INTERESTS_row_cell2.BorderWidth = 2f;
                        second_INTERESTS_row_cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        second_INTERESTS_row_cell2.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        second_INTERESTS_row_cell2.BorderColor = new Color(255, 255, 255);
                        PDTopTable12_half.AddCell(second_INTERESTS_row_cell2);



                        ffff = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[1][0].ToString());
                        perf = (int)Math.Ceiling(ffff);

                        Cell second_INTERESTS_row_cell3 = new Cell();
                        second_INTERESTS_row_cell3.Add(new Paragraph(perf.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        second_INTERESTS_row_cell3.Width = 80;
                        second_INTERESTS_row_cell3.BorderWidth = 2f;
                        second_INTERESTS_row_cell3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        second_INTERESTS_row_cell3.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        second_INTERESTS_row_cell3.BorderColor = new Color(255, 255, 255);
                        PDTopTable12_half.AddCell(second_INTERESTS_row_cell3);

                        Cell second_INTERESTS_row_cell4 = new Cell();
                        second_INTERESTS_row_cell4.Add(new Paragraph(ds2.Tables[0].Rows[1][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        second_INTERESTS_row_cell4.Width = 80;
                        second_INTERESTS_row_cell4.BorderWidth = 2f;
                        second_INTERESTS_row_cell4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        second_INTERESTS_row_cell4.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        second_INTERESTS_row_cell4.BorderColor = new Color(255, 255, 255);
                        PDTopTable12_half.AddCell(second_INTERESTS_row_cell4);


                        /////////////// table third row 

                        Cell third_INTERESTS_row_cell1 = new Cell();
                        //third_INTERESTS_row_cell1.Add(new Paragraph("Computational", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        third_INTERESTS_row_cell1.Add(new Paragraph(ds2.Tables[0].Rows[2][2].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        third_INTERESTS_row_cell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));
                        third_INTERESTS_row_cell1.Width = 80;
                        third_INTERESTS_row_cell1.BackgroundColor = new Color(219, 219, 219);
                        third_INTERESTS_row_cell1.BorderWidth = 2f;
                        third_INTERESTS_row_cell1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        third_INTERESTS_row_cell1.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        third_INTERESTS_row_cell1.BorderColor = new Color(255, 255, 255);
                        PDTopTable12_half.AddCell(third_INTERESTS_row_cell1);

                        Cell third_INTERESTS_row_cell2 = new Cell();




                        //////////////  rectangle of line 3

                        # region rr33


                        iTextSharp.text.Table INTERESTS_per3 = new iTextSharp.text.Table(5);
                        Cell INTERESTS_3_cell1 = new Cell();
                        INTERESTS_3_cell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_3_cell1.Width = 2;
                        INTERESTS_3_cell1.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_3_cell1.BorderWidth = 4f;
                        INTERESTS_3_cell1.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell1);

                        Cell INTERESTS_3_cell2 = new Cell();
                        INTERESTS_3_cell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_3_cell2.Width = 2;
                        INTERESTS_3_cell2.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_3_cell2.BorderWidth = 4f;
                        INTERESTS_3_cell2.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell2);

                        Cell INTERESTS_3_cell3 = new Cell();
                        INTERESTS_3_cell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_3_cell3.Width = 2;
                        INTERESTS_3_cell3.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_3_cell3.BorderWidth = 4f;
                        INTERESTS_3_cell3.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell3);

                        Cell INTERESTS_3_cell4 = new Cell();
                        INTERESTS_3_cell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_3_cell4.Width = 2;
                        INTERESTS_3_cell4.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_3_cell4.BorderWidth = 4f;
                        INTERESTS_3_cell4.BorderColor = new Color(255, 255, 255);
                        //thirdTable1.AddCell(thirdcell4);

                        Cell INTERESTS_3_cell5 = new Cell();
                        INTERESTS_3_cell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_3_cell5.Width = 2;
                        INTERESTS_3_cell5.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_3_cell5.BorderWidth = 4f;
                        INTERESTS_3_cell5.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell5);



                        switch (ds2.Tables[0].Rows[2][1].ToString())
                        {
                            case "Very Low":

                                INTERESTS_3_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_3_cell2.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_3_cell3.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_3_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_3_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Low":

                                per_line3rect_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_3_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_3_cell3.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_3_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_3_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Moderate":

                                INTERESTS_3_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_3_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_3_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_3_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_3_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "High":

                                INTERESTS_3_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_3_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_3_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_3_cell4.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_3_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Very High":

                                INTERESTS_3_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_3_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_3_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_3_cell4.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_3_cell5.BackgroundColor = new Color(225, 225, 0);

                                break;
                        }

                        INTERESTS_per3.AddCell(INTERESTS_3_cell1);
                        INTERESTS_per3.AddCell(INTERESTS_3_cell2);
                        INTERESTS_per3.AddCell(INTERESTS_3_cell3);
                        INTERESTS_per3.AddCell(INTERESTS_3_cell4);
                        INTERESTS_per3.AddCell(INTERESTS_3_cell5);
                        INTERESTS_per3.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        INTERESTS_per3.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        ////////////////////////////////////////////////////
                        #endregion



                        switch (ds2.Tables[0].Rows[2][1].ToString())
                        {
                            case "Very Low":

                                third_INTERESTS_row_cell2.Add(rverylow);

                                break;
                            case "Low":

                                third_INTERESTS_row_cell2.Add(rlow);

                                break;
                            case "Moderate":

                                third_INTERESTS_row_cell2.Add(rmodrate);

                                break;
                            case "High":

                                third_INTERESTS_row_cell2.Add(rhigh);

                                break;
                            case "Very High":

                                third_INTERESTS_row_cell2.Add(rveryhi);

                                break;
                        }

                        //third_INTERESTS_row_cell2.Add(INTERESTS_per3);
                        third_INTERESTS_row_cell2.Width = 80;
                        third_INTERESTS_row_cell2.BackgroundColor = new Color(219, 219, 219);
                        third_INTERESTS_row_cell2.BorderWidth = 2f;
                        third_INTERESTS_row_cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        third_INTERESTS_row_cell2.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        third_INTERESTS_row_cell2.BorderColor = new Color(255, 255, 255);
                        PDTopTable12_half.AddCell(third_INTERESTS_row_cell2);


                        ffff = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[2][0].ToString());
                        perf = (int)Math.Ceiling(ffff);

                        Cell third_INTERESTS_row_cell3 = new Cell();
                        third_INTERESTS_row_cell3.Add(new Paragraph(perf.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        third_INTERESTS_row_cell3.Width = 80;
                        third_INTERESTS_row_cell3.BackgroundColor = new Color(219, 219, 219);
                        third_INTERESTS_row_cell3.BorderWidth = 2f;
                        third_INTERESTS_row_cell3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        third_INTERESTS_row_cell3.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        third_INTERESTS_row_cell3.BorderColor = new Color(255, 255, 255);
                        PDTopTable12_half.AddCell(third_INTERESTS_row_cell3);

                        Cell third_INTERESTS_row_cell4 = new Cell();
                        third_INTERESTS_row_cell4.Add(new Paragraph(ds2.Tables[0].Rows[2][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        third_INTERESTS_row_cell4.Width = 80;
                        third_INTERESTS_row_cell4.BackgroundColor = new Color(219, 219, 219);
                        third_INTERESTS_row_cell4.BorderWidth = 2f;
                        third_INTERESTS_row_cell4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        third_INTERESTS_row_cell4.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        third_INTERESTS_row_cell4.BorderColor = new Color(255, 255, 255);
                        PDTopTable12_half.AddCell(third_INTERESTS_row_cell4);

                        /////////////// table fourth row 

                        Cell fourth_INTERESTS_row_cell1 = new Cell();
                        //fourth_INTERESTS_row_cell1.Add(new Paragraph("Business", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        fourth_INTERESTS_row_cell1.Add(new Paragraph(ds2.Tables[0].Rows[3].ItemArray[2].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        fourth_INTERESTS_row_cell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));
                        fourth_INTERESTS_row_cell1.Width = 80;
                        fourth_INTERESTS_row_cell1.BorderWidth = 2f;
                        fourth_INTERESTS_row_cell1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fourth_INTERESTS_row_cell1.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fourth_INTERESTS_row_cell1.BorderColor = new Color(255, 255, 255);
                        PDTopTable12_half.AddCell(fourth_INTERESTS_row_cell1);

                        Cell fourth_INTERESTS_row_cell2 = new Cell();


                        //////////////  rectangle of line 4

                        #region rr44

                        iTextSharp.text.Table INTERESTS_per4 = new iTextSharp.text.Table(5);
                        Cell INTERESTS_4_cell1 = new Cell();
                        INTERESTS_4_cell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_4_cell1.Width = 2;
                        INTERESTS_4_cell1.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_4_cell1.BorderWidth = 4f;
                        INTERESTS_4_cell1.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell1);

                        Cell INTERESTS_4_cell2 = new Cell();
                        INTERESTS_4_cell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_4_cell2.Width = 2;
                        INTERESTS_4_cell2.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_4_cell2.BorderWidth = 4f;
                        INTERESTS_4_cell2.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell2);

                        Cell INTERESTS_4_cell3 = new Cell();
                        INTERESTS_4_cell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_4_cell3.Width = 2;
                        INTERESTS_4_cell3.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_4_cell3.BorderWidth = 4f;
                        INTERESTS_4_cell3.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell3);

                        Cell INTERESTS_4_cell4 = new Cell();
                        INTERESTS_4_cell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_4_cell4.Width = 2;
                        INTERESTS_4_cell4.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_4_cell4.BorderWidth = 4f;
                        INTERESTS_4_cell4.BorderColor = new Color(255, 255, 255);
                        //thirdTable1.AddCell(thirdcell4);

                        Cell INTERESTS_4_cell5 = new Cell();
                        INTERESTS_4_cell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 10, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_4_cell5.Width = 2;
                        INTERESTS_4_cell5.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_4_cell5.BorderWidth = 4f;
                        INTERESTS_4_cell5.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell5);



                        switch (ds2.Tables[0].Rows[3][1].ToString())
                        {
                            case "Very Low":

                                INTERESTS_4_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_4_cell2.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_4_cell3.BackgroundColor = new Color(71, 65, 18);
                                per_line4rect_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_4_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Low":

                                INTERESTS_4_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_4_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_4_cell3.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_4_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_4_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Moderate":

                                INTERESTS_4_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_4_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_4_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_4_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_4_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "High":

                                INTERESTS_4_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_4_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_4_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_4_cell4.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_4_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Very High":

                                INTERESTS_4_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_4_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_4_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_4_cell4.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_4_cell5.BackgroundColor = new Color(225, 225, 0); ;

                                break;
                        }

                        INTERESTS_per4.AddCell(INTERESTS_4_cell1);
                        INTERESTS_per4.AddCell(INTERESTS_4_cell2);
                        INTERESTS_per4.AddCell(INTERESTS_4_cell3);
                        INTERESTS_per4.AddCell(INTERESTS_4_cell4);
                        INTERESTS_per4.AddCell(INTERESTS_4_cell5);
                        INTERESTS_per4.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        INTERESTS_per4.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        ////////////////////////////////////////////////////
                        #endregion



                        switch (ds2.Tables[0].Rows[3][1].ToString())
                        {
                            case "Very Low":

                                fourth_INTERESTS_row_cell2.Add(rverylow);

                                break;
                            case "Low":

                                fourth_INTERESTS_row_cell2.Add(rlow);

                                break;
                            case "Moderate":

                                fourth_INTERESTS_row_cell2.Add(rmodrate);

                                break;
                            case "High":

                                fourth_INTERESTS_row_cell2.Add(rhigh);

                                break;
                            case "Very High":

                                fourth_INTERESTS_row_cell2.Add(rveryhi);

                                break;
                        }


                        //fourth_INTERESTS_row_cell2.Add(INTERESTS_per4);

                        fourth_INTERESTS_row_cell2.Width = 80;
                        fourth_INTERESTS_row_cell2.BorderWidth = 2f;
                        fourth_INTERESTS_row_cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fourth_INTERESTS_row_cell2.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        fourth_INTERESTS_row_cell2.BorderColor = new Color(255, 255, 255);
                        PDTopTable12_half.AddCell(fourth_INTERESTS_row_cell2);

                        Cell fourth_INTERESTS_row_cell3 = new Cell();


                        ffff = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[3][0].ToString());
                        perf = (int)Math.Ceiling(ffff);

                        fourth_INTERESTS_row_cell3.Add(new Paragraph(perf.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        fourth_INTERESTS_row_cell3.Width = 80;
                        fourth_INTERESTS_row_cell3.BorderWidth = 2f;
                        fourth_INTERESTS_row_cell3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fourth_INTERESTS_row_cell3.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fourth_INTERESTS_row_cell3.BorderColor = new Color(255, 255, 255);
                        PDTopTable12_half.AddCell(fourth_INTERESTS_row_cell3);

                        Cell fourth_INTERESTS_row_cell4 = new Cell();
                        fourth_INTERESTS_row_cell4.Add(new Paragraph(ds2.Tables[0].Rows[3][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        fourth_INTERESTS_row_cell4.Width = 80;
                        fourth_INTERESTS_row_cell4.BorderWidth = 2f;
                        fourth_INTERESTS_row_cell4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fourth_INTERESTS_row_cell4.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fourth_INTERESTS_row_cell4.BorderColor = new Color(255, 255, 255);
                        PDTopTable12_half.AddCell(fourth_INTERESTS_row_cell4);




                        /////////////// table fifth row 

                        Cell fifth_INTERESTS_row_cell1 = new Cell();
                        //                       fifth_INTERESTS_row_cell1.Add(new Paragraph("Science", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        fifth_INTERESTS_row_cell1.Add(new Paragraph(ds2.Tables[0].Rows[4].ItemArray[2].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        fifth_INTERESTS_row_cell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));
                        fifth_INTERESTS_row_cell1.Width = 80;
                        fifth_INTERESTS_row_cell1.BackgroundColor = new Color(219, 219, 219);
                        fifth_INTERESTS_row_cell1.BorderWidth = 2f;
                        fifth_INTERESTS_row_cell1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fifth_INTERESTS_row_cell1.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fifth_INTERESTS_row_cell1.BorderColor = new Color(255, 255, 255);
                        PDTopTable12_half.AddCell(fifth_INTERESTS_row_cell1);

                        Cell fifth_INTERESTS_row_cell2 = new Cell();


                        //////////////  rectangle of line 5
                        # region rr555



                        iTextSharp.text.Table INTERESTS_per5 = new iTextSharp.text.Table(5);
                        Cell INTERESTS_5_cell1 = new Cell();
                        INTERESTS_5_cell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_5_cell1.Width = 2;
                        INTERESTS_5_cell1.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_5_cell1.BorderWidth = 4f;
                        INTERESTS_5_cell1.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell1);

                        Cell INTERESTS_5_cell2 = new Cell();
                        INTERESTS_5_cell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_5_cell2.Width = 2;
                        INTERESTS_5_cell2.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_5_cell2.BorderWidth = 4f;
                        INTERESTS_5_cell2.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell2);

                        Cell INTERESTS_5_cell3 = new Cell();
                        INTERESTS_5_cell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_5_cell3.Width = 2;
                        INTERESTS_5_cell3.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_5_cell3.BorderWidth = 4f;
                        INTERESTS_5_cell3.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell3);

                        Cell INTERESTS_5_cell4 = new Cell();
                        INTERESTS_5_cell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_5_cell4.Width = 2;
                        INTERESTS_5_cell4.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_5_cell4.BorderWidth = 4f;
                        INTERESTS_5_cell4.BorderColor = new Color(255, 255, 255);
                        //thirdTable1.AddCell(thirdcell4);

                        Cell INTERESTS_5_cell5 = new Cell();
                        INTERESTS_5_cell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_5_cell5.Width = 2;
                        INTERESTS_5_cell5.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_5_cell5.BorderWidth = 4f;
                        INTERESTS_5_cell5.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell5);



                        switch (ds2.Tables[0].Rows[4][1].ToString())
                        {
                            case "Very Low":

                                INTERESTS_5_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_5_cell2.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_5_cell3.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_5_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_5_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Low":

                                INTERESTS_5_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_5_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_5_cell3.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_5_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_5_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Moderate":

                                INTERESTS_5_cell1.BackgroundColor = new Color(225, 225, 0); ;
                                INTERESTS_5_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_5_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_5_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_5_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "High":

                                INTERESTS_5_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_5_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_5_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_5_cell4.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_5_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Very High":

                                INTERESTS_5_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_5_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_5_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_5_cell4.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_5_cell5.BackgroundColor = new Color(225, 225, 0);

                                break;
                        }

                        INTERESTS_per5.AddCell(INTERESTS_5_cell1);
                        INTERESTS_per5.AddCell(INTERESTS_5_cell2);
                        INTERESTS_per5.AddCell(INTERESTS_5_cell3);
                        INTERESTS_per5.AddCell(INTERESTS_5_cell4);
                        INTERESTS_per5.AddCell(INTERESTS_5_cell5);
                        INTERESTS_per5.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        INTERESTS_per5.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        ////////////////////////////////////////////////////

                        # endregion



                        switch (ds2.Tables[0].Rows[4][1].ToString())
                        {
                            case "Very Low":

                                fifth_INTERESTS_row_cell2.Add(rverylow);

                                break;
                            case "Low":

                                fifth_INTERESTS_row_cell2.Add(rlow);

                                break;
                            case "Moderate":

                                fifth_INTERESTS_row_cell2.Add(rmodrate);

                                break;
                            case "High":

                                fifth_INTERESTS_row_cell2.Add(rhigh);

                                break;
                            case "Very High":

                                fifth_INTERESTS_row_cell2.Add(rveryhi);

                                break;
                        }
                        //fifth_INTERESTS_row_cell2.Add(INTERESTS_per5);
                        fifth_INTERESTS_row_cell2.Width = 80;
                        fifth_INTERESTS_row_cell2.BackgroundColor = new Color(219, 219, 219);
                        fifth_INTERESTS_row_cell2.BorderWidth = 2f;
                        fifth_INTERESTS_row_cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fifth_INTERESTS_row_cell2.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        fifth_INTERESTS_row_cell2.BorderColor = new Color(255, 255, 255);
                        PDTopTable12_half.AddCell(fifth_INTERESTS_row_cell2);

                        Cell fifth_INTERESTS_row_cell3 = new Cell();


                        ffff = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[4][0].ToString());
                        perf = (int)Math.Ceiling(ffff);

                        fifth_INTERESTS_row_cell3.Add(new Paragraph(perf.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        fifth_INTERESTS_row_cell3.Width = 80;
                        fifth_INTERESTS_row_cell3.BackgroundColor = new Color(219, 219, 219);
                        fifth_INTERESTS_row_cell3.BorderWidth = 2f;
                        fifth_INTERESTS_row_cell3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fifth_INTERESTS_row_cell3.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fifth_INTERESTS_row_cell3.BorderColor = new Color(255, 255, 255);
                        PDTopTable12_half.AddCell(fifth_INTERESTS_row_cell3);

                        Cell fifth_INTERESTS_row_cell4 = new Cell();
                        fifth_INTERESTS_row_cell4.Add(new Paragraph(ds2.Tables[0].Rows[4][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        fifth_INTERESTS_row_cell4.Width = 80;
                        fifth_INTERESTS_row_cell4.BackgroundColor = new Color(219, 219, 219);
                        fifth_INTERESTS_row_cell4.BorderWidth = 2f;
                        fifth_INTERESTS_row_cell4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fifth_INTERESTS_row_cell4.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fifth_INTERESTS_row_cell4.BorderColor = new Color(255, 255, 255);
                        PDTopTable12_half.AddCell(fifth_INTERESTS_row_cell4);


                        /////////////// table sixth row 

                        Cell sixth_INTERESTS_row_cell1 = new Cell();
                        //sixth_INTERESTS_row_cell1.Add(new Paragraph("Mechanical", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        sixth_INTERESTS_row_cell1.Add(new Paragraph(ds2.Tables[0].Rows[5].ItemArray[2].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));

                        sixth_INTERESTS_row_cell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));
                        sixth_INTERESTS_row_cell1.Width = 80;
                        sixth_INTERESTS_row_cell1.BorderWidth = 2f;
                        sixth_INTERESTS_row_cell1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        sixth_INTERESTS_row_cell1.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        sixth_INTERESTS_row_cell1.BorderColor = new Color(255, 255, 255);
                        PDTopTable12_half.AddCell(sixth_INTERESTS_row_cell1);

                        Cell sixth_INTERESTS_row_cell2 = new Cell();




                        ////////////  rectangle of line 6

                        # region rr666


                        iTextSharp.text.Table INTERESTS_per6 = new iTextSharp.text.Table(5);
                        Cell INTERESTS_6_cell1 = new Cell();
                        INTERESTS_6_cell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_6_cell1.Width = 2;
                        INTERESTS_6_cell1.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_6_cell1.BorderWidth = 4f;
                        INTERESTS_6_cell1.BorderColor = new Color(255, 255, 255);


                        Cell INTERESTS_6_cell2 = new Cell();
                        INTERESTS_6_cell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_6_cell2.Width = 2;
                        INTERESTS_6_cell2.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_6_cell2.BorderWidth = 4f;
                        INTERESTS_6_cell2.BorderColor = new Color(255, 255, 255);


                        Cell INTERESTS_6_cell3 = new Cell();
                        INTERESTS_6_cell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_6_cell3.Width = 2;
                        INTERESTS_6_cell3.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_6_cell3.BorderWidth = 4f;
                        INTERESTS_6_cell3.BorderColor = new Color(255, 255, 255);


                        Cell INTERESTS_6_cell4 = new Cell();
                        INTERESTS_6_cell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_6_cell4.Width = 2;
                        INTERESTS_6_cell4.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_6_cell4.BorderWidth = 4f;
                        INTERESTS_6_cell4.BorderColor = new Color(255, 255, 255);


                        Cell INTERESTS_6_cell5 = new Cell();
                        INTERESTS_6_cell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_6_cell5.Width = 2;
                        INTERESTS_6_cell5.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_6_cell5.BorderWidth = 4f;
                        INTERESTS_6_cell5.BorderColor = new Color(255, 255, 255);




                        switch (ds2.Tables[0].Rows[5][1].ToString())
                        {
                            case "Very Low":

                                INTERESTS_6_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_6_cell2.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_6_cell3.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_6_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_6_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Low":

                                INTERESTS_6_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_6_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_6_cell3.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_6_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_6_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Moderate":

                                INTERESTS_6_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_6_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_6_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_6_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_6_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "High":

                                INTERESTS_6_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_6_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_6_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_6_cell4.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_6_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Very High":

                                INTERESTS_6_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_6_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_6_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_6_cell4.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_6_cell5.BackgroundColor = new Color(225, 225, 0);

                                break;
                        }

                        INTERESTS_per6.AddCell(INTERESTS_6_cell1);
                        INTERESTS_per6.AddCell(INTERESTS_6_cell2);
                        INTERESTS_per6.AddCell(INTERESTS_6_cell3);
                        INTERESTS_per6.AddCell(INTERESTS_6_cell4);
                        INTERESTS_per6.AddCell(INTERESTS_6_cell5);
                        INTERESTS_per6.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        INTERESTS_per6.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        //////////////////////////////////////////////////
                        # endregion

                        switch (ds2.Tables[0].Rows[5][1].ToString())
                        {
                            case "Very Low":

                                sixth_INTERESTS_row_cell2.Add(rverylow);

                                break;
                            case "Low":

                                sixth_INTERESTS_row_cell2.Add(rlow);

                                break;
                            case "Moderate":

                                sixth_INTERESTS_row_cell2.Add(rmodrate);

                                break;
                            case "High":

                                sixth_INTERESTS_row_cell2.Add(rhigh);

                                break;
                            case "Very High":

                                sixth_INTERESTS_row_cell2.Add(rveryhi);

                                break;
                        }

                        // sixth_INTERESTS_row_cell2.Add(INTERESTS_per6);
                        sixth_INTERESTS_row_cell2.Width = 80;
                        sixth_INTERESTS_row_cell2.BorderWidth = 2f;
                        sixth_INTERESTS_row_cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        sixth_INTERESTS_row_cell2.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        sixth_INTERESTS_row_cell2.BorderColor = new Color(255, 255, 255);
                        PDTopTable12_half.AddCell(sixth_INTERESTS_row_cell2);

                        Cell sixth_INTERESTS_row_cell3 = new Cell();


                        ffff = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[5][0].ToString());
                        perf = (int)Math.Ceiling(ffff);

                        sixth_INTERESTS_row_cell3.Add(new Paragraph(perf.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        sixth_INTERESTS_row_cell3.Width = 80;
                        sixth_INTERESTS_row_cell3.BorderWidth = 2f;
                        sixth_INTERESTS_row_cell3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        sixth_INTERESTS_row_cell3.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        sixth_INTERESTS_row_cell3.BorderColor = new Color(255, 255, 255);
                        PDTopTable12_half.AddCell(sixth_INTERESTS_row_cell3);

                        Cell sixth_INTERESTS_row_cell4 = new Cell();
                        sixth_INTERESTS_row_cell4.Add(new Paragraph(ds2.Tables[0].Rows[5][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        sixth_INTERESTS_row_cell4.Width = 80;
                        sixth_INTERESTS_row_cell4.BorderWidth = 2f;
                        sixth_INTERESTS_row_cell4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        sixth_INTERESTS_row_cell4.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        sixth_INTERESTS_row_cell4.BorderColor = new Color(255, 255, 255);
                        PDTopTable12_half.AddCell(sixth_INTERESTS_row_cell4);

                        /////////////// table seventh row 

                        Cell seven_INTERESTS_row_cell1 = new Cell();
                        //seven_INTERESTS_row_cell1.Add(new Paragraph("Persuasive", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        seven_INTERESTS_row_cell1.Add(new Paragraph(ds2.Tables[0].Rows[6].ItemArray[2].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        seven_INTERESTS_row_cell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));
                        seven_INTERESTS_row_cell1.Width = 80;
                        seven_INTERESTS_row_cell1.BackgroundColor = new Color(219, 219, 219);
                        seven_INTERESTS_row_cell1.BorderWidth = 2f;
                        seven_INTERESTS_row_cell1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        seven_INTERESTS_row_cell1.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        seven_INTERESTS_row_cell1.BorderColor = new Color(255, 255, 255);
                        PDTopTable12_half.AddCell(seven_INTERESTS_row_cell1);

                        Cell seven_INTERESTS_row_cell2 = new Cell();
                        //////////////  rectangle of line 7

                        # region rr777
                        iTextSharp.text.Table INTERESTS_per7 = new iTextSharp.text.Table(5);
                        Cell INTERESTS_7_cell1 = new Cell();
                        INTERESTS_7_cell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_7_cell1.Width = 2;
                        INTERESTS_7_cell1.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_7_cell1.BorderWidth = 4f;
                        INTERESTS_7_cell1.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell1);

                        Cell INTERESTS_7_cell2 = new Cell();
                        INTERESTS_7_cell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_7_cell2.Width = 2;
                        INTERESTS_7_cell2.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_7_cell2.BorderWidth = 4f;
                        INTERESTS_7_cell2.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell2);

                        Cell INTERESTS_7_cell3 = new Cell();
                        INTERESTS_7_cell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_7_cell3.Width = 2;
                        INTERESTS_7_cell3.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_7_cell3.BorderWidth = 4f;
                        INTERESTS_7_cell3.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell3);

                        Cell INTERESTS_7_cell4 = new Cell();
                        INTERESTS_7_cell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_7_cell4.Width = 2;
                        INTERESTS_7_cell4.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_7_cell4.BorderWidth = 4f;
                        INTERESTS_7_cell4.BorderColor = new Color(255, 255, 255);
                        //thirdTable1.AddCell(thirdcell4);

                        Cell INTERESTS_7_cell5 = new Cell();
                        INTERESTS_7_cell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_7_cell5.Width = 2;
                        INTERESTS_7_cell5.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_7_cell5.BorderWidth = 4f;
                        INTERESTS_7_cell5.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell5);



                        switch (ds2.Tables[0].Rows[6][1].ToString())
                        {
                            case "Very Low":

                                INTERESTS_7_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_7_cell2.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_7_cell3.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_7_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_7_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Low":

                                INTERESTS_7_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_7_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_7_cell3.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_7_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_7_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Moderate":

                                INTERESTS_7_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_7_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_7_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_7_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_7_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "High":

                                INTERESTS_7_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_7_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_7_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_7_cell4.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_7_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Very High":

                                INTERESTS_7_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_7_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_7_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_7_cell4.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_7_cell5.BackgroundColor = new Color(225, 225, 0);

                                break;
                        }

                        INTERESTS_per7.AddCell(INTERESTS_7_cell1);
                        INTERESTS_per7.AddCell(INTERESTS_7_cell2);
                        INTERESTS_per7.AddCell(INTERESTS_7_cell3);
                        INTERESTS_per7.AddCell(INTERESTS_7_cell4);
                        INTERESTS_per7.AddCell(INTERESTS_7_cell5);
                        INTERESTS_per7.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        INTERESTS_per7.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        ////////////////////////////////////////////////////
                        #endregion


                        switch (ds2.Tables[0].Rows[6][1].ToString())
                        {
                            case "Very Low":

                                seven_INTERESTS_row_cell2.Add(rverylow);

                                break;
                            case "Low":

                                seven_INTERESTS_row_cell2.Add(rlow);

                                break;
                            case "Moderate":

                                seven_INTERESTS_row_cell2.Add(rmodrate);

                                break;
                            case "High":

                                seven_INTERESTS_row_cell2.Add(rhigh);

                                break;
                            case "Very High":

                                seven_INTERESTS_row_cell2.Add(rveryhi);

                                break;
                        }


                        // seven_INTERESTS_row_cell2.Add(INTERESTS_per7);
                        seven_INTERESTS_row_cell2.Width = 80;
                        seven_INTERESTS_row_cell2.BackgroundColor = new Color(219, 219, 219);
                        seven_INTERESTS_row_cell2.BorderWidth = 2f;
                        seven_INTERESTS_row_cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        seven_INTERESTS_row_cell2.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        seven_INTERESTS_row_cell2.BorderColor = new Color(255, 255, 255);
                        PDTopTable12_half.AddCell(seven_INTERESTS_row_cell2);

                        Cell seven_INTERESTS_row_cell3 = new Cell();

                        ffff = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[6][0].ToString());
                        perf = (int)Math.Ceiling(ffff);

                        seven_INTERESTS_row_cell3.Add(new Paragraph(perf.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        seven_INTERESTS_row_cell3.Width = 80;
                        seven_INTERESTS_row_cell3.BackgroundColor = new Color(219, 219, 219);
                        seven_INTERESTS_row_cell3.BorderWidth = 2f;
                        seven_INTERESTS_row_cell3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        seven_INTERESTS_row_cell3.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        seven_INTERESTS_row_cell3.BorderColor = new Color(255, 255, 255);
                        PDTopTable12_half.AddCell(seven_INTERESTS_row_cell3);

                        Cell seven_INTERESTS_row_cell4 = new Cell();
                        seven_INTERESTS_row_cell4.Add(new Paragraph(ds2.Tables[0].Rows[6][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        seven_INTERESTS_row_cell4.Width = 80;
                        seven_INTERESTS_row_cell4.BackgroundColor = new Color(219, 219, 219);
                        seven_INTERESTS_row_cell4.BorderWidth = 2f;
                        seven_INTERESTS_row_cell4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        seven_INTERESTS_row_cell4.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        seven_INTERESTS_row_cell4.BorderColor = new Color(255, 255, 255);
                        PDTopTable12_half.AddCell(seven_INTERESTS_row_cell4);





                        ///////////// table eight row 

                        Cell eight_INTERESTS_row_cell1 = new Cell();
                        //eight_INTERESTS_row_cell1.Add(new Paragraph("Adventurous", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        eight_INTERESTS_row_cell1.Add(new Paragraph(ds2.Tables[0].Rows[7].ItemArray[2].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        eight_INTERESTS_row_cell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));
                        eight_INTERESTS_row_cell1.Width = 80;
                        // eight_INTERESTS_row_cell1.BackgroundColor = new Color(219, 219, 219);
                        eight_INTERESTS_row_cell1.BorderWidth = 2f;
                        eight_INTERESTS_row_cell1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        eight_INTERESTS_row_cell1.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        eight_INTERESTS_row_cell1.BorderColor = new Color(255, 255, 255);
                        PDTopTable12_half.AddCell(eight_INTERESTS_row_cell1);

                        Cell eight_INTERESTS_row_cell2 = new Cell();
                        //////////////  rectangle of line 8
                        #region rr888

                        iTextSharp.text.Table INTERESTS_per8 = new iTextSharp.text.Table(5);
                        Cell INTERESTS_8_cell1 = new Cell();
                        INTERESTS_8_cell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_8_cell1.Width = 2;
                        INTERESTS_8_cell1.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_8_cell1.BorderWidth = 4f;
                        INTERESTS_8_cell1.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell1);

                        Cell INTERESTS_8_cell2 = new Cell();
                        INTERESTS_8_cell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_8_cell2.Width = 2;
                        INTERESTS_8_cell2.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_8_cell2.BorderWidth = 4f;
                        INTERESTS_8_cell2.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell2);

                        Cell INTERESTS_8_cell3 = new Cell();
                        INTERESTS_8_cell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_8_cell3.Width = 2;
                        INTERESTS_8_cell3.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_8_cell3.BorderWidth = 4f;
                        INTERESTS_8_cell3.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell3);

                        Cell INTERESTS_8_cell4 = new Cell();
                        INTERESTS_8_cell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_8_cell4.Width = 2;
                        INTERESTS_8_cell4.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_8_cell4.BorderWidth = 4f;
                        INTERESTS_8_cell4.BorderColor = new Color(255, 255, 255);
                        //thirdTable1.AddCell(thirdcell4);

                        Cell INTERESTS_8_cell5 = new Cell();
                        INTERESTS_8_cell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_8_cell5.Width = 2;
                        INTERESTS_8_cell5.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_8_cell5.BorderWidth = 4f;
                        INTERESTS_8_cell5.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell5);



                        switch (ds2.Tables[0].Rows[7][1].ToString())
                        {
                            case "Very Low":

                                INTERESTS_8_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_8_cell2.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_8_cell3.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_8_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_8_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Low":

                                INTERESTS_8_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_8_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_8_cell3.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_8_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_8_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Moderate":

                                INTERESTS_8_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_8_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_8_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_8_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_8_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "High":

                                INTERESTS_8_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_8_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_8_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_8_cell4.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_8_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Very High":

                                INTERESTS_8_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_8_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_8_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_8_cell4.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_8_cell5.BackgroundColor = new Color(225, 225, 0);

                                break;
                        }

                        INTERESTS_per8.AddCell(INTERESTS_8_cell1);
                        INTERESTS_per8.AddCell(INTERESTS_8_cell2);
                        INTERESTS_per8.AddCell(INTERESTS_8_cell3);
                        INTERESTS_per8.AddCell(INTERESTS_8_cell4);
                        INTERESTS_per8.AddCell(INTERESTS_8_cell5);
                        INTERESTS_per8.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        INTERESTS_per8.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        ////////////////////////////////////////////////////


                        # endregion



                        switch (ds2.Tables[0].Rows[7][1].ToString())
                        {
                            case "Very Low":

                                eight_INTERESTS_row_cell2.Add(rverylow);

                                break;
                            case "Low":

                                eight_INTERESTS_row_cell2.Add(rlow);

                                break;
                            case "Moderate":

                                eight_INTERESTS_row_cell2.Add(rmodrate);

                                break;
                            case "High":

                                eight_INTERESTS_row_cell2.Add(rhigh);

                                break;
                            case "Very High":

                                eight_INTERESTS_row_cell2.Add(rveryhi);

                                break;
                        }


                        // eight_INTERESTS_row_cell2.Add(INTERESTS_per8);
                        eight_INTERESTS_row_cell2.Width = 80;
                        // eight_INTERESTS_row_cell2.BackgroundColor = new Color(219, 219, 219);
                        eight_INTERESTS_row_cell2.BorderWidth = 2f;
                        eight_INTERESTS_row_cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        eight_INTERESTS_row_cell2.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        eight_INTERESTS_row_cell2.BorderColor = new Color(255, 255, 255);
                        PDTopTable12_half.AddCell(eight_INTERESTS_row_cell2);

                        Cell eight_INTERESTS_row_cell3 = new Cell();

                        ffff = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[7][0].ToString());
                        perf = (int)Math.Ceiling(ffff);

                        eight_INTERESTS_row_cell3.Add(new Paragraph(perf.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        eight_INTERESTS_row_cell3.Width = 80;
                        // eight_INTERESTS_row_cell3.BackgroundColor = new Color(219, 219, 219);
                        eight_INTERESTS_row_cell3.BorderWidth = 2f;
                        eight_INTERESTS_row_cell3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        eight_INTERESTS_row_cell3.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        eight_INTERESTS_row_cell3.BorderColor = new Color(255, 255, 255);
                        PDTopTable12_half.AddCell(eight_INTERESTS_row_cell3);

                        Cell eight_INTERESTS_row_cell4 = new Cell();
                        eight_INTERESTS_row_cell4.Add(new Paragraph(ds2.Tables[0].Rows[7][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        eight_INTERESTS_row_cell4.Width = 80;
                        //  eight_INTERESTS_row_cell4.BackgroundColor = new Color(219, 219, 219);
                        eight_INTERESTS_row_cell4.BorderWidth = 2f;
                        eight_INTERESTS_row_cell4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        eight_INTERESTS_row_cell4.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        eight_INTERESTS_row_cell4.BorderColor = new Color(255, 255, 255);
                        PDTopTable12_half.AddCell(eight_INTERESTS_row_cell4);

                        PDTopCell27_haf.Add(PDTopTable12_half);

                        PDTopTable9999.AddCell(PDTopCell27_haf);

                        PDTopTable9999.AddCell(acell33);



                        ////////////////////////////////add INTERESTS table ###################################################################
                        ////////////////////////////////###################////////////////////////////////////////////////////////////////////



                        iTextSharp.text.Table PDTopTable12 = new iTextSharp.text.Table(4);

                        PDTopTable12.Alignment = 0;
                        PDTopTable12.Width = 100;

                        // PDTopTable10.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        //PDTopTable10.DefaultCellBorder = 0;
                        //PDTopTable10.Border = 0;

                        ////////////////////// Add table heading
                        Cell INTERESTS_heading_cell1 = new Cell();
                        //INTERESTS_heading_cell1.Add(new Paragraph("Interest", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        INTERESTS_heading_cell1.Add(new Paragraph("Interest", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        INTERESTS_heading_cell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        INTERESTS_heading_cell1.Width = 80;

                        INTERESTS_heading_cell1.BackgroundColor = new Color(231, 206, 37);
                        INTERESTS_heading_cell1.BorderWidth = 2f;
                        INTERESTS_heading_cell1.BorderColor = new Color(255, 255, 255);
                        INTERESTS_heading_cell1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        INTERESTS_heading_cell1.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopTable12.AddCell(INTERESTS_heading_cell1);

                        Cell INTERESTS_heading_cell2 = new Cell();
                        INTERESTS_heading_cell2.Add(new Paragraph("Rating", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        INTERESTS_heading_cell2.Width = 80;
                        INTERESTS_heading_cell2.BackgroundColor = new Color(231, 206, 37);
                        INTERESTS_heading_cell2.BorderWidth = 2f;
                        INTERESTS_heading_cell2.BorderColor = new Color(255, 255, 255);
                        INTERESTS_heading_cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        INTERESTS_heading_cell2.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopTable12.AddCell(INTERESTS_heading_cell2);

                        Cell INTERESTS_heading_cell3 = new Cell();
                        INTERESTS_heading_cell3.Add(new Paragraph("Percentile", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        INTERESTS_heading_cell3.Width = 80;
                        INTERESTS_heading_cell3.BackgroundColor = new Color(231, 206, 37);
                        INTERESTS_heading_cell3.BorderWidth = 2f;
                        INTERESTS_heading_cell3.BorderColor = new Color(255, 255, 255);
                        INTERESTS_heading_cell3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        INTERESTS_heading_cell3.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopTable12.AddCell(INTERESTS_heading_cell3);

                        Cell INTERESTS_heading_cell4 = new Cell();
                        INTERESTS_heading_cell4.Add(new Paragraph("Rating", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        INTERESTS_heading_cell4.Width = 80;
                        INTERESTS_heading_cell4.BackgroundColor = new Color(231, 206, 37);
                        INTERESTS_heading_cell4.BorderWidth = 2f;
                        INTERESTS_heading_cell4.BorderColor = new Color(255, 255, 255);
                        INTERESTS_heading_cell4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        INTERESTS_heading_cell4.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                        PDTopTable12.AddCell(INTERESTS_heading_cell4);

                        ////////////////////// end table heading


                        /////////////////////// get marks of candidate 


                        //strcmd = "SELECT P_rating,rating FROM tbl_II_cand_factors where c_id = '" + c_id + "'order by factor_no";
                        //DataSet ds2 = clsdb_Xaction.ExecDataSet(strcmd);

                        //////////////////////// end get marks of candidate



                        // ///////// table first row
                        // Cell first_INTERESTS_row_cell1 = new Cell();
                        // first_INTERESTS_row_cell1.Add(new Paragraph("Management", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        // first_INTERESTS_row_cell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));
                        // first_INTERESTS_row_cell1.Width = 80;
                        // first_INTERESTS_row_cell1.BackgroundColor = new Color(219, 219, 219);
                        // first_INTERESTS_row_cell1.BorderWidth = 2f;
                        // first_INTERESTS_row_cell1.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // first_INTERESTS_row_cell1.VerticalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // first_INTERESTS_row_cell1.BorderColor = new Color(255, 255, 255);
                        // PDTopTable12.AddCell(first_INTERESTS_row_cell1);

                        // Cell first_INTERESTS_row_cell2 = new Cell();


                        // //////////////  rectangle of line 1
                        // # region rr111

                        // iTextSharp.text.Table INTERESTS_per1 = new iTextSharp.text.Table(5);
                        // Cell INTERESTS_1_cell1 = new Cell();
                        // INTERESTS_1_cell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_1_cell1.Width = 2;
                        // INTERESTS_1_cell1.BackgroundColor = new Color(225, 225, 0);
                        // INTERESTS_1_cell1.BorderWidth = 4f;
                        // INTERESTS_1_cell1.BorderColor = new Color(255, 255, 255);
                        // // thirdTable1.AddCell(thirdcell1);

                        // Cell INTERESTS_1_cell2 = new Cell();
                        // INTERESTS_1_cell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_1_cell2.Width = 2;
                        // INTERESTS_1_cell2.BackgroundColor = new Color(225, 225, 0);
                        // INTERESTS_1_cell2.BorderWidth = 4f;
                        // INTERESTS_1_cell2.BorderColor = new Color(255, 255, 255);
                        // // thirdTable1.AddCell(thirdcell2);

                        // Cell INTERESTS_1_cell3 = new Cell();
                        // INTERESTS_1_cell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_1_cell3.Width = 2;
                        // INTERESTS_1_cell3.BackgroundColor = new Color(225, 225, 0);
                        // INTERESTS_1_cell3.BorderWidth = 4f;
                        // INTERESTS_1_cell3.BorderColor = new Color(255, 255, 255);
                        // // thirdTable1.AddCell(thirdcell3);

                        // Cell INTERESTS_1_cell4 = new Cell();
                        // INTERESTS_1_cell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_1_cell4.Width = 2;
                        // INTERESTS_1_cell4.BackgroundColor = new Color(225, 225, 0);
                        // INTERESTS_1_cell4.BorderWidth = 4f;
                        // INTERESTS_1_cell4.BorderColor = new Color(255, 255, 255);
                        // //thirdTable1.AddCell(thirdcell4);

                        // Cell INTERESTS_1_cell5 = new Cell();
                        // INTERESTS_1_cell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_1_cell5.Width = 2;
                        // INTERESTS_1_cell5.BackgroundColor = new Color(225, 225, 0);
                        // INTERESTS_1_cell5.BorderWidth = 4f;
                        // INTERESTS_1_cell5.BorderColor = new Color(255, 255, 255);
                        // // thirdTable1.AddCell(thirdcell5);



                        // switch (ds2.Tables[0].Rows[0][1].ToString())
                        // {
                        //     case "Very Low":

                        //         INTERESTS_1_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_1_cell2.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_1_cell3.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_1_cell4.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_1_cell5.BackgroundColor = new Color(71, 65, 18);

                        //         break;
                        //     case "Low":

                        //         INTERESTS_1_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_1_cell2.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_1_cell3.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_1_cell4.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_1_cell5.BackgroundColor = new Color(71, 65, 18);

                        //         break;
                        //     case "Moderate":

                        //         INTERESTS_1_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_1_cell2.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_1_cell3.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_1_cell4.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_1_cell5.BackgroundColor = new Color(71, 65, 18);

                        //         break;
                        //     case "High":

                        //         INTERESTS_1_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_1_cell2.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_1_cell3.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_1_cell4.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_1_cell5.BackgroundColor = new Color(71, 65, 18);

                        //         break;
                        //     case "Very High":

                        //         INTERESTS_1_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_1_cell2.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_1_cell3.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_1_cell4.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_1_cell5.BackgroundColor = new Color(225, 225, 0);

                        //         break;
                        // }

                        // INTERESTS_per1.AddCell(INTERESTS_1_cell1);
                        // INTERESTS_per1.AddCell(INTERESTS_1_cell2);
                        // INTERESTS_per1.AddCell(INTERESTS_1_cell3);
                        // INTERESTS_per1.AddCell(INTERESTS_1_cell4);
                        // INTERESTS_per1.AddCell(INTERESTS_1_cell5);
                        // INTERESTS_per1.DefaultHorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // INTERESTS_per1.DefaultVerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;



                        // ////////////////////////////////////////////////////
                        // # endregion



                        // switch (ds2.Tables[0].Rows[0][1].ToString())
                        // {
                        //     case "Very Low":

                        //         first_INTERESTS_row_cell2.Add(rverylow);

                        //         break;
                        //     case "Low":

                        //         first_INTERESTS_row_cell2.Add(rlow);

                        //         break;
                        //     case "Moderate":

                        //         first_INTERESTS_row_cell2.Add(rmodrate);

                        //         break;
                        //     case "High":

                        //         first_INTERESTS_row_cell2.Add(rhigh);

                        //         break;
                        //     case "Very High":

                        //         first_INTERESTS_row_cell2.Add(rveryhi);

                        //         break;
                        // }


                        //// first_INTERESTS_row_cell2.Add(INTERESTS_per1);
                        // first_INTERESTS_row_cell2.Width = 80;
                        // first_INTERESTS_row_cell2.BackgroundColor = new Color(219, 219, 219);
                        // first_INTERESTS_row_cell2.BorderWidth = 2f;
                        // first_INTERESTS_row_cell2.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // first_INTERESTS_row_cell2.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        // first_INTERESTS_row_cell2.BorderColor = new Color(255, 255, 255);
                        // PDTopTable12.AddCell(first_INTERESTS_row_cell2);

                        // Cell first_INTERESTS_row_cell3 = new Cell();

                        // float ffff = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[0][0].ToString());
                        // int perff = (int)Math.Ceiling(ffff);

                        // first_INTERESTS_row_cell3.Add(new Paragraph(perff.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        // first_INTERESTS_row_cell3.Width = 80;
                        // first_INTERESTS_row_cell3.BackgroundColor = new Color(219, 219, 219);
                        // first_INTERESTS_row_cell3.BorderWidth = 2f;
                        // first_INTERESTS_row_cell3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // first_INTERESTS_row_cell3.VerticalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // first_INTERESTS_row_cell3.BorderColor = new Color(255, 255, 255);
                        // PDTopTable12.AddCell(first_INTERESTS_row_cell3);

                        // Cell first_INTERESTS_row_cell4 = new Cell();
                        // first_INTERESTS_row_cell4.Add(new Paragraph(ds2.Tables[0].Rows[0][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        // first_INTERESTS_row_cell4.Width = 80;
                        // first_INTERESTS_row_cell4.BackgroundColor = new Color(219, 219, 219);
                        // first_INTERESTS_row_cell4.BorderWidth = 2f;
                        // first_INTERESTS_row_cell4.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // first_INTERESTS_row_cell4.VerticalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // first_INTERESTS_row_cell4.BorderColor = new Color(255, 255, 255);
                        // PDTopTable12.AddCell(first_INTERESTS_row_cell4);


                        // /////////// table second row

                        // Cell second_INTERESTS_row_cell1 = new Cell();
                        // second_INTERESTS_row_cell1.Add(new Paragraph("Technical", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        // second_INTERESTS_row_cell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));
                        // second_INTERESTS_row_cell1.Width = 80;
                        // second_INTERESTS_row_cell1.BorderWidth = 2f;
                        // second_INTERESTS_row_cell1.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // second_INTERESTS_row_cell1.VerticalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // second_INTERESTS_row_cell1.BorderColor = new Color(255, 255, 255);
                        // PDTopTable12.AddCell(second_INTERESTS_row_cell1);

                        // Cell second_INTERESTS_row_cell2 = new Cell();


                        // //////////////  rectangle of line 2
                        // # region rr222

                        // iTextSharp.text.Table INTERESTS_per2 = new iTextSharp.text.Table(5);
                        // Cell INTERESTS_2_cell1 = new Cell();
                        // INTERESTS_2_cell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_2_cell1.Width = 2;
                        // INTERESTS_2_cell1.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_2_cell1.BorderWidth = 4f;
                        // INTERESTS_2_cell1.BorderColor = new Color(255, 255, 255);
                        // // thirdTable1.AddCell(thirdcell1);

                        // Cell INTERESTS_2_cell2 = new Cell();
                        // INTERESTS_2_cell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_2_cell2.Width = 2;
                        // INTERESTS_2_cell2.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_2_cell2.BorderWidth = 4f;
                        // INTERESTS_2_cell2.BorderColor = new Color(255, 255, 255);
                        // // thirdTable1.AddCell(thirdcell2);

                        // Cell INTERESTS_2_cell3 = new Cell();
                        // INTERESTS_2_cell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_2_cell3.Width = 2;
                        // INTERESTS_2_cell3.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_2_cell3.BorderWidth = 4f;
                        // INTERESTS_2_cell3.BorderColor = new Color(255, 255, 255);
                        // // thirdTable1.AddCell(thirdcell3);

                        // Cell INTERESTS_2_cell4 = new Cell();
                        // INTERESTS_2_cell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_2_cell4.Width = 2;
                        // INTERESTS_2_cell4.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_2_cell4.BorderWidth = 4f;
                        // INTERESTS_2_cell4.BorderColor = new Color(255, 255, 255);
                        // //thirdTable1.AddCell(thirdcell4);

                        // Cell INTERESTS_2_cell5 = new Cell();
                        // INTERESTS_2_cell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_2_cell5.Width = 2;
                        // INTERESTS_2_cell5.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_2_cell5.BorderWidth = 4f;
                        // INTERESTS_2_cell5.BorderColor = new Color(255, 255, 255);
                        // // thirdTable1.AddCell(thirdcell5);



                        // switch (ds2.Tables[0].Rows[1][1].ToString())
                        // {
                        //     case "Very Low":

                        //         INTERESTS_2_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_2_cell2.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_2_cell3.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_2_cell4.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_2_cell5.BackgroundColor = new Color(71, 65, 18);

                        //         break;
                        //     case "Low":

                        //         INTERESTS_2_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_2_cell2.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_2_cell3.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_2_cell4.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_2_cell5.BackgroundColor = new Color(71, 65, 18);

                        //         break;
                        //     case "Moderate":

                        //         INTERESTS_2_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_2_cell2.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_2_cell3.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_2_cell4.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_2_cell5.BackgroundColor = new Color(71, 65, 18);

                        //         break;
                        //     case "High":

                        //         INTERESTS_2_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_2_cell2.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_2_cell3.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_2_cell4.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_2_cell5.BackgroundColor = new Color(71, 65, 18);

                        //         break;
                        //     case "Very High":

                        //         INTERESTS_2_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_2_cell2.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_2_cell3.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_2_cell4.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_2_cell5.BackgroundColor = new Color(225, 225, 0);

                        //         break;
                        // }

                        // INTERESTS_per2.AddCell(INTERESTS_2_cell1);
                        // INTERESTS_per2.AddCell(INTERESTS_2_cell2);
                        // INTERESTS_per2.AddCell(INTERESTS_2_cell3);
                        // INTERESTS_per2.AddCell(INTERESTS_2_cell4);
                        // INTERESTS_per2.AddCell(INTERESTS_2_cell5);
                        // INTERESTS_per2.DefaultHorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // INTERESTS_per2.DefaultVerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;



                        // ////////////////////////////////////////////////////
                        // # endregion




                        // switch (ds2.Tables[0].Rows[1][1].ToString())
                        // {
                        //     case "Very Low":

                        //         second_INTERESTS_row_cell2.Add(rverylow);

                        //         break;
                        //     case "Low":

                        //         second_INTERESTS_row_cell2.Add(rlow);

                        //         break;
                        //     case "Moderate":

                        //         second_INTERESTS_row_cell2.Add(rmodrate);

                        //         break;
                        //     case "High":

                        //         second_INTERESTS_row_cell2.Add(rhigh);

                        //         break;
                        //     case "Very High":

                        //         second_INTERESTS_row_cell2.Add(rveryhi);

                        //         break;
                        // }

                        //// second_INTERESTS_row_cell2.Add(INTERESTS_per2);
                        // second_INTERESTS_row_cell2.Width = 80;
                        // second_INTERESTS_row_cell2.BorderWidth = 2f;
                        // second_INTERESTS_row_cell2.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // second_INTERESTS_row_cell2.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        // second_INTERESTS_row_cell2.BorderColor = new Color(255, 255, 255);
                        // PDTopTable12.AddCell(second_INTERESTS_row_cell2);



                        // ffff = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[1][0].ToString());
                        // perf = (int)Math.Ceiling(ffff);

                        // Cell second_INTERESTS_row_cell3 = new Cell();
                        // second_INTERESTS_row_cell3.Add(new Paragraph(perf.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        // second_INTERESTS_row_cell3.Width = 80;
                        // second_INTERESTS_row_cell3.BorderWidth = 2f;
                        // second_INTERESTS_row_cell3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // second_INTERESTS_row_cell3.VerticalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // second_INTERESTS_row_cell3.BorderColor = new Color(255, 255, 255);
                        // PDTopTable12.AddCell(second_INTERESTS_row_cell3);

                        // Cell second_INTERESTS_row_cell4 = new Cell();
                        // second_INTERESTS_row_cell4.Add(new Paragraph(ds2.Tables[0].Rows[1][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        // second_INTERESTS_row_cell4.Width = 80;
                        // second_INTERESTS_row_cell4.BorderWidth = 2f;
                        // second_INTERESTS_row_cell4.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // second_INTERESTS_row_cell4.VerticalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // second_INTERESTS_row_cell4.BorderColor = new Color(255, 255, 255);
                        // PDTopTable12.AddCell(second_INTERESTS_row_cell4);


                        // /////////////// table third row 

                        // Cell third_INTERESTS_row_cell1 = new Cell();
                        // third_INTERESTS_row_cell1.Add(new Paragraph("Computational", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        // third_INTERESTS_row_cell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));
                        // third_INTERESTS_row_cell1.Width = 80;
                        // third_INTERESTS_row_cell1.BackgroundColor = new Color(219, 219, 219);
                        // third_INTERESTS_row_cell1.BorderWidth = 2f;
                        // third_INTERESTS_row_cell1.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // third_INTERESTS_row_cell1.VerticalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // third_INTERESTS_row_cell1.BorderColor = new Color(255, 255, 255);
                        // PDTopTable12.AddCell(third_INTERESTS_row_cell1);

                        // Cell third_INTERESTS_row_cell2 = new Cell();




                        // //////////////  rectangle of line 3

                        // # region rr33


                        // iTextSharp.text.Table INTERESTS_per3 = new iTextSharp.text.Table(5);
                        // Cell INTERESTS_3_cell1 = new Cell();
                        // INTERESTS_3_cell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_3_cell1.Width = 2;
                        // INTERESTS_3_cell1.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_3_cell1.BorderWidth = 4f;
                        // INTERESTS_3_cell1.BorderColor = new Color(255, 255, 255);
                        // // thirdTable1.AddCell(thirdcell1);

                        // Cell INTERESTS_3_cell2 = new Cell();
                        // INTERESTS_3_cell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_3_cell2.Width = 2;
                        // INTERESTS_3_cell2.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_3_cell2.BorderWidth = 4f;
                        // INTERESTS_3_cell2.BorderColor = new Color(255, 255, 255);
                        // // thirdTable1.AddCell(thirdcell2);

                        // Cell INTERESTS_3_cell3 = new Cell();
                        // INTERESTS_3_cell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_3_cell3.Width = 2;
                        // INTERESTS_3_cell3.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_3_cell3.BorderWidth = 4f;
                        // INTERESTS_3_cell3.BorderColor = new Color(255, 255, 255);
                        // // thirdTable1.AddCell(thirdcell3);

                        // Cell INTERESTS_3_cell4 = new Cell();
                        // INTERESTS_3_cell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_3_cell4.Width = 2;
                        // INTERESTS_3_cell4.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_3_cell4.BorderWidth = 4f;
                        // INTERESTS_3_cell4.BorderColor = new Color(255, 255, 255);
                        // //thirdTable1.AddCell(thirdcell4);

                        // Cell INTERESTS_3_cell5 = new Cell();
                        // INTERESTS_3_cell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_3_cell5.Width = 2;
                        // INTERESTS_3_cell5.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_3_cell5.BorderWidth = 4f;
                        // INTERESTS_3_cell5.BorderColor = new Color(255, 255, 255);
                        // // thirdTable1.AddCell(thirdcell5);



                        // switch (ds2.Tables[0].Rows[2][1].ToString())
                        // {
                        //     case "Very Low":

                        //         INTERESTS_3_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_3_cell2.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_3_cell3.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_3_cell4.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_3_cell5.BackgroundColor = new Color(71, 65, 18);

                        //         break;
                        //     case "Low":

                        //         per_line3rect_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_3_cell2.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_3_cell3.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_3_cell4.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_3_cell5.BackgroundColor = new Color(71, 65, 18);

                        //         break;
                        //     case "Moderate":

                        //         INTERESTS_3_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_3_cell2.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_3_cell3.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_3_cell4.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_3_cell5.BackgroundColor = new Color(71, 65, 18);

                        //         break;
                        //     case "High":

                        //         INTERESTS_3_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_3_cell2.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_3_cell3.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_3_cell4.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_3_cell5.BackgroundColor = new Color(71, 65, 18);

                        //         break;
                        //     case "Very High":

                        //         INTERESTS_3_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_3_cell2.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_3_cell3.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_3_cell4.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_3_cell5.BackgroundColor = new Color(225, 225, 0);

                        //         break;
                        // }

                        // INTERESTS_per3.AddCell(INTERESTS_3_cell1);
                        // INTERESTS_per3.AddCell(INTERESTS_3_cell2);
                        // INTERESTS_per3.AddCell(INTERESTS_3_cell3);
                        // INTERESTS_per3.AddCell(INTERESTS_3_cell4);
                        // INTERESTS_per3.AddCell(INTERESTS_3_cell5);
                        // INTERESTS_per3.DefaultHorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // INTERESTS_per3.DefaultVerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;



                        // ////////////////////////////////////////////////////
                        // #endregion



                        // switch (ds2.Tables[0].Rows[2][1].ToString())
                        // {
                        //     case "Very Low":

                        //         third_INTERESTS_row_cell2.Add(rverylow);

                        //         break;
                        //     case "Low":

                        //         third_INTERESTS_row_cell2.Add(rlow);

                        //         break;
                        //     case "Moderate":

                        //         third_INTERESTS_row_cell2.Add(rmodrate);

                        //         break;
                        //     case "High":

                        //         third_INTERESTS_row_cell2.Add(rhigh);

                        //         break;
                        //     case "Very High":

                        //         third_INTERESTS_row_cell2.Add(rveryhi);

                        //         break;
                        // }
                        // //third_INTERESTS_row_cell2.Add(INTERESTS_per3);
                        // third_INTERESTS_row_cell2.Width = 80;
                        // third_INTERESTS_row_cell2.BackgroundColor = new Color(219, 219, 219);
                        // third_INTERESTS_row_cell2.BorderWidth = 2f;
                        // third_INTERESTS_row_cell2.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // third_INTERESTS_row_cell2.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        // third_INTERESTS_row_cell2.BorderColor = new Color(255, 255, 255);
                        // PDTopTable12.AddCell(third_INTERESTS_row_cell2);


                        // ffff = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[2][0].ToString());
                        // perf = (int)Math.Ceiling(ffff);

                        // Cell third_INTERESTS_row_cell3 = new Cell();
                        // third_INTERESTS_row_cell3.Add(new Paragraph(perf.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        // third_INTERESTS_row_cell3.Width = 80;
                        // third_INTERESTS_row_cell3.BackgroundColor = new Color(219, 219, 219);
                        // third_INTERESTS_row_cell3.BorderWidth = 2f;
                        // third_INTERESTS_row_cell3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // third_INTERESTS_row_cell3.VerticalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // third_INTERESTS_row_cell3.BorderColor = new Color(255, 255, 255);
                        // PDTopTable12.AddCell(third_INTERESTS_row_cell3);

                        // Cell third_INTERESTS_row_cell4 = new Cell();
                        // third_INTERESTS_row_cell4.Add(new Paragraph(ds2.Tables[0].Rows[2][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        // third_INTERESTS_row_cell4.Width = 80;
                        // third_INTERESTS_row_cell4.BackgroundColor = new Color(219, 219, 219);
                        // third_INTERESTS_row_cell4.BorderWidth = 2f;
                        // third_INTERESTS_row_cell4.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // third_INTERESTS_row_cell4.VerticalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // third_INTERESTS_row_cell4.BorderColor = new Color(255, 255, 255);
                        // PDTopTable12.AddCell(third_INTERESTS_row_cell4);


                        // /////////////// table fourth row 

                        // Cell fourth_INTERESTS_row_cell1 = new Cell();
                        // fourth_INTERESTS_row_cell1.Add(new Paragraph("Business", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        // fourth_INTERESTS_row_cell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));
                        // fourth_INTERESTS_row_cell1.Width = 80;
                        // fourth_INTERESTS_row_cell1.BorderWidth = 2f;
                        // fourth_INTERESTS_row_cell1.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // fourth_INTERESTS_row_cell1.VerticalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // fourth_INTERESTS_row_cell1.BorderColor = new Color(255, 255, 255);
                        // PDTopTable12.AddCell(fourth_INTERESTS_row_cell1);

                        // Cell fourth_INTERESTS_row_cell2 = new Cell();


                        // //////////////  rectangle of line 4

                        // #region rr44

                        // iTextSharp.text.Table INTERESTS_per4 = new iTextSharp.text.Table(5);
                        // Cell INTERESTS_4_cell1 = new Cell();
                        // INTERESTS_4_cell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_4_cell1.Width = 2;
                        // INTERESTS_4_cell1.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_4_cell1.BorderWidth = 4f;
                        // INTERESTS_4_cell1.BorderColor = new Color(255, 255, 255);
                        // // thirdTable1.AddCell(thirdcell1);

                        // Cell INTERESTS_4_cell2 = new Cell();
                        // INTERESTS_4_cell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_4_cell2.Width = 2;
                        // INTERESTS_4_cell2.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_4_cell2.BorderWidth = 4f;
                        // INTERESTS_4_cell2.BorderColor = new Color(255, 255, 255);
                        // // thirdTable1.AddCell(thirdcell2);

                        // Cell INTERESTS_4_cell3 = new Cell();
                        // INTERESTS_4_cell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_4_cell3.Width = 2;
                        // INTERESTS_4_cell3.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_4_cell3.BorderWidth = 4f;
                        // INTERESTS_4_cell3.BorderColor = new Color(255, 255, 255);
                        // // thirdTable1.AddCell(thirdcell3);

                        // Cell INTERESTS_4_cell4 = new Cell();
                        // INTERESTS_4_cell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_4_cell4.Width = 2;
                        // INTERESTS_4_cell4.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_4_cell4.BorderWidth = 4f;
                        // INTERESTS_4_cell4.BorderColor = new Color(255, 255, 255);
                        // //thirdTable1.AddCell(thirdcell4);

                        // Cell INTERESTS_4_cell5 = new Cell();
                        // INTERESTS_4_cell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 10, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_4_cell5.Width = 2;
                        // INTERESTS_4_cell5.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_4_cell5.BorderWidth = 4f;
                        // INTERESTS_4_cell5.BorderColor = new Color(255, 255, 255);
                        // // thirdTable1.AddCell(thirdcell5);



                        // switch (ds2.Tables[0].Rows[3][1].ToString())
                        // {
                        //     case "Very Low":

                        //         INTERESTS_4_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_4_cell2.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_4_cell3.BackgroundColor = new Color(71, 65, 18);
                        //         per_line4rect_cell4.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_4_cell5.BackgroundColor = new Color(71, 65, 18);

                        //         break;
                        //     case "Low":

                        //         INTERESTS_4_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_4_cell2.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_4_cell3.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_4_cell4.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_4_cell5.BackgroundColor = new Color(71, 65, 18);

                        //         break;
                        //     case "Moderate":

                        //         INTERESTS_4_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_4_cell2.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_4_cell3.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_4_cell4.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_4_cell5.BackgroundColor = new Color(71, 65, 18);

                        //         break;
                        //     case "High":

                        //         INTERESTS_4_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_4_cell2.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_4_cell3.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_4_cell4.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_4_cell5.BackgroundColor = new Color(71, 65, 18);

                        //         break;
                        //     case "Very High":

                        //         INTERESTS_4_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_4_cell2.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_4_cell3.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_4_cell4.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_4_cell5.BackgroundColor = new Color(225, 225, 0); ;

                        //         break;
                        // }

                        // INTERESTS_per4.AddCell(INTERESTS_4_cell1);
                        // INTERESTS_per4.AddCell(INTERESTS_4_cell2);
                        // INTERESTS_per4.AddCell(INTERESTS_4_cell3);
                        // INTERESTS_per4.AddCell(INTERESTS_4_cell4);
                        // INTERESTS_per4.AddCell(INTERESTS_4_cell5);
                        // INTERESTS_per4.DefaultHorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // INTERESTS_per4.DefaultVerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;



                        // ////////////////////////////////////////////////////
                        // #endregion



                        // switch (ds2.Tables[0].Rows[3][1].ToString())
                        // {
                        //     case "Very Low":

                        //         fourth_INTERESTS_row_cell2.Add(rverylow);

                        //         break;
                        //     case "Low":

                        //         fourth_INTERESTS_row_cell2.Add(rlow);

                        //         break;
                        //     case "Moderate":

                        //         fourth_INTERESTS_row_cell2.Add(rmodrate);

                        //         break;
                        //     case "High":

                        //         fourth_INTERESTS_row_cell2.Add(rhigh);

                        //         break;
                        //     case "Very High":

                        //         fourth_INTERESTS_row_cell2.Add(rveryhi);

                        //         break;
                        // }


                        // //fourth_INTERESTS_row_cell2.Add(INTERESTS_per4);

                        // fourth_INTERESTS_row_cell2.Width = 80;
                        // fourth_INTERESTS_row_cell2.BorderWidth = 2f;
                        // fourth_INTERESTS_row_cell2.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // fourth_INTERESTS_row_cell2.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        // fourth_INTERESTS_row_cell2.BorderColor = new Color(255, 255, 255);
                        // PDTopTable12.AddCell(fourth_INTERESTS_row_cell2);

                        // Cell fourth_INTERESTS_row_cell3 = new Cell();


                        // ffff = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[3][0].ToString());
                        // perf = (int)Math.Ceiling(ffff);

                        // fourth_INTERESTS_row_cell3.Add(new Paragraph(perf.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        // fourth_INTERESTS_row_cell3.Width = 80;
                        // fourth_INTERESTS_row_cell3.BorderWidth = 2f;
                        // fourth_INTERESTS_row_cell3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // fourth_INTERESTS_row_cell3.VerticalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // fourth_INTERESTS_row_cell3.BorderColor = new Color(255, 255, 255);
                        // PDTopTable12.AddCell(fourth_INTERESTS_row_cell3);

                        // Cell fourth_INTERESTS_row_cell4 = new Cell();
                        // fourth_INTERESTS_row_cell4.Add(new Paragraph(ds2.Tables[0].Rows[3][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        // fourth_INTERESTS_row_cell4.Width = 80;
                        // fourth_INTERESTS_row_cell4.BorderWidth = 2f;
                        // fourth_INTERESTS_row_cell4.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // fourth_INTERESTS_row_cell4.VerticalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // fourth_INTERESTS_row_cell4.BorderColor = new Color(255, 255, 255);
                        // PDTopTable12.AddCell(fourth_INTERESTS_row_cell4);




                        // /////////////// table fifth row 

                        // Cell fifth_INTERESTS_row_cell1 = new Cell();
                        // fifth_INTERESTS_row_cell1.Add(new Paragraph("Science", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        // fifth_INTERESTS_row_cell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));
                        // fifth_INTERESTS_row_cell1.Width = 80;
                        // fifth_INTERESTS_row_cell1.BackgroundColor = new Color(219, 219, 219);
                        // fifth_INTERESTS_row_cell1.BorderWidth = 2f;
                        // fifth_INTERESTS_row_cell1.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // fifth_INTERESTS_row_cell1.VerticalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // fifth_INTERESTS_row_cell1.BorderColor = new Color(255, 255, 255);
                        // PDTopTable12.AddCell(fifth_INTERESTS_row_cell1);

                        // Cell fifth_INTERESTS_row_cell2 = new Cell();


                        // //////////////  rectangle of line 5
                        // # region rr555



                        // iTextSharp.text.Table INTERESTS_per5 = new iTextSharp.text.Table(5);
                        // Cell INTERESTS_5_cell1 = new Cell();
                        // INTERESTS_5_cell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_5_cell1.Width = 2;
                        // INTERESTS_5_cell1.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_5_cell1.BorderWidth = 4f;
                        // INTERESTS_5_cell1.BorderColor = new Color(255, 255, 255);
                        // // thirdTable1.AddCell(thirdcell1);

                        // Cell INTERESTS_5_cell2 = new Cell();
                        // INTERESTS_5_cell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_5_cell2.Width = 2;
                        // INTERESTS_5_cell2.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_5_cell2.BorderWidth = 4f;
                        // INTERESTS_5_cell2.BorderColor = new Color(255, 255, 255);
                        // // thirdTable1.AddCell(thirdcell2);

                        // Cell INTERESTS_5_cell3 = new Cell();
                        // INTERESTS_5_cell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_5_cell3.Width = 2;
                        // INTERESTS_5_cell3.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_5_cell3.BorderWidth = 4f;
                        // INTERESTS_5_cell3.BorderColor = new Color(255, 255, 255);
                        // // thirdTable1.AddCell(thirdcell3);

                        // Cell INTERESTS_5_cell4 = new Cell();
                        // INTERESTS_5_cell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_5_cell4.Width = 2;
                        // INTERESTS_5_cell4.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_5_cell4.BorderWidth = 4f;
                        // INTERESTS_5_cell4.BorderColor = new Color(255, 255, 255);
                        // //thirdTable1.AddCell(thirdcell4);

                        // Cell INTERESTS_5_cell5 = new Cell();
                        // INTERESTS_5_cell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_5_cell5.Width = 2;
                        // INTERESTS_5_cell5.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_5_cell5.BorderWidth = 4f;
                        // INTERESTS_5_cell5.BorderColor = new Color(255, 255, 255);
                        // // thirdTable1.AddCell(thirdcell5);



                        // switch (ds2.Tables[0].Rows[4][1].ToString())
                        // {
                        //     case "Very Low":

                        //         INTERESTS_5_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_5_cell2.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_5_cell3.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_5_cell4.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_5_cell5.BackgroundColor = new Color(71, 65, 18);

                        //         break;
                        //     case "Low":

                        //         INTERESTS_5_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_5_cell2.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_5_cell3.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_5_cell4.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_5_cell5.BackgroundColor = new Color(71, 65, 18);

                        //         break;
                        //     case "Moderate":

                        //         INTERESTS_5_cell1.BackgroundColor = new Color(225, 225, 0); ;
                        //         INTERESTS_5_cell2.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_5_cell3.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_5_cell4.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_5_cell5.BackgroundColor = new Color(71, 65, 18);

                        //         break;
                        //     case "High":

                        //         INTERESTS_5_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_5_cell2.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_5_cell3.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_5_cell4.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_5_cell5.BackgroundColor = new Color(71, 65, 18);

                        //         break;
                        //     case "Very High":

                        //         INTERESTS_5_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_5_cell2.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_5_cell3.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_5_cell4.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_5_cell5.BackgroundColor = new Color(225, 225, 0);

                        //         break;
                        // }

                        // INTERESTS_per5.AddCell(INTERESTS_5_cell1);
                        // INTERESTS_per5.AddCell(INTERESTS_5_cell2);
                        // INTERESTS_per5.AddCell(INTERESTS_5_cell3);
                        // INTERESTS_per5.AddCell(INTERESTS_5_cell4);
                        // INTERESTS_per5.AddCell(INTERESTS_5_cell5);
                        // INTERESTS_per5.DefaultHorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // INTERESTS_per5.DefaultVerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;



                        // ////////////////////////////////////////////////////

                        // # endregion



                        // switch (ds2.Tables[0].Rows[4][1].ToString())
                        // {
                        //     case "Very Low":

                        //         fifth_INTERESTS_row_cell2.Add(rverylow);

                        //         break;
                        //     case "Low":

                        //         fifth_INTERESTS_row_cell2.Add(rlow);

                        //         break;
                        //     case "Moderate":

                        //         fifth_INTERESTS_row_cell2.Add(rmodrate);

                        //         break;
                        //     case "High":

                        //         fifth_INTERESTS_row_cell2.Add(rhigh);

                        //         break;
                        //     case "Very High":

                        //         fifth_INTERESTS_row_cell2.Add(rveryhi);

                        //         break;
                        // }
                        // //fifth_INTERESTS_row_cell2.Add(INTERESTS_per5);
                        // fifth_INTERESTS_row_cell2.Width = 80;
                        // fifth_INTERESTS_row_cell2.BackgroundColor = new Color(219, 219, 219);
                        // fifth_INTERESTS_row_cell2.BorderWidth = 2f;
                        // fifth_INTERESTS_row_cell2.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // fifth_INTERESTS_row_cell2.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        // fifth_INTERESTS_row_cell2.BorderColor = new Color(255, 255, 255);
                        // PDTopTable12.AddCell(fifth_INTERESTS_row_cell2);

                        // Cell fifth_INTERESTS_row_cell3 = new Cell();


                        // ffff = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[4][0].ToString());
                        // perf = (int)Math.Ceiling(ffff);

                        // fifth_INTERESTS_row_cell3.Add(new Paragraph(perf.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        // fifth_INTERESTS_row_cell3.Width = 80;
                        // fifth_INTERESTS_row_cell3.BackgroundColor = new Color(219, 219, 219);
                        // fifth_INTERESTS_row_cell3.BorderWidth = 2f;
                        // fifth_INTERESTS_row_cell3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // fifth_INTERESTS_row_cell3.VerticalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // fifth_INTERESTS_row_cell3.BorderColor = new Color(255, 255, 255);
                        // PDTopTable12.AddCell(fifth_INTERESTS_row_cell3);

                        // Cell fifth_INTERESTS_row_cell4 = new Cell();
                        // fifth_INTERESTS_row_cell4.Add(new Paragraph(ds2.Tables[0].Rows[4][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        // fifth_INTERESTS_row_cell4.Width = 80;
                        // fifth_INTERESTS_row_cell4.BackgroundColor = new Color(219, 219, 219);
                        // fifth_INTERESTS_row_cell4.BorderWidth = 2f;
                        // fifth_INTERESTS_row_cell4.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // fifth_INTERESTS_row_cell4.VerticalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // fifth_INTERESTS_row_cell4.BorderColor = new Color(255, 255, 255);
                        // PDTopTable12.AddCell(fifth_INTERESTS_row_cell4);


                        // /////////////// table sixth row 

                        // Cell sixth_INTERESTS_row_cell1 = new Cell();
                        // sixth_INTERESTS_row_cell1.Add(new Paragraph("Mechanical", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        // sixth_INTERESTS_row_cell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));
                        // sixth_INTERESTS_row_cell1.Width = 80;
                        // sixth_INTERESTS_row_cell1.BorderWidth = 2f;
                        // sixth_INTERESTS_row_cell1.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // sixth_INTERESTS_row_cell1.VerticalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // sixth_INTERESTS_row_cell1.BorderColor = new Color(255, 255, 255);
                        // PDTopTable12.AddCell(sixth_INTERESTS_row_cell1);

                        // Cell sixth_INTERESTS_row_cell2 = new Cell();




                        // ////////////  rectangle of line 6

                        // # region rr666


                        // iTextSharp.text.Table INTERESTS_per6 = new iTextSharp.text.Table(5);
                        // Cell INTERESTS_6_cell1 = new Cell();
                        // INTERESTS_6_cell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_6_cell1.Width = 2;
                        // INTERESTS_6_cell1.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_6_cell1.BorderWidth = 4f;
                        // INTERESTS_6_cell1.BorderColor = new Color(255, 255, 255);


                        // Cell INTERESTS_6_cell2 = new Cell();
                        // INTERESTS_6_cell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_6_cell2.Width = 2;
                        // INTERESTS_6_cell2.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_6_cell2.BorderWidth = 4f;
                        // INTERESTS_6_cell2.BorderColor = new Color(255, 255, 255);


                        // Cell INTERESTS_6_cell3 = new Cell();
                        // INTERESTS_6_cell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_6_cell3.Width = 2;
                        // INTERESTS_6_cell3.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_6_cell3.BorderWidth = 4f;
                        // INTERESTS_6_cell3.BorderColor = new Color(255, 255, 255);


                        // Cell INTERESTS_6_cell4 = new Cell();
                        // INTERESTS_6_cell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_6_cell4.Width = 2;
                        // INTERESTS_6_cell4.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_6_cell4.BorderWidth = 4f;
                        // INTERESTS_6_cell4.BorderColor = new Color(255, 255, 255);


                        // Cell INTERESTS_6_cell5 = new Cell();
                        // INTERESTS_6_cell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_6_cell5.Width = 2;
                        // INTERESTS_6_cell5.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_6_cell5.BorderWidth = 4f;
                        // INTERESTS_6_cell5.BorderColor = new Color(255, 255, 255);




                        // switch (ds2.Tables[0].Rows[5][1].ToString())
                        // {
                        //     case "Very Low":

                        //         INTERESTS_6_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_6_cell2.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_6_cell3.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_6_cell4.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_6_cell5.BackgroundColor = new Color(71, 65, 18);

                        //         break;
                        //     case "Low":

                        //         INTERESTS_6_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_6_cell2.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_6_cell3.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_6_cell4.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_6_cell5.BackgroundColor = new Color(71, 65, 18);

                        //         break;
                        //     case "Moderate":

                        //         INTERESTS_6_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_6_cell2.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_6_cell3.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_6_cell4.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_6_cell5.BackgroundColor = new Color(71, 65, 18);

                        //         break;
                        //     case "High":

                        //         INTERESTS_6_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_6_cell2.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_6_cell3.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_6_cell4.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_6_cell5.BackgroundColor = new Color(71, 65, 18);

                        //         break;
                        //     case "Very High":

                        //         INTERESTS_6_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_6_cell2.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_6_cell3.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_6_cell4.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_6_cell5.BackgroundColor = new Color(225, 225, 0);

                        //         break;
                        // }

                        // INTERESTS_per6.AddCell(INTERESTS_6_cell1);
                        // INTERESTS_per6.AddCell(INTERESTS_6_cell2);
                        // INTERESTS_per6.AddCell(INTERESTS_6_cell3);
                        // INTERESTS_per6.AddCell(INTERESTS_6_cell4);
                        // INTERESTS_per6.AddCell(INTERESTS_6_cell5);
                        // INTERESTS_per6.DefaultHorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // INTERESTS_per6.DefaultVerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;



                        // //////////////////////////////////////////////////
                        // # endregion

                        // switch (ds2.Tables[0].Rows[5][1].ToString())
                        // {
                        //     case "Very Low":

                        //         sixth_INTERESTS_row_cell2.Add(rverylow);

                        //         break;
                        //     case "Low":

                        //         sixth_INTERESTS_row_cell2.Add(rlow);

                        //         break;
                        //     case "Moderate":

                        //         sixth_INTERESTS_row_cell2.Add(rmodrate);

                        //         break;
                        //     case "High":

                        //         sixth_INTERESTS_row_cell2.Add(rhigh);

                        //         break;
                        //     case "Very High":

                        //         sixth_INTERESTS_row_cell2.Add(rveryhi);

                        //         break;
                        // }

                        //// sixth_INTERESTS_row_cell2.Add(INTERESTS_per6);
                        // sixth_INTERESTS_row_cell2.Width = 80;
                        // sixth_INTERESTS_row_cell2.BorderWidth = 2f;
                        // sixth_INTERESTS_row_cell2.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // sixth_INTERESTS_row_cell2.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        // sixth_INTERESTS_row_cell2.BorderColor = new Color(255, 255, 255);
                        // PDTopTable12.AddCell(sixth_INTERESTS_row_cell2);

                        // Cell sixth_INTERESTS_row_cell3 = new Cell();


                        // ffff = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[5][0].ToString());
                        // perf = (int)Math.Ceiling(ffff);

                        // sixth_INTERESTS_row_cell3.Add(new Paragraph(perf.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        // sixth_INTERESTS_row_cell3.Width = 80;
                        // sixth_INTERESTS_row_cell3.BorderWidth = 2f;
                        // sixth_INTERESTS_row_cell3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // sixth_INTERESTS_row_cell3.VerticalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // sixth_INTERESTS_row_cell3.BorderColor = new Color(255, 255, 255);
                        // PDTopTable12.AddCell(sixth_INTERESTS_row_cell3);

                        // Cell sixth_INTERESTS_row_cell4 = new Cell();
                        // sixth_INTERESTS_row_cell4.Add(new Paragraph(ds2.Tables[0].Rows[5][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        // sixth_INTERESTS_row_cell4.Width = 80;
                        // sixth_INTERESTS_row_cell4.BorderWidth = 2f;
                        // sixth_INTERESTS_row_cell4.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // sixth_INTERESTS_row_cell4.VerticalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // sixth_INTERESTS_row_cell4.BorderColor = new Color(255, 255, 255);
                        // PDTopTable12.AddCell(sixth_INTERESTS_row_cell4);

                        // /////////////// table seventh row 

                        // Cell seven_INTERESTS_row_cell1 = new Cell();
                        // seven_INTERESTS_row_cell1.Add(new Paragraph("Persuasive", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        // seven_INTERESTS_row_cell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));
                        // seven_INTERESTS_row_cell1.Width = 80;
                        // seven_INTERESTS_row_cell1.BackgroundColor = new Color(219, 219, 219);
                        // seven_INTERESTS_row_cell1.BorderWidth = 2f;
                        // seven_INTERESTS_row_cell1.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // seven_INTERESTS_row_cell1.VerticalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // seven_INTERESTS_row_cell1.BorderColor = new Color(255, 255, 255);
                        // PDTopTable12.AddCell(seven_INTERESTS_row_cell1);

                        // Cell seven_INTERESTS_row_cell2 = new Cell();
                        // //////////////  rectangle of line 7

                        // # region rr777
                        // iTextSharp.text.Table INTERESTS_per7 = new iTextSharp.text.Table(5);
                        // Cell INTERESTS_7_cell1 = new Cell();
                        // INTERESTS_7_cell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_7_cell1.Width = 2;
                        // INTERESTS_7_cell1.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_7_cell1.BorderWidth = 4f;
                        // INTERESTS_7_cell1.BorderColor = new Color(255, 255, 255);
                        // // thirdTable1.AddCell(thirdcell1);

                        // Cell INTERESTS_7_cell2 = new Cell();
                        // INTERESTS_7_cell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_7_cell2.Width = 2;
                        // INTERESTS_7_cell2.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_7_cell2.BorderWidth = 4f;
                        // INTERESTS_7_cell2.BorderColor = new Color(255, 255, 255);
                        // // thirdTable1.AddCell(thirdcell2);

                        // Cell INTERESTS_7_cell3 = new Cell();
                        // INTERESTS_7_cell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_7_cell3.Width = 2;
                        // INTERESTS_7_cell3.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_7_cell3.BorderWidth = 4f;
                        // INTERESTS_7_cell3.BorderColor = new Color(255, 255, 255);
                        // // thirdTable1.AddCell(thirdcell3);

                        // Cell INTERESTS_7_cell4 = new Cell();
                        // INTERESTS_7_cell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_7_cell4.Width = 2;
                        // INTERESTS_7_cell4.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_7_cell4.BorderWidth = 4f;
                        // INTERESTS_7_cell4.BorderColor = new Color(255, 255, 255);
                        // //thirdTable1.AddCell(thirdcell4);

                        // Cell INTERESTS_7_cell5 = new Cell();
                        // INTERESTS_7_cell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_7_cell5.Width = 2;
                        // INTERESTS_7_cell5.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_7_cell5.BorderWidth = 4f;
                        // INTERESTS_7_cell5.BorderColor = new Color(255, 255, 255);
                        // // thirdTable1.AddCell(thirdcell5);



                        // switch (ds2.Tables[0].Rows[6][1].ToString())
                        // {
                        //     case "Very Low":

                        //         INTERESTS_7_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_7_cell2.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_7_cell3.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_7_cell4.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_7_cell5.BackgroundColor = new Color(71, 65, 18);

                        //         break;
                        //     case "Low":

                        //         INTERESTS_7_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_7_cell2.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_7_cell3.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_7_cell4.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_7_cell5.BackgroundColor = new Color(71, 65, 18);

                        //         break;
                        //     case "Moderate":

                        //         INTERESTS_7_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_7_cell2.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_7_cell3.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_7_cell4.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_7_cell5.BackgroundColor = new Color(71, 65, 18);

                        //         break;
                        //     case "High":

                        //         INTERESTS_7_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_7_cell2.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_7_cell3.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_7_cell4.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_7_cell5.BackgroundColor = new Color(71, 65, 18);

                        //         break;
                        //     case "Very High":

                        //         INTERESTS_7_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_7_cell2.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_7_cell3.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_7_cell4.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_7_cell5.BackgroundColor = new Color(225, 225, 0);

                        //         break;
                        // }

                        // INTERESTS_per7.AddCell(INTERESTS_7_cell1);
                        // INTERESTS_per7.AddCell(INTERESTS_7_cell2);
                        // INTERESTS_per7.AddCell(INTERESTS_7_cell3);
                        // INTERESTS_per7.AddCell(INTERESTS_7_cell4);
                        // INTERESTS_per7.AddCell(INTERESTS_7_cell5);
                        // INTERESTS_per7.DefaultHorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // INTERESTS_per7.DefaultVerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;



                        // ////////////////////////////////////////////////////
                        // #endregion


                        // switch (ds2.Tables[0].Rows[6][1].ToString())
                        // {
                        //     case "Very Low":

                        //         seven_INTERESTS_row_cell2.Add(rverylow);

                        //         break;
                        //     case "Low":

                        //         seven_INTERESTS_row_cell2.Add(rlow);

                        //         break;
                        //     case "Moderate":

                        //         seven_INTERESTS_row_cell2.Add(rmodrate);

                        //         break;
                        //     case "High":

                        //         seven_INTERESTS_row_cell2.Add(rhigh);

                        //         break;
                        //     case "Very High":

                        //         seven_INTERESTS_row_cell2.Add(rveryhi);

                        //         break;
                        // }


                        //// seven_INTERESTS_row_cell2.Add(INTERESTS_per7);
                        // seven_INTERESTS_row_cell2.Width = 80;
                        // seven_INTERESTS_row_cell2.BackgroundColor = new Color(219, 219, 219);
                        // seven_INTERESTS_row_cell2.BorderWidth = 2f;
                        // seven_INTERESTS_row_cell2.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // seven_INTERESTS_row_cell2.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        // seven_INTERESTS_row_cell2.BorderColor = new Color(255, 255, 255);
                        // PDTopTable12.AddCell(seven_INTERESTS_row_cell2);

                        // Cell seven_INTERESTS_row_cell3 = new Cell();

                        // ffff = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[6][0].ToString());
                        // perf = (int)Math.Ceiling(ffff);

                        // seven_INTERESTS_row_cell3.Add(new Paragraph(perf.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        // seven_INTERESTS_row_cell3.Width = 80;
                        // seven_INTERESTS_row_cell3.BackgroundColor = new Color(219, 219, 219);
                        // seven_INTERESTS_row_cell3.BorderWidth = 2f;
                        // seven_INTERESTS_row_cell3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // seven_INTERESTS_row_cell3.VerticalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // seven_INTERESTS_row_cell3.BorderColor = new Color(255, 255, 255);
                        // PDTopTable12.AddCell(seven_INTERESTS_row_cell3);

                        // Cell seven_INTERESTS_row_cell4 = new Cell();
                        // seven_INTERESTS_row_cell4.Add(new Paragraph(ds2.Tables[0].Rows[6][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        // seven_INTERESTS_row_cell4.Width = 80;
                        // seven_INTERESTS_row_cell4.BackgroundColor = new Color(219, 219, 219);
                        // seven_INTERESTS_row_cell4.BorderWidth = 2f;
                        // seven_INTERESTS_row_cell4.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // seven_INTERESTS_row_cell4.VerticalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // seven_INTERESTS_row_cell4.BorderColor = new Color(255, 255, 255);
                        // PDTopTable12.AddCell(seven_INTERESTS_row_cell4);





                        // ///////////// table eight row 

                        // Cell eight_INTERESTS_row_cell1 = new Cell();
                        // eight_INTERESTS_row_cell1.Add(new Paragraph("Adventurous", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        // eight_INTERESTS_row_cell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));
                        // eight_INTERESTS_row_cell1.Width = 80;
                        // // eight_INTERESTS_row_cell1.BackgroundColor = new Color(219, 219, 219);
                        // eight_INTERESTS_row_cell1.BorderWidth = 2f;
                        // eight_INTERESTS_row_cell1.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // eight_INTERESTS_row_cell1.VerticalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // eight_INTERESTS_row_cell1.BorderColor = new Color(255, 255, 255);
                        // PDTopTable12.AddCell(eight_INTERESTS_row_cell1);

                        // Cell eight_INTERESTS_row_cell2 = new Cell();
                        // //////////////  rectangle of line 8
                        // #region rr888

                        // iTextSharp.text.Table INTERESTS_per8 = new iTextSharp.text.Table(5);
                        // Cell INTERESTS_8_cell1 = new Cell();
                        // INTERESTS_8_cell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_8_cell1.Width = 2;
                        // INTERESTS_8_cell1.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_8_cell1.BorderWidth = 4f;
                        // INTERESTS_8_cell1.BorderColor = new Color(255, 255, 255);
                        // // thirdTable1.AddCell(thirdcell1);

                        // Cell INTERESTS_8_cell2 = new Cell();
                        // INTERESTS_8_cell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_8_cell2.Width = 2;
                        // INTERESTS_8_cell2.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_8_cell2.BorderWidth = 4f;
                        // INTERESTS_8_cell2.BorderColor = new Color(255, 255, 255);
                        // // thirdTable1.AddCell(thirdcell2);

                        // Cell INTERESTS_8_cell3 = new Cell();
                        // INTERESTS_8_cell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_8_cell3.Width = 2;
                        // INTERESTS_8_cell3.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_8_cell3.BorderWidth = 4f;
                        // INTERESTS_8_cell3.BorderColor = new Color(255, 255, 255);
                        // // thirdTable1.AddCell(thirdcell3);

                        // Cell INTERESTS_8_cell4 = new Cell();
                        // INTERESTS_8_cell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_8_cell4.Width = 2;
                        // INTERESTS_8_cell4.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_8_cell4.BorderWidth = 4f;
                        // INTERESTS_8_cell4.BorderColor = new Color(255, 255, 255);
                        // //thirdTable1.AddCell(thirdcell4);

                        // Cell INTERESTS_8_cell5 = new Cell();
                        // INTERESTS_8_cell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        // INTERESTS_8_cell5.Width = 2;
                        // INTERESTS_8_cell5.BackgroundColor = new Color(204, 186, 60);
                        // INTERESTS_8_cell5.BorderWidth = 4f;
                        // INTERESTS_8_cell5.BorderColor = new Color(255, 255, 255);
                        // // thirdTable1.AddCell(thirdcell5);



                        // switch (ds2.Tables[0].Rows[7][1].ToString())
                        // {
                        //     case "Very Low":

                        //         INTERESTS_8_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_8_cell2.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_8_cell3.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_8_cell4.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_8_cell5.BackgroundColor = new Color(71, 65, 18);

                        //         break;
                        //     case "Low":

                        //         INTERESTS_8_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_8_cell2.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_8_cell3.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_8_cell4.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_8_cell5.BackgroundColor = new Color(71, 65, 18);

                        //         break;
                        //     case "Moderate":

                        //         INTERESTS_8_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_8_cell2.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_8_cell3.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_8_cell4.BackgroundColor = new Color(71, 65, 18);
                        //         INTERESTS_8_cell5.BackgroundColor = new Color(71, 65, 18);

                        //         break;
                        //     case "High":

                        //         INTERESTS_8_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_8_cell2.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_8_cell3.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_8_cell4.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_8_cell5.BackgroundColor = new Color(71, 65, 18);

                        //         break;
                        //     case "Very High":

                        //         INTERESTS_8_cell1.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_8_cell2.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_8_cell3.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_8_cell4.BackgroundColor = new Color(225, 225, 0);
                        //         INTERESTS_8_cell5.BackgroundColor = new Color(225, 225, 0);

                        //         break;
                        // }

                        // INTERESTS_per8.AddCell(INTERESTS_8_cell1);
                        // INTERESTS_per8.AddCell(INTERESTS_8_cell2);
                        // INTERESTS_per8.AddCell(INTERESTS_8_cell3);
                        // INTERESTS_per8.AddCell(INTERESTS_8_cell4);
                        // INTERESTS_per8.AddCell(INTERESTS_8_cell5);
                        // INTERESTS_per8.DefaultHorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // INTERESTS_per8.DefaultVerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;



                        // ////////////////////////////////////////////////////


                        // # endregion



                        // switch (ds2.Tables[0].Rows[7][1].ToString())
                        // {
                        //     case "Very Low":

                        //         eight_INTERESTS_row_cell2.Add(rverylow);

                        //         break;
                        //     case "Low":

                        //         eight_INTERESTS_row_cell2.Add(rlow);

                        //         break;
                        //     case "Moderate":

                        //         eight_INTERESTS_row_cell2.Add(rmodrate);

                        //         break;
                        //     case "High":

                        //         eight_INTERESTS_row_cell2.Add(rhigh);

                        //         break;
                        //     case "Very High":

                        //         eight_INTERESTS_row_cell2.Add(rveryhi);

                        //         break;
                        // }


                        //// eight_INTERESTS_row_cell2.Add(INTERESTS_per8);
                        // eight_INTERESTS_row_cell2.Width = 80;
                        // // eight_INTERESTS_row_cell2.BackgroundColor = new Color(219, 219, 219);
                        // eight_INTERESTS_row_cell2.BorderWidth = 2f;
                        // eight_INTERESTS_row_cell2.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // eight_INTERESTS_row_cell2.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        // eight_INTERESTS_row_cell2.BorderColor = new Color(255, 255, 255);
                        // PDTopTable12.AddCell(eight_INTERESTS_row_cell2);

                        // Cell eight_INTERESTS_row_cell3 = new Cell();

                        // ffff = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[7][0].ToString());
                        // perf = (int)Math.Ceiling(ffff);

                        // eight_INTERESTS_row_cell3.Add(new Paragraph(perf.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        // eight_INTERESTS_row_cell3.Width = 80;
                        // // eight_INTERESTS_row_cell3.BackgroundColor = new Color(219, 219, 219);
                        // eight_INTERESTS_row_cell3.BorderWidth = 2f;
                        // eight_INTERESTS_row_cell3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // eight_INTERESTS_row_cell3.VerticalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // eight_INTERESTS_row_cell3.BorderColor = new Color(255, 255, 255);
                        // PDTopTable12.AddCell(eight_INTERESTS_row_cell3);

                        // Cell eight_INTERESTS_row_cell4 = new Cell();
                        // eight_INTERESTS_row_cell4.Add(new Paragraph(ds2.Tables[0].Rows[7][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        // eight_INTERESTS_row_cell4.Width = 80;
                        // //  eight_INTERESTS_row_cell4.BackgroundColor = new Color(219, 219, 219);
                        // eight_INTERESTS_row_cell4.BorderWidth = 2f;
                        // eight_INTERESTS_row_cell4.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // eight_INTERESTS_row_cell4.VerticalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        // eight_INTERESTS_row_cell4.BorderColor = new Color(255, 255, 255);
                        // PDTopTable12.AddCell(eight_INTERESTS_row_cell4);



                        ///////////// table nineth row 

                        Cell ninth_INTERESTS_row_cell1 = new Cell();
                        //ninth_INTERESTS_row_cell1.Add(new Paragraph("Outdoor", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        ninth_INTERESTS_row_cell1.Add(new Paragraph(ds2.Tables[0].Rows[8].ItemArray[2].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        ninth_INTERESTS_row_cell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));
                        ninth_INTERESTS_row_cell1.Width = 80;
                        ninth_INTERESTS_row_cell1.BackgroundColor = new Color(219, 219, 219);
                        ninth_INTERESTS_row_cell1.BorderWidth = 2f;
                        ninth_INTERESTS_row_cell1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        ninth_INTERESTS_row_cell1.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        ninth_INTERESTS_row_cell1.BorderColor = new Color(255, 255, 255);
                        PDTopTable12.AddCell(ninth_INTERESTS_row_cell1);

                        Cell ninth_INTERESTS_row_cell2 = new Cell();
                        //////////////  rectangle of line 9
                        # region rr999

                        iTextSharp.text.Table INTERESTS_per9 = new iTextSharp.text.Table(5);
                        Cell INTERESTS_9_cell1 = new Cell();
                        INTERESTS_9_cell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_9_cell1.Width = 2;
                        INTERESTS_9_cell1.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_9_cell1.BorderWidth = 4f;
                        INTERESTS_9_cell1.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell1);

                        Cell INTERESTS_9_cell2 = new Cell();
                        INTERESTS_9_cell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_9_cell2.Width = 2;
                        INTERESTS_9_cell2.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_9_cell2.BorderWidth = 4f;
                        INTERESTS_9_cell2.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell2);

                        Cell INTERESTS_9_cell3 = new Cell();
                        INTERESTS_9_cell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_9_cell3.Width = 2;
                        INTERESTS_9_cell3.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_9_cell3.BorderWidth = 4f;
                        INTERESTS_9_cell3.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell3);

                        Cell INTERESTS_9_cell4 = new Cell();
                        INTERESTS_9_cell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_9_cell4.Width = 2;
                        INTERESTS_9_cell4.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_9_cell4.BorderWidth = 4f;
                        INTERESTS_9_cell4.BorderColor = new Color(255, 255, 255);
                        //thirdTable1.AddCell(thirdcell4);

                        Cell INTERESTS_9_cell5 = new Cell();
                        INTERESTS_9_cell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_9_cell5.Width = 2;
                        INTERESTS_9_cell5.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_9_cell5.BorderWidth = 4f;
                        INTERESTS_9_cell5.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell5);



                        switch (ds2.Tables[0].Rows[8][1].ToString())
                        {
                            case "Very Low":

                                INTERESTS_9_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_9_cell2.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_9_cell3.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_9_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_9_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Low":

                                INTERESTS_9_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_9_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_9_cell3.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_9_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_9_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Moderate":

                                INTERESTS_9_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_9_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_9_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_9_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_9_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "High":

                                INTERESTS_9_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_9_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_9_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_9_cell4.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_9_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Very High":

                                INTERESTS_9_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_9_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_9_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_9_cell4.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_9_cell5.BackgroundColor = new Color(225, 225, 0);

                                break;
                        }

                        INTERESTS_per9.AddCell(INTERESTS_9_cell1);
                        INTERESTS_per9.AddCell(INTERESTS_9_cell2);
                        INTERESTS_per9.AddCell(INTERESTS_9_cell3);
                        INTERESTS_per9.AddCell(INTERESTS_9_cell4);
                        INTERESTS_per9.AddCell(INTERESTS_9_cell5);
                        INTERESTS_per9.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        INTERESTS_per9.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        ////////////////////////////////////////////////////

                        # endregion


                        switch (ds2.Tables[0].Rows[8][1].ToString())
                        {
                            case "Very Low":

                                ninth_INTERESTS_row_cell2.Add(rverylow);

                                break;
                            case "Low":

                                ninth_INTERESTS_row_cell2.Add(rlow);

                                break;
                            case "Moderate":

                                ninth_INTERESTS_row_cell2.Add(rmodrate);

                                break;
                            case "High":

                                ninth_INTERESTS_row_cell2.Add(rhigh);

                                break;
                            case "Very High":

                                ninth_INTERESTS_row_cell2.Add(rveryhi);

                                break;
                        }


                        // ninth_INTERESTS_row_cell2.Add(INTERESTS_per9);
                        ninth_INTERESTS_row_cell2.Width = 80;
                        ninth_INTERESTS_row_cell2.BackgroundColor = new Color(219, 219, 219);
                        ninth_INTERESTS_row_cell2.BorderWidth = 2f;
                        ninth_INTERESTS_row_cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        ninth_INTERESTS_row_cell2.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        ninth_INTERESTS_row_cell2.BorderColor = new Color(255, 255, 255);
                        PDTopTable12.AddCell(ninth_INTERESTS_row_cell2);

                        Cell ninth_INTERESTS_row_cell3 = new Cell();

                        ffff = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[8][0].ToString());
                        perf = (int)Math.Ceiling(ffff);

                        ninth_INTERESTS_row_cell3.Add(new Paragraph(perf.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        ninth_INTERESTS_row_cell3.Width = 80;
                        ninth_INTERESTS_row_cell3.BackgroundColor = new Color(219, 219, 219);
                        ninth_INTERESTS_row_cell3.BorderWidth = 2f;
                        ninth_INTERESTS_row_cell3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        ninth_INTERESTS_row_cell3.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        ninth_INTERESTS_row_cell3.BorderColor = new Color(255, 255, 255);
                        PDTopTable12.AddCell(ninth_INTERESTS_row_cell3);

                        Cell ninth_INTERESTS_row_cell4 = new Cell();
                        ninth_INTERESTS_row_cell4.Add(new Paragraph(ds2.Tables[0].Rows[8][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        ninth_INTERESTS_row_cell4.Width = 80;
                        ninth_INTERESTS_row_cell4.BackgroundColor = new Color(219, 219, 219);
                        ninth_INTERESTS_row_cell4.BorderWidth = 2f;
                        ninth_INTERESTS_row_cell4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        ninth_INTERESTS_row_cell4.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        ninth_INTERESTS_row_cell4.BorderColor = new Color(255, 255, 255);
                        PDTopTable12.AddCell(ninth_INTERESTS_row_cell4);



                        ///////////// table tenth row 

                        Cell tenth_INTERESTS_row_cell1 = new Cell();
                        tenth_INTERESTS_row_cell1.Add(new Paragraph(ds2.Tables[0].Rows[9].ItemArray[2].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        tenth_INTERESTS_row_cell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));
                        tenth_INTERESTS_row_cell1.Width = 80;
                        // tenth_INTERESTS_row_cell1.BackgroundColor = new Color(219, 219, 219);
                        tenth_INTERESTS_row_cell1.BorderWidth = 2f;
                        tenth_INTERESTS_row_cell1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        tenth_INTERESTS_row_cell1.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        tenth_INTERESTS_row_cell1.BorderColor = new Color(255, 255, 255);
                        PDTopTable12.AddCell(tenth_INTERESTS_row_cell1);

                        Cell tenth_INTERESTS_row_cell2 = new Cell();
                        //////////////  rectangle of line 9
                        #region rr110
                        iTextSharp.text.Table INTERESTS_per10 = new iTextSharp.text.Table(5);
                        Cell INTERESTS_10_cell1 = new Cell();
                        INTERESTS_10_cell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_10_cell1.Width = 2;
                        INTERESTS_10_cell1.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_10_cell1.BorderWidth = 4f;
                        INTERESTS_10_cell1.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell1);

                        Cell INTERESTS_10_cell2 = new Cell();
                        INTERESTS_10_cell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_10_cell2.Width = 2;
                        INTERESTS_10_cell2.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_10_cell2.BorderWidth = 4f;
                        INTERESTS_10_cell2.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell2);

                        Cell INTERESTS_10_cell3 = new Cell();
                        INTERESTS_10_cell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_10_cell3.Width = 2;
                        INTERESTS_10_cell3.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_10_cell3.BorderWidth = 4f;
                        INTERESTS_10_cell3.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell3);

                        Cell INTERESTS_10_cell4 = new Cell();
                        INTERESTS_10_cell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_10_cell4.Width = 2;
                        INTERESTS_10_cell4.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_10_cell4.BorderWidth = 4f;
                        INTERESTS_10_cell4.BorderColor = new Color(255, 255, 255);
                        //thirdTable1.AddCell(thirdcell4);

                        Cell INTERESTS_10_cell5 = new Cell();
                        INTERESTS_10_cell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_10_cell5.Width = 2;
                        INTERESTS_10_cell5.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_10_cell5.BorderWidth = 4f;
                        INTERESTS_10_cell5.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell5);



                        switch (ds2.Tables[0].Rows[9][1].ToString())
                        {
                            case "Very Low":

                                INTERESTS_10_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_10_cell2.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_10_cell3.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_10_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_10_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Low":

                                INTERESTS_10_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_10_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_10_cell3.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_10_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_10_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Moderate":

                                INTERESTS_10_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_10_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_10_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_10_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_10_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "High":

                                INTERESTS_10_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_10_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_10_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_10_cell4.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_10_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Very High":

                                INTERESTS_10_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_10_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_10_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_10_cell4.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_10_cell5.BackgroundColor = new Color(225, 225, 0);

                                break;
                        }

                        INTERESTS_per10.AddCell(INTERESTS_10_cell1);
                        INTERESTS_per10.AddCell(INTERESTS_10_cell2);
                        INTERESTS_per10.AddCell(INTERESTS_10_cell3);
                        INTERESTS_per10.AddCell(INTERESTS_10_cell4);
                        INTERESTS_per10.AddCell(INTERESTS_10_cell5);
                        INTERESTS_per10.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        INTERESTS_per10.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        ////////////////////////////////////////////////////
                        #endregion

                        switch (ds2.Tables[0].Rows[9][1].ToString())
                        {
                            case "Very Low":

                                tenth_INTERESTS_row_cell2.Add(rverylow);

                                break;
                            case "Low":

                                tenth_INTERESTS_row_cell2.Add(rlow);

                                break;
                            case "Moderate":

                                tenth_INTERESTS_row_cell2.Add(rmodrate);

                                break;
                            case "High":

                                tenth_INTERESTS_row_cell2.Add(rhigh);

                                break;
                            case "Very High":

                                tenth_INTERESTS_row_cell2.Add(rveryhi);

                                break;
                        }

                        //  tenth_INTERESTS_row_cell2.Add(INTERESTS_per10);
                        tenth_INTERESTS_row_cell2.Width = 80;
                        //  tenth_INTERESTS_row_cell2.BackgroundColor = new Color(219, 219, 219);
                        tenth_INTERESTS_row_cell2.BorderWidth = 2f;
                        tenth_INTERESTS_row_cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        tenth_INTERESTS_row_cell2.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        tenth_INTERESTS_row_cell2.BorderColor = new Color(255, 255, 255);
                        PDTopTable12.AddCell(tenth_INTERESTS_row_cell2);

                        Cell tenth_INTERESTS_row_cell3 = new Cell();

                        ffff = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[9][0].ToString());
                        perf = (int)Math.Ceiling(ffff);

                        tenth_INTERESTS_row_cell3.Add(new Paragraph(perf.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        tenth_INTERESTS_row_cell3.Width = 80;
                        //   tenth_INTERESTS_row_cell3.BackgroundColor = new Color(219, 219, 219);
                        tenth_INTERESTS_row_cell3.BorderWidth = 2f;
                        tenth_INTERESTS_row_cell3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        tenth_INTERESTS_row_cell3.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        tenth_INTERESTS_row_cell3.BorderColor = new Color(255, 255, 255);
                        PDTopTable12.AddCell(tenth_INTERESTS_row_cell3);

                        Cell tenth_INTERESTS_row_cell4 = new Cell();
                        tenth_INTERESTS_row_cell4.Add(new Paragraph(ds2.Tables[0].Rows[9][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        tenth_INTERESTS_row_cell4.Width = 80;
                        //   tenth_INTERESTS_row_cell4.BackgroundColor = new Color(219, 219, 219);
                        tenth_INTERESTS_row_cell4.BorderWidth = 2f;
                        tenth_INTERESTS_row_cell4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        tenth_INTERESTS_row_cell4.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        tenth_INTERESTS_row_cell4.BorderColor = new Color(255, 255, 255);
                        PDTopTable12.AddCell(tenth_INTERESTS_row_cell4);

                        ///////////// table eleventh row 

                        Cell eleventh_INTERESTS_row_cell1 = new Cell();
                        eleventh_INTERESTS_row_cell1.Add(new Paragraph(ds2.Tables[0].Rows[10].ItemArray[2].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        eleventh_INTERESTS_row_cell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));
                        eleventh_INTERESTS_row_cell1.Width = 80;
                        eleventh_INTERESTS_row_cell1.BackgroundColor = new Color(219, 219, 219);
                        eleventh_INTERESTS_row_cell1.BorderWidth = 2f;
                        eleventh_INTERESTS_row_cell1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        eleventh_INTERESTS_row_cell1.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        eleventh_INTERESTS_row_cell1.BorderColor = new Color(255, 255, 255);
                        PDTopTable12.AddCell(eleventh_INTERESTS_row_cell1);

                        Cell eleventh_INTERESTS_row_cell2 = new Cell();
                        //////////////  rectangle of line 11

                        # region rr111
                        iTextSharp.text.Table INTERESTS_per11 = new iTextSharp.text.Table(5);
                        Cell INTERESTS_11_cell1 = new Cell();
                        INTERESTS_11_cell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_11_cell1.Width = 2;
                        INTERESTS_11_cell1.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_11_cell1.BorderWidth = 4f;
                        INTERESTS_11_cell1.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell1);

                        Cell INTERESTS_11_cell2 = new Cell();
                        INTERESTS_11_cell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_11_cell2.Width = 2;
                        INTERESTS_11_cell2.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_11_cell2.BorderWidth = 4f;
                        INTERESTS_11_cell2.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell2);

                        Cell INTERESTS_11_cell3 = new Cell();
                        INTERESTS_11_cell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_11_cell3.Width = 2;
                        INTERESTS_11_cell3.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_11_cell3.BorderWidth = 4f;
                        INTERESTS_11_cell3.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell3);

                        Cell INTERESTS_11_cell4 = new Cell();
                        INTERESTS_11_cell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_11_cell4.Width = 2;
                        INTERESTS_11_cell4.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_11_cell4.BorderWidth = 4f;
                        INTERESTS_11_cell4.BorderColor = new Color(255, 255, 255);
                        //thirdTable1.AddCell(thirdcell4);

                        Cell INTERESTS_11_cell5 = new Cell();
                        INTERESTS_11_cell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_11_cell5.Width = 2;
                        INTERESTS_11_cell5.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_11_cell5.BorderWidth = 4f;
                        INTERESTS_11_cell5.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell5);


                        switch (ds2.Tables[0].Rows[10][1].ToString())
                        {
                            case "Very Low":

                                INTERESTS_11_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_11_cell2.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_11_cell3.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_11_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_11_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Low":

                                INTERESTS_11_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_11_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_11_cell3.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_11_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_11_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Moderate":

                                INTERESTS_11_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_11_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_11_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_11_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_11_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "High":

                                INTERESTS_11_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_11_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_11_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_11_cell4.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_11_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Very High":

                                INTERESTS_11_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_11_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_11_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_11_cell4.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_11_cell5.BackgroundColor = new Color(225, 225, 0);

                                break;
                        }

                        INTERESTS_per11.AddCell(INTERESTS_11_cell1);
                        INTERESTS_per11.AddCell(INTERESTS_11_cell2);
                        INTERESTS_per11.AddCell(INTERESTS_11_cell3);
                        INTERESTS_per11.AddCell(INTERESTS_11_cell4);
                        INTERESTS_per11.AddCell(INTERESTS_11_cell5);
                        INTERESTS_per11.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        INTERESTS_per11.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        ////////////////////////////////////////////////////
                        #endregion

                        switch (ds2.Tables[0].Rows[10][1].ToString())
                        {
                            case "Very Low":

                                eleventh_INTERESTS_row_cell2.Add(rverylow);

                                break;
                            case "Low":

                                eleventh_INTERESTS_row_cell2.Add(rlow);

                                break;
                            case "Moderate":

                                eleventh_INTERESTS_row_cell2.Add(rmodrate);

                                break;
                            case "High":

                                eleventh_INTERESTS_row_cell2.Add(rhigh);

                                break;
                            case "Very High":

                                eleventh_INTERESTS_row_cell2.Add(rveryhi);

                                break;
                        }

                        //eleventh_INTERESTS_row_cell2.Add(INTERESTS_per11);
                        eleventh_INTERESTS_row_cell2.Width = 80;
                        eleventh_INTERESTS_row_cell2.BackgroundColor = new Color(219, 219, 219);
                        eleventh_INTERESTS_row_cell2.BorderWidth = 2f;
                        eleventh_INTERESTS_row_cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        eleventh_INTERESTS_row_cell2.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        eleventh_INTERESTS_row_cell2.BorderColor = new Color(255, 255, 255);
                        PDTopTable12.AddCell(eleventh_INTERESTS_row_cell2);

                        Cell eleventh_INTERESTS_row_cell3 = new Cell();

                        ffff = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[10][0].ToString());
                        perf = (int)Math.Ceiling(ffff);

                        eleventh_INTERESTS_row_cell3.Add(new Paragraph(perf.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        eleventh_INTERESTS_row_cell3.Width = 80;
                        eleventh_INTERESTS_row_cell3.BackgroundColor = new Color(219, 219, 219);
                        eleventh_INTERESTS_row_cell3.BorderWidth = 2f;
                        eleventh_INTERESTS_row_cell3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        eleventh_INTERESTS_row_cell3.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        eleventh_INTERESTS_row_cell3.BorderColor = new Color(255, 255, 255);
                        PDTopTable12.AddCell(eleventh_INTERESTS_row_cell3);

                        Cell eleventh_INTERESTS_row_cell4 = new Cell();
                        eleventh_INTERESTS_row_cell4.Add(new Paragraph(ds2.Tables[0].Rows[10][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        eleventh_INTERESTS_row_cell4.Width = 80;
                        eleventh_INTERESTS_row_cell4.BackgroundColor = new Color(219, 219, 219);
                        eleventh_INTERESTS_row_cell4.BorderWidth = 2f;
                        eleventh_INTERESTS_row_cell4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        eleventh_INTERESTS_row_cell4.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        eleventh_INTERESTS_row_cell4.BorderColor = new Color(255, 255, 255);
                        PDTopTable12.AddCell(eleventh_INTERESTS_row_cell4);

                        ///////////// table 12 row 

                        Cell twelw_INTERESTS_row_cell1 = new Cell();
                        twelw_INTERESTS_row_cell1.Add(new Paragraph(ds2.Tables[0].Rows[11].ItemArray[2].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        twelw_INTERESTS_row_cell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));
                        twelw_INTERESTS_row_cell1.Width = 80;
                        // twelw_INTERESTS_row_cell1.BackgroundColor = new Color(219, 219, 219);
                        twelw_INTERESTS_row_cell1.BorderWidth = 2f;
                        twelw_INTERESTS_row_cell1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        twelw_INTERESTS_row_cell1.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        twelw_INTERESTS_row_cell1.BorderColor = new Color(255, 255, 255);
                        PDTopTable12.AddCell(twelw_INTERESTS_row_cell1);

                        Cell twelw_INTERESTS_row_cell2 = new Cell();
                        //////////////  rectangle of line 12
                        # region rr112
                        iTextSharp.text.Table INTERESTS_per12 = new iTextSharp.text.Table(5);
                        Cell INTERESTS_12_cell1 = new Cell();
                        INTERESTS_12_cell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_12_cell1.Width = 2;
                        INTERESTS_12_cell1.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_12_cell1.BorderWidth = 4f;
                        INTERESTS_12_cell1.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell1);

                        Cell INTERESTS_12_cell2 = new Cell();
                        INTERESTS_12_cell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_12_cell2.Width = 2;
                        INTERESTS_12_cell2.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_12_cell2.BorderWidth = 4f;
                        INTERESTS_12_cell2.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell2);

                        Cell INTERESTS_12_cell3 = new Cell();
                        INTERESTS_12_cell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_12_cell3.Width = 2;
                        INTERESTS_12_cell3.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_12_cell3.BorderWidth = 4f;
                        INTERESTS_12_cell3.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell3);

                        Cell INTERESTS_12_cell4 = new Cell();
                        INTERESTS_12_cell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_12_cell4.Width = 2;
                        INTERESTS_12_cell4.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_12_cell4.BorderWidth = 4f;
                        INTERESTS_12_cell4.BorderColor = new Color(255, 255, 255);
                        //thirdTable1.AddCell(thirdcell4);

                        Cell INTERESTS_12_cell5 = new Cell();
                        INTERESTS_12_cell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_12_cell5.Width = 2;
                        INTERESTS_12_cell5.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_12_cell5.BorderWidth = 4f;
                        INTERESTS_12_cell5.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell5);



                        switch (ds2.Tables[0].Rows[11][1].ToString())
                        {
                            case "Very Low":

                                INTERESTS_12_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_12_cell2.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_12_cell3.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_12_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_12_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Low":

                                INTERESTS_12_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_12_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_12_cell3.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_12_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_12_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Moderate":

                                INTERESTS_12_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_12_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_12_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_12_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_12_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "High":

                                INTERESTS_12_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_12_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_12_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_12_cell4.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_12_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Very High":

                                INTERESTS_12_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_12_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_12_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_12_cell4.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_12_cell5.BackgroundColor = new Color(225, 225, 0);

                                break;
                        }

                        INTERESTS_per12.AddCell(INTERESTS_12_cell1);
                        INTERESTS_per12.AddCell(INTERESTS_12_cell2);
                        INTERESTS_per12.AddCell(INTERESTS_12_cell3);
                        INTERESTS_per12.AddCell(INTERESTS_12_cell4);
                        INTERESTS_per12.AddCell(INTERESTS_12_cell5);
                        INTERESTS_per12.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        INTERESTS_per12.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;


                        ////////////////////////////////////////////////////

                        #endregion

                        switch (ds2.Tables[0].Rows[11][1].ToString())
                        {
                            case "Very Low":

                                twelw_INTERESTS_row_cell2.Add(rverylow);

                                break;
                            case "Low":

                                twelw_INTERESTS_row_cell2.Add(rlow);

                                break;
                            case "Moderate":

                                twelw_INTERESTS_row_cell2.Add(rmodrate);

                                break;
                            case "High":

                                twelw_INTERESTS_row_cell2.Add(rhigh);

                                break;
                            case "Very High":

                                twelw_INTERESTS_row_cell2.Add(rveryhi);

                                break;
                        }

                        // twelw_INTERESTS_row_cell2.Add(INTERESTS_per12);
                        twelw_INTERESTS_row_cell2.Width = 80;
                        //  twelw_INTERESTS_row_cell2.BackgroundColor = new Color(219, 219, 219);
                        twelw_INTERESTS_row_cell2.BorderWidth = 2f;
                        twelw_INTERESTS_row_cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        twelw_INTERESTS_row_cell2.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        twelw_INTERESTS_row_cell2.BorderColor = new Color(255, 255, 255);
                        PDTopTable12.AddCell(twelw_INTERESTS_row_cell2);

                        Cell twelw_INTERESTS_row_cell3 = new Cell();

                        ffff = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[11][0].ToString());
                        perf = (int)Math.Ceiling(ffff);

                        twelw_INTERESTS_row_cell3.Add(new Paragraph(perf.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        twelw_INTERESTS_row_cell3.Width = 80;
                        //  twelw_INTERESTS_row_cell3.BackgroundColor = new Color(219, 219, 219);
                        twelw_INTERESTS_row_cell3.BorderWidth = 2f;
                        twelw_INTERESTS_row_cell3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        twelw_INTERESTS_row_cell3.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        twelw_INTERESTS_row_cell3.BorderColor = new Color(255, 255, 255);
                        PDTopTable12.AddCell(twelw_INTERESTS_row_cell3);

                        Cell twelw_INTERESTS_row_cell4 = new Cell();
                        twelw_INTERESTS_row_cell4.Add(new Paragraph(ds2.Tables[0].Rows[11][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        twelw_INTERESTS_row_cell4.Width = 80;
                        //  twelw_INTERESTS_row_cell4.BackgroundColor = new Color(219, 219, 219);
                        twelw_INTERESTS_row_cell4.BorderWidth = 2f;
                        twelw_INTERESTS_row_cell4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        twelw_INTERESTS_row_cell4.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        twelw_INTERESTS_row_cell4.BorderColor = new Color(255, 255, 255);
                        PDTopTable12.AddCell(twelw_INTERESTS_row_cell4);


                        ///////////// table 13 row 

                        Cell thirteen_INTERESTS_row_cell1 = new Cell();
                        thirteen_INTERESTS_row_cell1.Add(new Paragraph(ds2.Tables[0].Rows[12].ItemArray[2].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        thirteen_INTERESTS_row_cell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));
                        thirteen_INTERESTS_row_cell1.Width = 80;
                        thirteen_INTERESTS_row_cell1.BackgroundColor = new Color(219, 219, 219);
                        thirteen_INTERESTS_row_cell1.BorderWidth = 2f;
                        thirteen_INTERESTS_row_cell1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        thirteen_INTERESTS_row_cell1.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        thirteen_INTERESTS_row_cell1.BorderColor = new Color(255, 255, 255);
                        PDTopTable12.AddCell(thirteen_INTERESTS_row_cell1);

                        Cell thirteen_INTERESTS_row_cell2 = new Cell();
                        //////////////  rectangle of line 13
                        # region rr113
                        iTextSharp.text.Table INTERESTS_per13 = new iTextSharp.text.Table(5);
                        Cell INTERESTS_13_cell1 = new Cell();
                        INTERESTS_13_cell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_13_cell1.Width = 2;
                        INTERESTS_13_cell1.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_13_cell1.BorderWidth = 4f;
                        INTERESTS_13_cell1.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell1);

                        Cell INTERESTS_13_cell2 = new Cell();
                        INTERESTS_13_cell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_13_cell2.Width = 2;
                        INTERESTS_13_cell2.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_13_cell2.BorderWidth = 4f;
                        INTERESTS_13_cell2.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell2);

                        Cell INTERESTS_13_cell3 = new Cell();
                        INTERESTS_13_cell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 10, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_13_cell3.Width = 2;
                        INTERESTS_13_cell3.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_13_cell3.BorderWidth = 4f;
                        INTERESTS_13_cell3.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell3);

                        Cell INTERESTS_13_cell4 = new Cell();
                        INTERESTS_13_cell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_13_cell4.Width = 2;
                        INTERESTS_13_cell4.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_13_cell4.BorderWidth = 4f;
                        INTERESTS_13_cell4.BorderColor = new Color(255, 255, 255);
                        //thirdTable1.AddCell(thirdcell4);

                        Cell INTERESTS_13_cell5 = new Cell();
                        INTERESTS_13_cell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_13_cell5.Width = 2;
                        INTERESTS_13_cell5.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_13_cell5.BorderWidth = 4f;
                        INTERESTS_13_cell5.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell5);

                        switch (ds2.Tables[0].Rows[12][1].ToString())
                        {
                            case "Very Low":

                                INTERESTS_13_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_13_cell2.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_13_cell3.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_13_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_13_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Low":

                                INTERESTS_13_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_13_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_13_cell3.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_13_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_13_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Moderate":

                                INTERESTS_13_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_13_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_13_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_13_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_13_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "High":

                                INTERESTS_13_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_13_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_13_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_13_cell4.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_13_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Very High":

                                INTERESTS_13_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_13_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_13_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_13_cell4.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_13_cell5.BackgroundColor = new Color(225, 225, 0);

                                break;
                        }

                        INTERESTS_per13.AddCell(INTERESTS_13_cell1);
                        INTERESTS_per13.AddCell(INTERESTS_13_cell2);
                        INTERESTS_per13.AddCell(INTERESTS_13_cell3);
                        INTERESTS_per13.AddCell(INTERESTS_13_cell4);
                        INTERESTS_per13.AddCell(INTERESTS_13_cell5);
                        INTERESTS_per13.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        INTERESTS_per13.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;

                        ////////////////////////////////////////////////////
                        # endregion


                        switch (ds2.Tables[0].Rows[12][1].ToString())
                        {
                            case "Very Low":

                                thirteen_INTERESTS_row_cell2.Add(rverylow);

                                break;
                            case "Low":

                                thirteen_INTERESTS_row_cell2.Add(rlow);

                                break;
                            case "Moderate":

                                thirteen_INTERESTS_row_cell2.Add(rmodrate);

                                break;
                            case "High":

                                thirteen_INTERESTS_row_cell2.Add(rhigh);

                                break;
                            case "Very High":

                                thirteen_INTERESTS_row_cell2.Add(rveryhi);

                                break;
                        }

                        // thirteen_INTERESTS_row_cell2.Add(INTERESTS_per13);
                        thirteen_INTERESTS_row_cell2.Width = 80;
                        thirteen_INTERESTS_row_cell2.BackgroundColor = new Color(219, 219, 219);
                        thirteen_INTERESTS_row_cell2.BorderWidth = 2f;
                        thirteen_INTERESTS_row_cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        thirteen_INTERESTS_row_cell2.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        thirteen_INTERESTS_row_cell2.BorderColor = new Color(255, 255, 255);
                        PDTopTable12.AddCell(thirteen_INTERESTS_row_cell2);

                        Cell thirteen_INTERESTS_row_cell3 = new Cell();

                        ffff = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[12][0].ToString());
                        perf = (int)Math.Ceiling(ffff);

                        thirteen_INTERESTS_row_cell3.Add(new Paragraph(perf.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        thirteen_INTERESTS_row_cell3.Width = 80;
                        thirteen_INTERESTS_row_cell3.BackgroundColor = new Color(219, 219, 219);
                        thirteen_INTERESTS_row_cell3.BorderWidth = 2f;
                        thirteen_INTERESTS_row_cell3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        thirteen_INTERESTS_row_cell3.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        thirteen_INTERESTS_row_cell3.BorderColor = new Color(255, 255, 255);
                        PDTopTable12.AddCell(thirteen_INTERESTS_row_cell3);

                        Cell thirteen_INTERESTS_row_cell4 = new Cell();
                        thirteen_INTERESTS_row_cell4.Add(new Paragraph(ds2.Tables[0].Rows[12][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        thirteen_INTERESTS_row_cell4.Width = 80;
                        thirteen_INTERESTS_row_cell4.BackgroundColor = new Color(219, 219, 219);
                        thirteen_INTERESTS_row_cell4.BorderWidth = 2f;
                        thirteen_INTERESTS_row_cell4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        thirteen_INTERESTS_row_cell4.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        thirteen_INTERESTS_row_cell4.BorderColor = new Color(255, 255, 255);
                        PDTopTable12.AddCell(thirteen_INTERESTS_row_cell4);


                        ///////////// table 14 row 

                        Cell fourteen_INTERESTS_row_cell1 = new Cell();
                        fourteen_INTERESTS_row_cell1.Add(new Paragraph(ds2.Tables[0].Rows[13].ItemArray[2].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        fourteen_INTERESTS_row_cell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));
                        fourteen_INTERESTS_row_cell1.Width = 80;
                        //  fourteen_INTERESTS_row_cell1.BackgroundColor = new Color(219, 219, 219);
                        fourteen_INTERESTS_row_cell1.BorderWidth = 2f;
                        fourteen_INTERESTS_row_cell1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fourteen_INTERESTS_row_cell1.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fourteen_INTERESTS_row_cell1.BorderColor = new Color(255, 255, 255);
                        PDTopTable12.AddCell(fourteen_INTERESTS_row_cell1);

                        Cell fourteen_INTERESTS_row_cell2 = new Cell();
                        //////////////  rectangle of line 14
                        #region rr114
                        iTextSharp.text.Table INTERESTS_per14 = new iTextSharp.text.Table(5);
                        Cell INTERESTS_14_cell1 = new Cell();
                        INTERESTS_14_cell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_14_cell1.Width = 2;
                        INTERESTS_14_cell1.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_14_cell1.BorderWidth = 4f;
                        INTERESTS_14_cell1.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell1);

                        Cell INTERESTS_14_cell2 = new Cell();
                        INTERESTS_14_cell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_14_cell2.Width = 2;
                        INTERESTS_14_cell2.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_14_cell2.BorderWidth = 4f;
                        INTERESTS_14_cell2.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell2);

                        Cell INTERESTS_14_cell3 = new Cell();
                        INTERESTS_14_cell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_14_cell3.Width = 2;
                        INTERESTS_14_cell3.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_14_cell3.BorderWidth = 4f;
                        INTERESTS_14_cell3.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell3);

                        Cell INTERESTS_14_cell4 = new Cell();
                        INTERESTS_14_cell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_14_cell4.Width = 2;
                        INTERESTS_14_cell4.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_14_cell4.BorderWidth = 4f;
                        INTERESTS_14_cell4.BorderColor = new Color(255, 255, 255);
                        //thirdTable1.AddCell(thirdcell4);

                        Cell INTERESTS_14_cell5 = new Cell();
                        INTERESTS_14_cell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_14_cell5.Width = 2;
                        INTERESTS_14_cell5.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_14_cell5.BorderWidth = 4f;
                        INTERESTS_14_cell5.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell5);



                        switch (ds2.Tables[0].Rows[13][1].ToString())
                        {
                            case "Very Low":

                                INTERESTS_14_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_14_cell2.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_14_cell3.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_14_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_14_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Low":

                                INTERESTS_14_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_14_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_14_cell3.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_14_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_14_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Moderate":

                                INTERESTS_14_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_14_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_14_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_14_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_14_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "High":

                                INTERESTS_14_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_14_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_14_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_14_cell4.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_14_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Very High":

                                INTERESTS_14_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_14_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_14_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_14_cell4.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_14_cell5.BackgroundColor = new Color(225, 225, 0);

                                break;
                        }

                        INTERESTS_per14.AddCell(INTERESTS_14_cell1);
                        INTERESTS_per14.AddCell(INTERESTS_14_cell2);
                        INTERESTS_per14.AddCell(INTERESTS_14_cell3);
                        INTERESTS_per14.AddCell(INTERESTS_14_cell4);
                        INTERESTS_per14.AddCell(INTERESTS_14_cell5);
                        INTERESTS_per14.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        INTERESTS_per14.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        ////////////////////////////////////////////////////
                        # endregion

                        switch (ds2.Tables[0].Rows[13][1].ToString())
                        {
                            case "Very Low":

                                fourteen_INTERESTS_row_cell2.Add(rverylow);

                                break;
                            case "Low":

                                fourteen_INTERESTS_row_cell2.Add(rlow);

                                break;
                            case "Moderate":

                                fourteen_INTERESTS_row_cell2.Add(rmodrate);

                                break;
                            case "High":

                                fourteen_INTERESTS_row_cell2.Add(rhigh);

                                break;
                            case "Very High":

                                fourteen_INTERESTS_row_cell2.Add(rveryhi);

                                break;
                        }

                        // fourteen_INTERESTS_row_cell2.Add(INTERESTS_per14);
                        fourteen_INTERESTS_row_cell2.Width = 80;
                        // fourteen_INTERESTS_row_cell2.BackgroundColor = new Color(219, 219, 219);
                        fourteen_INTERESTS_row_cell2.BorderWidth = 2f;
                        fourteen_INTERESTS_row_cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fourteen_INTERESTS_row_cell2.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        fourteen_INTERESTS_row_cell2.BorderColor = new Color(255, 255, 255);
                        PDTopTable12.AddCell(fourteen_INTERESTS_row_cell2);

                        Cell fourteen_INTERESTS_row_cell3 = new Cell();

                        ffff = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[13][0].ToString());
                        perf = (int)Math.Ceiling(ffff);

                        fourteen_INTERESTS_row_cell3.Add(new Paragraph(perf.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        fourteen_INTERESTS_row_cell3.Width = 80;
                        //fourteen_INTERESTS_row_cell3.BackgroundColor = new Color(219, 219, 219);
                        fourteen_INTERESTS_row_cell3.BorderWidth = 2f;
                        fourteen_INTERESTS_row_cell3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fourteen_INTERESTS_row_cell3.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fourteen_INTERESTS_row_cell3.BorderColor = new Color(255, 255, 255);
                        PDTopTable12.AddCell(fourteen_INTERESTS_row_cell3);

                        Cell fourteen_INTERESTS_row_cell4 = new Cell();
                        fourteen_INTERESTS_row_cell4.Add(new Paragraph(ds2.Tables[0].Rows[13][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        fourteen_INTERESTS_row_cell4.Width = 80;
                        //  fourteen_INTERESTS_row_cell4.BackgroundColor = new Color(219, 219, 219);
                        fourteen_INTERESTS_row_cell4.BorderWidth = 2f;
                        fourteen_INTERESTS_row_cell4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fourteen_INTERESTS_row_cell4.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fourteen_INTERESTS_row_cell4.BorderColor = new Color(255, 255, 255);
                        PDTopTable12.AddCell(fourteen_INTERESTS_row_cell4);


                        ///////////// table 15 row 

                        Cell fifteen_INTERESTS_row_cell1 = new Cell();
                        fifteen_INTERESTS_row_cell1.Add(new Paragraph(ds2.Tables[0].Rows[14].ItemArray[2].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        fifteen_INTERESTS_row_cell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));
                        fifteen_INTERESTS_row_cell1.Width = 80;
                        fifteen_INTERESTS_row_cell1.BackgroundColor = new Color(219, 219, 219);
                        fifteen_INTERESTS_row_cell1.BorderWidth = 2f;
                        fifteen_INTERESTS_row_cell1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fifteen_INTERESTS_row_cell1.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fifteen_INTERESTS_row_cell1.BorderColor = new Color(255, 255, 255);
                        PDTopTable12.AddCell(fifteen_INTERESTS_row_cell1);

                        Cell fifteen_INTERESTS_row_cell2 = new Cell();
                        //////////////  rectangle of line 15
                        # region rr115
                        iTextSharp.text.Table INTERESTS_per15 = new iTextSharp.text.Table(5);
                        Cell INTERESTS_15_cell1 = new Cell();
                        INTERESTS_15_cell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_15_cell1.Width = 2;
                        INTERESTS_15_cell1.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_15_cell1.BorderWidth = 4f;
                        INTERESTS_15_cell1.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell1);

                        Cell INTERESTS_15_cell2 = new Cell();
                        INTERESTS_15_cell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_15_cell2.Width = 2;
                        INTERESTS_15_cell2.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_15_cell2.BorderWidth = 4f;
                        INTERESTS_15_cell2.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell2);

                        Cell INTERESTS_15_cell3 = new Cell();
                        INTERESTS_15_cell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_15_cell3.Width = 2;
                        INTERESTS_15_cell3.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_15_cell3.BorderWidth = 4f;
                        INTERESTS_15_cell3.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell3);

                        Cell INTERESTS_15_cell4 = new Cell();
                        INTERESTS_15_cell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_15_cell4.Width = 2;
                        INTERESTS_15_cell4.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_15_cell4.BorderWidth = 4f;
                        INTERESTS_15_cell4.BorderColor = new Color(255, 255, 255);
                        //thirdTable1.AddCell(thirdcell4);

                        Cell INTERESTS_15_cell5 = new Cell();
                        INTERESTS_15_cell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_15_cell5.Width = 2;
                        INTERESTS_15_cell5.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_15_cell5.BorderWidth = 4f;
                        INTERESTS_15_cell5.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell5);



                        switch (ds2.Tables[0].Rows[14][1].ToString())
                        {
                            case "Very Low":

                                INTERESTS_15_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_15_cell2.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_15_cell3.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_15_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_15_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Low":

                                INTERESTS_15_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_15_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_15_cell3.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_15_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_15_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Moderate":

                                INTERESTS_15_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_15_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_15_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_15_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_15_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "High":

                                INTERESTS_15_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_15_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_15_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_15_cell4.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_15_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Very High":

                                INTERESTS_15_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_15_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_15_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_15_cell4.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_15_cell5.BackgroundColor = new Color(225, 225, 0);

                                break;
                        }

                        INTERESTS_per15.AddCell(INTERESTS_15_cell1);
                        INTERESTS_per15.AddCell(INTERESTS_15_cell2);
                        INTERESTS_per15.AddCell(INTERESTS_15_cell3);
                        INTERESTS_per15.AddCell(INTERESTS_15_cell4);
                        INTERESTS_per15.AddCell(INTERESTS_15_cell5);
                        INTERESTS_per15.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        INTERESTS_per15.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        ////////////////////////////////////////////////////
                        # endregion

                        switch (ds2.Tables[0].Rows[14][1].ToString())
                        {
                            case "Very Low":

                                fifteen_INTERESTS_row_cell2.Add(rverylow);

                                break;
                            case "Low":

                                fifteen_INTERESTS_row_cell2.Add(rlow);

                                break;
                            case "Moderate":

                                fifteen_INTERESTS_row_cell2.Add(rmodrate);

                                break;
                            case "High":

                                fifteen_INTERESTS_row_cell2.Add(rhigh);

                                break;
                            case "Very High":

                                fifteen_INTERESTS_row_cell2.Add(rveryhi);

                                break;
                        }

                        //  fifteen_INTERESTS_row_cell2.Add(INTERESTS_per15);
                        fifteen_INTERESTS_row_cell2.Width = 80;
                        fifteen_INTERESTS_row_cell2.BackgroundColor = new Color(219, 219, 219);
                        fifteen_INTERESTS_row_cell2.BorderWidth = 2f;
                        fifteen_INTERESTS_row_cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fifteen_INTERESTS_row_cell2.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        fifteen_INTERESTS_row_cell2.BorderColor = new Color(255, 255, 255);
                        PDTopTable12.AddCell(fifteen_INTERESTS_row_cell2);

                        Cell fifteen_INTERESTS_row_cell3 = new Cell();

                        ffff = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[14][0].ToString());
                        perf = (int)Math.Ceiling(ffff);

                        fifteen_INTERESTS_row_cell3.Add(new Paragraph(perf.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        fifteen_INTERESTS_row_cell3.Width = 80;
                        fifteen_INTERESTS_row_cell3.BackgroundColor = new Color(219, 219, 219);
                        fifteen_INTERESTS_row_cell3.BorderWidth = 2f;
                        fifteen_INTERESTS_row_cell3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fifteen_INTERESTS_row_cell3.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fifteen_INTERESTS_row_cell3.BorderColor = new Color(255, 255, 255);
                        PDTopTable12.AddCell(fifteen_INTERESTS_row_cell3);

                        Cell fifteen_INTERESTS_row_cell4 = new Cell();
                        fifteen_INTERESTS_row_cell4.Add(new Paragraph(ds2.Tables[0].Rows[14][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        fifteen_INTERESTS_row_cell4.Width = 80;
                        fifteen_INTERESTS_row_cell4.BackgroundColor = new Color(219, 219, 219);
                        fifteen_INTERESTS_row_cell4.BorderWidth = 2f;
                        fifteen_INTERESTS_row_cell4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fifteen_INTERESTS_row_cell4.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        fifteen_INTERESTS_row_cell4.BorderColor = new Color(255, 255, 255);
                        PDTopTable12.AddCell(fifteen_INTERESTS_row_cell4);


                        ///////////// table 16 row 

                        Cell sixteen_INTERESTS_row_cell1 = new Cell();
                        sixteen_INTERESTS_row_cell1.Add(new Paragraph(ds2.Tables[0].Rows[15].ItemArray[2].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        sixteen_INTERESTS_row_cell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER)));
                        sixteen_INTERESTS_row_cell1.Width = 80;
                        // sixteen_INTERESTS_row_cell1.BackgroundColor = new Color(219, 219, 219);
                        sixteen_INTERESTS_row_cell1.BorderWidth = 2f;
                        sixteen_INTERESTS_row_cell1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        sixteen_INTERESTS_row_cell1.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        sixteen_INTERESTS_row_cell1.BorderColor = new Color(255, 255, 255);
                        PDTopTable12.AddCell(sixteen_INTERESTS_row_cell1);

                        Cell sixteen_INTERESTS_row_cell2 = new Cell();
                        //////////////  rectangle of line 16
                        # region rr 116
                        iTextSharp.text.Table INTERESTS_per16 = new iTextSharp.text.Table(5);
                        Cell INTERESTS_16_cell1 = new Cell();
                        INTERESTS_16_cell1.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_16_cell1.Width = 2;
                        INTERESTS_16_cell1.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_16_cell1.BorderWidth = 4f;
                        INTERESTS_16_cell1.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell1);

                        Cell INTERESTS_16_cell2 = new Cell();
                        INTERESTS_16_cell2.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_16_cell2.Width = 2;
                        INTERESTS_16_cell2.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_16_cell2.BorderWidth = 4f;
                        INTERESTS_16_cell2.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell2);

                        Cell INTERESTS_16_cell3 = new Cell();
                        INTERESTS_16_cell3.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_16_cell3.Width = 2;
                        INTERESTS_16_cell3.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_16_cell3.BorderWidth = 4f;
                        INTERESTS_16_cell3.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell3);

                        Cell INTERESTS_16_cell4 = new Cell();
                        INTERESTS_16_cell4.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_16_cell4.Width = 2;
                        INTERESTS_16_cell4.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_16_cell4.BorderWidth = 4f;
                        INTERESTS_16_cell4.BorderColor = new Color(255, 255, 255);
                        //thirdTable1.AddCell(thirdcell4);

                        Cell INTERESTS_16_cell5 = new Cell();
                        INTERESTS_16_cell5.Add(new Paragraph(".", FontFactory.GetFont(FontFactory.HELVETICA, 8, iTextSharp.text.Font.COURIER, Color.WHITE)));
                        INTERESTS_16_cell5.Width = 2;
                        INTERESTS_16_cell5.BackgroundColor = new Color(204, 186, 60);
                        INTERESTS_16_cell5.BorderWidth = 4f;
                        INTERESTS_16_cell5.BorderColor = new Color(255, 255, 255);
                        // thirdTable1.AddCell(thirdcell5);



                        switch (ds2.Tables[0].Rows[15][1].ToString())
                        {
                            case "Very Low":

                                INTERESTS_16_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_16_cell2.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_16_cell3.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_16_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_16_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Low":

                                INTERESTS_16_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_16_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_16_cell3.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_16_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_16_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Moderate":

                                INTERESTS_16_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_16_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_16_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_16_cell4.BackgroundColor = new Color(71, 65, 18);
                                INTERESTS_16_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "High":

                                INTERESTS_16_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_16_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_16_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_16_cell4.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_16_cell5.BackgroundColor = new Color(71, 65, 18);

                                break;
                            case "Very High":

                                INTERESTS_16_cell1.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_16_cell2.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_16_cell3.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_16_cell4.BackgroundColor = new Color(225, 225, 0);
                                INTERESTS_16_cell5.BackgroundColor = new Color(225, 225, 0);

                                break;
                        }

                        INTERESTS_per16.AddCell(INTERESTS_16_cell1);
                        INTERESTS_per16.AddCell(INTERESTS_16_cell2);
                        INTERESTS_per16.AddCell(INTERESTS_16_cell3);
                        INTERESTS_per16.AddCell(INTERESTS_16_cell4);
                        INTERESTS_per16.AddCell(INTERESTS_16_cell5);
                        INTERESTS_per16.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        INTERESTS_per16.DefaultVerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        ////////////////////////////////////////////////////

                        # endregion


                        switch (ds2.Tables[0].Rows[15][1].ToString())
                        {
                            case "Very Low":

                                sixteen_INTERESTS_row_cell2.Add(rverylow);

                                break;
                            case "Low":

                                sixteen_INTERESTS_row_cell2.Add(rlow);

                                break;
                            case "Moderate":

                                sixteen_INTERESTS_row_cell2.Add(rmodrate);

                                break;
                            case "High":

                                sixteen_INTERESTS_row_cell2.Add(rhigh);

                                break;
                            case "Very High":

                                sixteen_INTERESTS_row_cell2.Add(rveryhi);

                                break;
                        }

                        //sixteen_INTERESTS_row_cell2.Add(INTERESTS_per16);
                        sixteen_INTERESTS_row_cell2.Width = 80;
                        //sixteen_INTERESTS_row_cell2.BackgroundColor = new Color(219, 219, 219);
                        sixteen_INTERESTS_row_cell2.BorderWidth = 2f;
                        sixteen_INTERESTS_row_cell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        sixteen_INTERESTS_row_cell2.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        sixteen_INTERESTS_row_cell2.BorderColor = new Color(255, 255, 255);
                        PDTopTable12.AddCell(sixteen_INTERESTS_row_cell2);

                        Cell sixteen_INTERESTS_row_cell3 = new Cell();

                        ffff = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[15][0].ToString());
                        perf = (int)Math.Ceiling(ffff);

                        sixteen_INTERESTS_row_cell3.Add(new Paragraph(perf.ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        sixteen_INTERESTS_row_cell3.Width = 80;
                        // sixteen_INTERESTS_row_cell3.BackgroundColor = new Color(219, 219, 219);
                        sixteen_INTERESTS_row_cell3.BorderWidth = 2f;
                        sixteen_INTERESTS_row_cell3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        sixteen_INTERESTS_row_cell3.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        sixteen_INTERESTS_row_cell3.BorderColor = new Color(255, 255, 255);
                        PDTopTable12.AddCell(sixteen_INTERESTS_row_cell3);

                        Cell sixteen_INTERESTS_row_cell4 = new Cell();
                        sixteen_INTERESTS_row_cell4.Add(new Paragraph(ds2.Tables[0].Rows[15][1].ToString(), FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER)));
                        sixteen_INTERESTS_row_cell4.Width = 80;
                        // sixteen_INTERESTS_row_cell4.BackgroundColor = new Color(219, 219, 219);
                        sixteen_INTERESTS_row_cell4.BorderWidth = 2f;
                        sixteen_INTERESTS_row_cell4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        sixteen_INTERESTS_row_cell4.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        sixteen_INTERESTS_row_cell4.BorderColor = new Color(255, 255, 255);
                        PDTopTable12.AddCell(sixteen_INTERESTS_row_cell4);


                        Cell PDTopCell28 = new Cell();
                        PDTopCell28.Add(PDTopTable12);
                        PDTopCell28.Width = 80;
                        PDTopTable9999.AddCell(PDTopCell28);
                        /////////////////////////////////////////////////////////////// end INTERESTS table

                        doc.Add(PDTopTable9999);


                        ///////////////////////////// page eight
                        doc.Add(dheyalogo);
                        doc.NewPage();
                        iTextSharp.text.Image eightpagefirst = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/persnalityheading.png"));
                        eightpagefirst.SetAbsolutePosition(0, 600);
                        //jpeg.ScalePercent(35f);
                        eightpagefirst.ScaleToFit(600f, 550f);
                        // jpeg.SpacingAfter = -50f;
                        doc.Add(eightpagefirst);



                        iTextSharp.text.Table maintable = new iTextSharp.text.Table(1);
                        maintable.Width = 100;
                        maintable.DefaultCellBorder = 0;
                        maintable.Border = 0;
                        Cell maintable0 = new Cell();
                        maintable0.Add(new Paragraph("\n\n\n\n\n\n\n\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));

                        Cell maintable1 = new Cell();
                        Cell maintable2 = new Cell();
                        Cell maintable3 = new Cell();
                        Cell maintable4 = new Cell();
                        Cell maintable5 = new Cell();
                        Cell maintable6 = new Cell();
                        Cell maintable7 = new Cell();
                        Cell maintable8 = new Cell();
                        Cell maintable9 = new Cell();
                        Cell maintable10 = new Cell();
                        Cell maintable11 = new Cell();
                        Cell maintable12 = new Cell();
                        Cell maintable13 = new Cell();
                        Cell maintable14 = new Cell();
                        Cell maintable15 = new Cell();
                        Cell maintable16 = new Cell();



                        iTextSharp.text.Table PDTopTableee7 = new iTextSharp.text.Table(3);
                        PDTopTableee7.Alignment = 0;
                        PDTopTableee7.Width = 100;

                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        PDTopTableee7.DefaultCellBorder = 0;
                        PDTopTableee7.Border = 0;

                        //iTextSharp.text.Image endblock = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/endblock.png"));
                        //endblock.ScaleToFit(10f, 10f);
                        //Chunk imageChunk1 = new Chunk(endblock, 0, 0);
                        //Phrase limage = new Phrase();
                        //limage.Add(imageChunk1);


                        Cell PDTopCelll119 = new Cell();
                        PDTopCelll119.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        Paragraph pp16 = new Paragraph();

                        Phrase nManagement = new Phrase(18, new Chunk("\nManagement ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase nManagement1 = new Phrase(18, new Chunk("Management is the process of getting activities completed and effectively with and through other people. It is the managerial process of forming a strategic vision, setting objectives, crafting a strategy and then implementing and executing the plan. You have an interest in management field means you like the activities where some management is needed. Like-managing deals, organize such events or activities, make plans for the growth, manage people & their activities etc.", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp16.Add(nManagement);
                        pp16.Add(nManagement1);
                        pp16.Add(limage);
                        PDTopCelll119.Add(pp16);
                        PDTopTableee7.AddCell(PDTopCelll119);
                        PDTopTableee7.AddCell(acell33);
                        PDTopTableee7.SetWidths(width);


                        Cell thirdcellbb = new Cell();
                        thirdcellbb.BackgroundColor = new Color(45, 136, 204);
                        thirdcellbb.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;



                        switch (dsss2.Tables[0].Rows[0][1].ToString())
                        {
                            case "Very Low":

                                thirdcellbb.Add(verylow);

                                break;
                            case "Low":

                                thirdcellbb.Add(low);
                                break;
                            case "Moderate":

                                thirdcellbb.Add(middal);
                                break;
                            case "High":

                                thirdcellbb.Add(high);
                                break;
                            case "Very High":

                                thirdcellbb.Add(veryhigh);
                                break;
                        }
                        thirdcellbb.Add(new Paragraph(dsss2.Tables[0].Rows[0][1].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        thirdcellbb.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        thirdcellbb.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopTableee7.AddCell(thirdcellbb);
                        // doc.Add(PDTopTableee7);
                        maintable1.Add(PDTopTableee7);


                        iTextSharp.text.Table PDTopTableee7b = new iTextSharp.text.Table(3);
                        PDTopTableee7b.Alignment = 0;
                        PDTopTableee7b.Width = 100;
                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        PDTopTableee7b.DefaultCellBorder = 0;
                        PDTopTableee7b.Border = 0;

                        PDTopTableee7b.SetWidths(width);
                        Cell PDTopCelll120 = new Cell();
                        PDTopCelll120.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;

                        Paragraph pp17 = new Paragraph();
                        Phrase Technical = new Phrase(18, new Chunk("\nTechnical ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase Technical1 = new Phrase(18, new Chunk("Technology is associated with innovation, the transformation of ideas into new and useful products or processes. It is a specific set of skills or specific process to be followed in performing an activity in which some technology is involved. You have an interest in technical field means you like the activities where some technology is involved. Like: assembling parts, working with computers, testing equipments and its operations, operate electronic instruments etc.", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp17.Add(Technical);
                        pp17.Add(Technical1);
                        pp17.Add(limage);
                        PDTopCelll120.Add(pp17);
                        PDTopTableee7b.AddCell(PDTopCelll120);

                        PDTopTableee7b.AddCell(acell33);

                        Cell thirdcll1bb = new Cell();
                        thirdcll1bb.BackgroundColor = new Color(45, 136, 204);
                        thirdcll1bb.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;

                        switch (dsss2.Tables[0].Rows[1][1].ToString())
                        {
                            case "Very Low":

                                thirdcll1bb.Add(verylow);
                                break;
                            case "Low":

                                thirdcll1bb.Add(low);
                                break;
                            case "Moderate":

                                thirdcll1bb.Add(middal);
                                break;
                            case "High":

                                thirdcll1bb.Add(high);
                                break;
                            case "Very High":

                                thirdcll1bb.Add(veryhigh);
                                break;
                        }
                        thirdcll1bb.Add(new Paragraph(dsss2.Tables[0].Rows[1][1].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        thirdcll1bb.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopTableee7b.AddCell(thirdcll1bb);
                        // doc.Add(PDTopTableee7b);
                        maintable2.Add(PDTopTableee7b);

                        iTextSharp.text.Table PDTopTableee8b = new iTextSharp.text.Table(3);
                        PDTopTableee8b.Alignment = 0;
                        PDTopTableee8b.Width = 100;
                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        PDTopTableee8b.DefaultCellBorder = 0;
                        PDTopTableee8b.Border = 0;
                        PDTopTableee8b.SetWidths(width);

                        Cell PDTopCelll121 = new Cell();
                        PDTopCelll121.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        Paragraph pp18 = new Paragraph();
                        Phrase Computational = new Phrase(18, new Chunk("\nComputational ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase Computational1 = new Phrase(18, new Chunk("Computation is the procedure of calculating; determining something by mathematical or logical methods. It is a process of calculation (usually of numbers) performed by means of an algorithm. It involves numerical & mathematical problem solving. You have an interest in computational field means you like the activities where numbers, calculations are involved. Like: working with numbers,analyzing some data, keeping accounts, study statistics & use it for research purpose etc. ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp18.Add(Computational);
                        pp18.Add(Computational1);
                        pp18.Add(limage);
                        PDTopCelll121.Add(pp18);
                        PDTopTableee8b.AddCell(PDTopCelll121);
                        PDTopTableee8b.AddCell(acell33);
                        Cell thirdcll2bb = new Cell();
                        thirdcll2bb.BackgroundColor = new Color(45, 136, 204);
                        thirdcll2bb.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        switch (dsss2.Tables[0].Rows[2][1].ToString())
                        {
                            case "Very Low":

                                thirdcll2bb.Add(verylow);
                                break;
                            case "Low":

                                thirdcll2bb.Add(low);
                                break;
                            case "Moderate":

                                thirdcll2bb.Add(middal);
                                break;
                            case "High":

                                thirdcll2bb.Add(high);
                                break;
                            case "Very High":

                                thirdcll2bb.Add(veryhigh);
                                break;
                        }
                        thirdcll2bb.Add(new Paragraph(dsss2.Tables[0].Rows[2][1].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        thirdcll2bb.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopTableee8b.AddCell(thirdcll2bb);
                        // doc.Add(PDTopTableee8b);
                        maintable3.Add(PDTopTableee8b);

                        //doc.Add(lastpatch);

                        iTextSharp.text.Table PDTopTableee9b = new iTextSharp.text.Table(3);
                        PDTopTableee9b.Alignment = 0;
                        PDTopTableee9b.Width = 100;
                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        PDTopTableee9b.DefaultCellBorder = 0;
                        PDTopTableee9b.Border = 0;
                        PDTopTableee9b.SetWidths(width);
                        Cell PDTopCelll122 = new Cell();
                        PDTopCelll122.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        Paragraph pp19 = new Paragraph();
                        Phrase BusinessandCommercial = new Phrase(18, new Chunk("\nBusiness and Commercial ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase BusinessandCommercial1 = new Phrase(18, new Chunk("Business is an activity which, in general, is carried out in competition with the private sector. Which has a trade, occupation or other commercial activity engaged in or gain, profit for which a corporation can be organized. You have an interest in business & commercial field mean you like the activities which are related to business. Like: direct or coordinate a business, study economical reports & evaluate performance of company, study share market or take decision for the growth of company etc. ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp19.Add(BusinessandCommercial);
                        pp19.Add(BusinessandCommercial1);
                        pp19.Add(limage);
                        PDTopCelll122.Add(pp19);
                        PDTopTableee9b.AddCell(PDTopCelll122);
                        PDTopTableee9b.AddCell(acell33);
                        Cell thirdcll3bb = new Cell();
                        thirdcll3bb.BackgroundColor = new Color(45, 136, 204);
                        thirdcll3bb.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        switch (dsss2.Tables[0].Rows[3][1].ToString())
                        {
                            case "Very Low":

                                thirdcll3bb.Add(verylow);
                                break;
                            case "Low":

                                thirdcll3bb.Add(low);
                                break;
                            case "Moderate":

                                thirdcll3bb.Add(middal);
                                break;
                            case "High":

                                thirdcll3bb.Add(high);
                                break;
                            case "Very High":

                                thirdcll3bb.Add(veryhigh);
                                break;
                        }
                        thirdcll3bb.Add(new Paragraph(dsss2.Tables[0].Rows[3][1].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        thirdcll3bb.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopTableee9b.AddCell(thirdcll3bb);
                        // doc.Add(PDTopTableee9b);
                        maintable4.Add(PDTopTableee9b);

                        doc.Add(dheyalogo);

                        iTextSharp.text.Table PDTopTableee10b = new iTextSharp.text.Table(3);
                        PDTopTableee10b.Alignment = 0;
                        PDTopTableee10b.Width = 100;
                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        PDTopTableee10b.DefaultCellBorder = 0;
                        PDTopTableee10b.Border = 0;
                        PDTopTableee10b.SetWidths(width);
                        Cell PDTopCelll123 = new Cell();
                        PDTopCelll123.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        Paragraph pp20 = new Paragraph();
                        Phrase Science = new Phrase(18, new Chunk("\nScience ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase Science1 = new Phrase(18, new Chunk("Science is the method of principles and procedures for the systematic pursuit of knowledge involving the recognition and formulation of a problem, the collection of data through observation and experiment, and the formulation and testing of hypotheses. It works for inventions & innovations. You have an interest in scientific field means if you like such activities where some research,invention or innovation is needed, you have an interest in the field of science. For example, study about metals, alloys & elements, do researches related to physics, chemistry or biology, inspect the quality of product, experiment to increase the productivity of the product etc. ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp20.Add(Science);
                        pp20.Add(Science1);
                        pp20.Add(limage);
                        PDTopCelll123.Add(pp20);
                        PDTopTableee10b.AddCell(PDTopCelll123);
                        PDTopTableee10b.AddCell(acell33);
                        Cell thirdcll4bb = new Cell();
                        thirdcll4bb.BackgroundColor = new Color(45, 136, 204);
                        thirdcll4bb.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        switch (dsss2.Tables[0].Rows[4][1].ToString())
                        {
                            case "Very Low":

                                thirdcll4bb.Add(verylow);
                                break;
                            case "Low":

                                thirdcll4bb.Add(low);
                                break;
                            case "Moderate":

                                thirdcll4bb.Add(middal);
                                break;
                            case "High":

                                thirdcll4bb.Add(high);
                                break;
                            case "Very High":

                                thirdcll4bb.Add(veryhigh);
                                break;
                        }
                        thirdcll4bb.Add(new Paragraph(dsss2.Tables[0].Rows[4][1].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        thirdcll4bb.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopTableee10b.AddCell(thirdcll4bb);
                        //doc.Add(PDTopTableee10b);
                        maintable5.Add(PDTopTableee10b);




                        iTextSharp.text.Table PDTopTableee11b = new iTextSharp.text.Table(3);
                        PDTopTableee11b.Alignment = 0;
                        PDTopTableee11b.Width = 100;
                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        PDTopTableee11b.DefaultCellBorder = 0;
                        PDTopTableee11b.Border = 0;
                        PDTopTableee11b.SetWidths(width);

                        Cell PDTopCelll124 = new Cell();
                        PDTopCelll124.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        Paragraph pp21 = new Paragraph();
                        Phrase Mechanical = new Phrase(18, new Chunk("\nMechanical ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase Mechanical1 = new Phrase(18, new Chunk("Mechanical field encompasses the designing, analyzing, testing and manufacturing of product. It involves the work which is related to machinery. Like: doing experiments with mechanical instruments, design mechanical machinery,invent mechanical parts or supervise constructions, oiling & servicing etc. ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp21.Add(Mechanical);
                        pp21.Add(Mechanical1);
                        pp21.Add(limage);
                        PDTopCelll124.Add(pp21);
                        PDTopTableee11b.AddCell(PDTopCelll124);
                        PDTopTableee11b.AddCell(acell33);
                        Cell thirdcll5bb = new Cell();
                        thirdcll5bb.BackgroundColor = new Color(45, 136, 204);
                        thirdcll5bb.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        switch (dsss2.Tables[0].Rows[5][1].ToString())
                        {
                            case "Very Low":

                                thirdcll5bb.Add(verylow);
                                break;
                            case "Low":

                                thirdcll5bb.Add(low);
                                break;
                            case "Moderate":

                                thirdcll5bb.Add(middal);
                                break;
                            case "High":

                                thirdcll5bb.Add(high);
                                break;
                            case "Very High":

                                thirdcll5bb.Add(veryhigh);
                                break;
                        }
                        thirdcll5bb.Add(new Paragraph(dsss2.Tables[0].Rows[5][1].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        thirdcll5bb.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopTableee11b.AddCell(thirdcll5bb);
                        // doc.Add(PDTopTableee11b);
                        maintable6.Add(PDTopTableee11b);





                        iTextSharp.text.Table PDTopTableee12b = new iTextSharp.text.Table(3);
                        PDTopTableee12b.Alignment = 0;
                        PDTopTableee12b.Width = 100;
                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        PDTopTableee12b.DefaultCellBorder = 0;
                        PDTopTableee12b.Border = 0;
                        PDTopTableee12b.SetWidths(width);

                        Cell PDTopCelll125 = new Cell();
                        PDTopCelll125.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        Paragraph pp22 = new Paragraph();
                        Phrase Persuasive = new Phrase(18, new Chunk("Persuasive ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase Persuasive1 = new Phrase(18, new Chunk("Persuasive means capable of convincing someone or having the power to induce action or belief. You have an interest in this field means you like activities where some convincing is involved. Like: to convince someone, canvass for social activities, bargain in sales, collecting funds or contributions etc. ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp22.Add(Persuasive);
                        pp22.Add(Persuasive1);
                        pp22.Add(limage);
                        PDTopCelll125.Add(pp22);
                        PDTopTableee12b.AddCell(PDTopCelll125);
                        PDTopTableee12b.AddCell(acell33);
                        Cell thirdcell6bb = new Cell();
                        thirdcell6bb.BackgroundColor = new Color(45, 136, 204);
                        thirdcell6bb.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        switch (dsss2.Tables[0].Rows[6][1].ToString())
                        {
                            case "Very Low":

                                thirdcell6bb.Add(verylow);
                                break;
                            case "Low":

                                thirdcell6bb.Add(low);
                                break;
                            case "Moderate":

                                thirdcell6bb.Add(middal);
                                break;
                            case "High":

                                thirdcell6bb.Add(high);
                                break;
                            case "Very High":

                                thirdcell6bb.Add(veryhigh);
                                break;
                        }
                        thirdcell6bb.Add(new Paragraph(dsss2.Tables[0].Rows[6][1].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        thirdcell6bb.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopTableee12b.AddCell(thirdcell6bb);
                        //doc.Add(PDTopTableee12b);
                        maintable7.Add(PDTopTableee12b);

                        //////

                        iTextSharp.text.Table PDTopTableee13b = new iTextSharp.text.Table(3);
                        PDTopTableee13b.Alignment = 0;
                        PDTopTableee13b.Width = 100;
                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        PDTopTableee13b.DefaultCellBorder = 0;
                        PDTopTableee13b.Border = 0;
                        PDTopTableee13b.SetWidths(width);

                        Cell PDTopCelll126 = new Cell();
                        PDTopCelll126.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        Paragraph pp23 = new Paragraph();
                        Phrase Adventurous = new Phrase(18, new Chunk("Adventurous ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase Adventurous1 = new Phrase(18, new Chunk("Adventure is described as an undertaking, which involves danger. If the venture is exciting, an experience that would not likely to be forgotten quickly. You have an interest in this field means you like such activities where some risky, dangerous part comes. Like: playing thrilling games, participate in breathtaking/awe-inspiring activities like scuba diving, Para-sailing etc.  ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp23.Add(Adventurous);
                        pp23.Add(Adventurous1);
                        pp23.Add(limage);
                        PDTopCelll126.Add(pp23);
                        PDTopTableee13b.AddCell(PDTopCelll126);
                        PDTopTableee13b.AddCell(acell33);
                        Cell thirdcell7bb = new Cell();
                        thirdcell7bb.BackgroundColor = new Color(45, 136, 204);
                        thirdcell7bb.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        switch (dsss2.Tables[0].Rows[7][1].ToString())
                        {
                            case "Very Low":

                                thirdcell7bb.Add(verylow);
                                break;
                            case "Low":

                                thirdcell7bb.Add(low);
                                break;
                            case "Moderate":

                                thirdcell7bb.Add(middal);
                                break;
                            case "High":

                                thirdcell7bb.Add(high);
                                break;
                            case "Very High":

                                thirdcell7bb.Add(veryhigh);
                                break;
                        }
                        thirdcell7bb.Add(new Paragraph(dsss2.Tables[0].Rows[7][1].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        thirdcell7bb.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopTableee13b.AddCell(thirdcell7bb);
                        //doc.Add(PDTopTableee12b);
                        maintable8.Add(PDTopTableee13b);

                        iTextSharp.text.Table PDTopTableee14b = new iTextSharp.text.Table(3);
                        PDTopTableee14b.Alignment = 0;
                        PDTopTableee14b.Width = 100;
                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        PDTopTableee14b.DefaultCellBorder = 0;
                        PDTopTableee14b.Border = 0;
                        PDTopTableee14b.SetWidths(width);

                        Cell PDTopCelll127 = new Cell();
                        PDTopCelll127.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        Paragraph pp24 = new Paragraph();
                        Phrase Outdoor = new Phrase(18, new Chunk("\nOutdoor ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase Outdoor1 = new Phrase(18, new Chunk("Outdoor means going out in to the natural environment, learning about and respecting the environment or/and being a part of social activities. You have an interest in this area means you like the outdoor activities like: trekking, traveling, gardening,participating in social functions etc ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp24.Add(Outdoor);
                        pp24.Add(Outdoor1);
                        pp24.Add(limage);
                        PDTopCelll127.Add(pp24);
                        PDTopTableee14b.AddCell(PDTopCelll127);
                        PDTopTableee14b.AddCell(acell33);
                        Cell thirdcell8bb = new Cell();
                        thirdcell8bb.BackgroundColor = new Color(45, 136, 204);
                        thirdcell8bb.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        switch (dsss2.Tables[0].Rows[8][1].ToString())
                        {
                            case "Very Low":

                                thirdcell8bb.Add(verylow);
                                break;
                            case "Low":

                                thirdcell8bb.Add(low);
                                break;
                            case "Moderate":

                                thirdcell8bb.Add(middal);
                                break;
                            case "High":

                                thirdcell8bb.Add(high);
                                break;
                            case "Very High":

                                thirdcell8bb.Add(veryhigh);
                                break;
                        }
                        thirdcell8bb.Add(new Paragraph(dsss2.Tables[0].Rows[8][1].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        thirdcell8bb.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopTableee14b.AddCell(thirdcell8bb);
                        //doc.Add(PDTopTableee14b);
                        maintable9.Add(PDTopTableee14b);

                        iTextSharp.text.Table PDTopTableee15b = new iTextSharp.text.Table(3);
                        PDTopTableee15b.Alignment = 0;
                        PDTopTableee15b.Width = 100;
                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        PDTopTableee15b.DefaultCellBorder = 0;
                        PDTopTableee15b.Border = 0;
                        PDTopTableee15b.SetWidths(width);

                        Cell PDTopCelll128 = new Cell();
                        PDTopCelll128.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        Paragraph pp25 = new Paragraph();
                        Phrase Socialservices = new Phrase(18, new Chunk("\nSocial services ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase Socialservices1 = new Phrase(18, new Chunk("Social work concerned with social problems, their causes, their solutions and their human impacts. It committed to the pursuit of social justice to the enhancement of the quality of life, and to the development of the full potential of each individual, group and community in society. You have an interest in this field mean you like to work for the society. Like: social work, work for rehabilitation, provide public recreation services, work for people etc. ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp25.Add(Socialservices);
                        pp25.Add(Socialservices1);
                        pp25.Add(limage);
                        PDTopCelll128.Add(pp25);
                        PDTopTableee15b.AddCell(PDTopCelll128);
                        PDTopTableee15b.AddCell(acell33);
                        Cell thirdcell9bb = new Cell();
                        thirdcell9bb.BackgroundColor = new Color(45, 136, 204);
                        thirdcell9bb.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        switch (dsss2.Tables[0].Rows[9][1].ToString())
                        {
                            case "Very Low":

                                thirdcell9bb.Add(verylow);
                                break;
                            case "Low":

                                thirdcell9bb.Add(low);
                                break;
                            case "Moderate":

                                thirdcell9bb.Add(middal);
                                break;
                            case "High":

                                thirdcell9bb.Add(high);
                                break;
                            case "Very High":

                                thirdcell9bb.Add(veryhigh);
                                break;
                        }
                        thirdcell9bb.Add(new Paragraph(dsss2.Tables[0].Rows[9][1].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        thirdcell9bb.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopTableee15b.AddCell(thirdcell9bb);
                        // doc.Add(PDTopTableee15b);
                        maintable10.Add(PDTopTableee15b);

                        iTextSharp.text.Table PDTopTableee16b = new iTextSharp.text.Table(3);
                        PDTopTableee16b.Alignment = 0;
                        PDTopTableee16b.Width = 100;
                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        PDTopTableee16b.DefaultCellBorder = 0;
                        PDTopTableee16b.Border = 0;
                        PDTopTableee16b.SetWidths(width);

                        Cell PDTopCelll129 = new Cell();
                        PDTopCelll129.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        Paragraph pp26 = new Paragraph();
                        Phrase Teaching = new Phrase(18, new Chunk("\nTeaching ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase Teaching1 = new Phrase(18, new Chunk("Teachers are those who help students or pupils to learn. Where teacher teaches,takes practical skill, including learning and thinking skills. You are having interest in this field means you like to teach others. Like: Teach specific work to others; teach to students, working in educational field, sharing knowledge with others etc. ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp26.Add(Teaching);
                        pp26.Add(Teaching1);
                        pp26.Add(limage);
                        PDTopCelll129.Add(pp26);
                        PDTopTableee16b.AddCell(PDTopCelll129);
                        PDTopTableee16b.AddCell(acell33);
                        Cell thirdcell10bb = new Cell();
                        thirdcell10bb.BackgroundColor = new Color(45, 136, 204);
                        thirdcell10bb.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        switch (dsss2.Tables[0].Rows[10][1].ToString())
                        {
                            case "Very Low":

                                thirdcell10bb.Add(verylow);
                                break;
                            case "Low":

                                thirdcell10bb.Add(low);
                                break;
                            case "Moderate":

                                thirdcell10bb.Add(middal);
                                break;
                            case "High":

                                thirdcell10bb.Add(high);
                                break;
                            case "Very High":

                                thirdcell10bb.Add(veryhigh);
                                break;
                        }
                        thirdcell10bb.Add(new Paragraph(dsss2.Tables[0].Rows[10][1].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        thirdcell10bb.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopTableee16b.AddCell(thirdcell10bb);
                        // doc.Add(PDTopTableee16b);
                        maintable11.Add(PDTopTableee16b);

                        iTextSharp.text.Table PDTopTableee17b = new iTextSharp.text.Table(3);
                        PDTopTableee17b.Alignment = 0;
                        PDTopTableee17b.Width = 100;
                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        PDTopTableee17b.DefaultCellBorder = 0;
                        PDTopTableee17b.Border = 0;
                        PDTopTableee17b.SetWidths(width);

                        doc.Add(dheyalogo);
                        //doc.Add(lastpatch);

                        Cell PDTopCelll130 = new Cell();
                        PDTopCelll130.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        Paragraph pp27 = new Paragraph();
                        Phrase Artistic = new Phrase(18, new Chunk("\nArtistic ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase Artistic1 = new Phrase(18, new Chunk("An art is a habit of thinking, doing, or making that demonstrates systematic discipline based on principles. It is a habit done often and often unconsciously.You have an interest in this area means you like the artistic activities. Like: drawing, painting, photography, designing, acting, cooking etc.  ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp27.Add(Artistic);
                        pp27.Add(Artistic1);
                        pp27.Add(limage);
                        PDTopCelll130.Add(pp27);
                        PDTopTableee17b.AddCell(PDTopCelll130);
                        PDTopTableee17b.AddCell(acell33);
                        Cell thirdcell110bb = new Cell();
                        thirdcell110bb.BackgroundColor = new Color(45, 136, 204);
                        thirdcell110bb.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        switch (dsss2.Tables[0].Rows[11][1].ToString())
                        {
                            case "Very Low":

                                thirdcell110bb.Add(verylow);
                                break;
                            case "Low":

                                thirdcell110bb.Add(low);
                                break;
                            case "Moderate":

                                thirdcell110bb.Add(middal);
                                break;
                            case "High":

                                thirdcell110bb.Add(high);
                                break;
                            case "Very High":

                                thirdcell110bb.Add(veryhigh);
                                break;
                        }
                        thirdcell110bb.Add(new Paragraph(dsss2.Tables[0].Rows[11][1].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        thirdcell110bb.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopTableee17b.AddCell(thirdcell110bb);
                        //  doc.Add(PDTopTableee17b);
                        maintable12.Add(PDTopTableee17b);

                        doc.Add(dheyalogo);

                        iTextSharp.text.Table PDTopTableee18b = new iTextSharp.text.Table(3);
                        PDTopTableee18b.Alignment = 0;
                        PDTopTableee18b.Width = 100;
                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        PDTopTableee18b.DefaultCellBorder = 0;
                        PDTopTableee18b.Border = 0;
                        PDTopTableee18b.SetWidths(width);

                        Cell PDTopCelll131 = new Cell();
                        PDTopCelll131.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        Paragraph pp28 = new Paragraph();
                        Phrase Administrative = new Phrase(18, new Chunk("\nAdministrative ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase Administrative1 = new Phrase(18, new Chunk("Administration involve the exercise of analytical ability, judgment, discretion,personal responsibility, and the application of a strong body of knowledge of principles, concepts, and practices applicable to one or more fields of administration or management. You have interest in this area mean you like such activities where administration part comes. Like: organize meetings, make reports,select candidates, manage public relations etc.  ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp28.Add(Administrative);
                        pp28.Add(Administrative1);
                        pp28.Add(limage);
                        PDTopCelll131.Add(pp28);
                        PDTopTableee18b.AddCell(PDTopCelll131);
                        PDTopTableee18b.AddCell(acell33);
                        Cell thirdcell112bb = new Cell();
                        thirdcell112bb.BackgroundColor = new Color(45, 136, 204);
                        thirdcell112bb.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        switch (dsss2.Tables[0].Rows[12][1].ToString())
                        {
                            case "Very Low":

                                thirdcell112bb.Add(verylow);
                                break;
                            case "Low":

                                thirdcell112bb.Add(low);
                                break;
                            case "Moderate":

                                thirdcell112bb.Add(middal);
                                break;
                            case "High":

                                thirdcell112bb.Add(high);
                                break;
                            case "Very High":

                                thirdcell112bb.Add(veryhigh);
                                break;
                        }
                        thirdcell112bb.Add(new Paragraph(dsss2.Tables[0].Rows[12][1].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        thirdcell112bb.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopTableee18b.AddCell(thirdcell112bb);
                        // doc.Add(PDTopTableee18b);
                        maintable13.Add(PDTopTableee18b);

                        iTextSharp.text.Table PDTopTableee19b = new iTextSharp.text.Table(3);
                        PDTopTableee19b.Alignment = 0;
                        PDTopTableee19b.Width = 100;
                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        PDTopTableee19b.DefaultCellBorder = 0;
                        PDTopTableee19b.Border = 0;
                        PDTopTableee19b.SetWidths(width);

                        Cell PDTopCelll132 = new Cell();
                        PDTopCelll132.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        Paragraph pp29 = new Paragraph();
                        Phrase Clerical = new Phrase(18, new Chunk("\nClerical ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase Clerical1 = new Phrase(18, new Chunk("Clerical work involves structured work in support of office, business, field, or monetary operations. Duties are performed in accordance with established policies and require training, experience, or working knowledge related to the tasks to be performed. You have interest in this area means you like the activities where some clerical work is needed. Like: keeping records, receiving & issue things, checking bills etc.  ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp29.Add(Clerical);
                        pp29.Add(Clerical1);
                        pp29.Add(limage);
                        PDTopCelll132.Add(pp29);
                        PDTopTableee19b.AddCell(PDTopCelll132);
                        PDTopTableee19b.AddCell(acell33);
                        Cell thirdcell113bb = new Cell();
                        thirdcell113bb.BackgroundColor = new Color(45, 136, 204);
                        thirdcell113bb.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        switch (dsss2.Tables[0].Rows[13][1].ToString())
                        {
                            case "Very Low":

                                thirdcell113bb.Add(verylow);
                                break;
                            case "Low":

                                thirdcell113bb.Add(low);
                                break;
                            case "Moderate":

                                thirdcell113bb.Add(middal);
                                break;
                            case "High":

                                thirdcell113bb.Add(high);
                                break;
                            case "Very High":

                                thirdcell113bb.Add(veryhigh);
                                break;
                        }
                        thirdcell113bb.Add(new Paragraph(dsss2.Tables[0].Rows[13][1].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        thirdcell113bb.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopTableee19b.AddCell(thirdcell113bb);
                        //doc.Add(PDTopTableee19b);
                        maintable14.Add(PDTopTableee19b);

                        iTextSharp.text.Table PDTopTableee20b = new iTextSharp.text.Table(3);
                        PDTopTableee20b.Alignment = 0;
                        PDTopTableee20b.Width = 100;
                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        PDTopTableee20b.DefaultCellBorder = 0;
                        PDTopTableee20b.Border = 0;
                        PDTopTableee20b.SetWidths(width);

                        Cell PDTopCelll133 = new Cell();
                        PDTopCelll133.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        Paragraph pp30 = new Paragraph();
                        Phrase Literary = new Phrase(18, new Chunk("\nLiterary ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase Literary1 = new Phrase(18, new Chunk("Literary is concerned with books or academics. Literature describes written or spoken material. It also describes anything from creative writing to more technical or scientific works. The term mostly refers to works of the creative imagination, including works of poetry, drama, fiction, and nonfiction. You have an interest in this area means you like the activities where literature plays an important role. Like: write or edit stories, study literature, publish journals, give a talk on a specific topic etc.  ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp30.Add(Literary);
                        pp30.Add(Literary1);
                        pp30.Add(limage);
                        PDTopCelll133.Add(pp30);
                        PDTopTableee20b.AddCell(PDTopCelll133);
                        PDTopTableee20b.AddCell(acell33);
                        Cell thirdcell114bb = new Cell();
                        thirdcell114bb.BackgroundColor = new Color(45, 136, 204);
                        thirdcell114bb.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        switch (dsss2.Tables[0].Rows[14][1].ToString())
                        {
                            case "Very Low":

                                thirdcell114bb.Add(verylow);
                                break;
                            case "Low":

                                thirdcell114bb.Add(low);
                                break;
                            case "Moderate":

                                thirdcell114bb.Add(middal);
                                break;
                            case "High":

                                thirdcell114bb.Add(high);
                                break;
                            case "Very High":

                                thirdcell114bb.Add(veryhigh);
                                break;
                        }
                        thirdcell114bb.Add(new Paragraph(dsss2.Tables[0].Rows[14][1].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        thirdcell114bb.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        PDTopTableee20b.AddCell(thirdcell114bb);
                        //doc.Add(PDTopTableee20b);
                        maintable15.Add(PDTopTableee20b);

                        iTextSharp.text.Table PDTopTableee21b = new iTextSharp.text.Table(3);
                        PDTopTableee21b.Alignment = 0;
                        PDTopTableee21b.Width = 100;
                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        PDTopTableee21b.DefaultCellBorder = 0;
                        PDTopTableee21b.Border = 0;
                        PDTopTableee21b.SetWidths(width);

                        Cell PDTopCelll134 = new Cell();
                        PDTopCelll134.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        Paragraph pp31 = new Paragraph();
                        Phrase Musical = new Phrase(18, new Chunk("\nMusical ", FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                        Phrase Musical1 = new Phrase(18, new Chunk("Musical is basically pertaining to music; having the qualities of music; or the power of producing music; or devoted to music. Music is the art of arranging and synchronizing sounds to produce a continuous, combined, and evocative composition through melody, harmony, rhythm, and quality. It is the science and the art of tones, or musical sounds. It is an artistic form of auditory communication incorporating instrumental or vocal tones in a structured and continuous manner. You have an interest in this field means you like the activities which are related to music. Like: attend musical programs, participate in musical competitions, play some musical instrument, be a member of music club etc. ", FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        pp31.Add(Musical);
                        pp31.Add(Musical1);
                        pp31.Add(limage);
                        PDTopCelll134.Add(pp31);
                        PDTopTableee21b.AddCell(PDTopCelll134);
                        PDTopTableee21b.AddCell(acell33);
                        Cell thirdcell115bb = new Cell();
                        thirdcell115bb.BackgroundColor = new Color(45, 136, 204);
                        thirdcell115bb.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        switch (dsss2.Tables[0].Rows[15][1].ToString())
                        {
                            case "Very Low":

                                thirdcell115bb.Add(verylow);
                                break;
                            case "Low":

                                thirdcell115bb.Add(low);
                                break;
                            case "Moderate":

                                thirdcell115bb.Add(middal);
                                break;
                            case "High":

                                thirdcell115bb.Add(high);
                                break;
                            case "Very High":

                                thirdcell115bb.Add(veryhigh);
                                break;
                        }
                        thirdcell115bb.Add(new Paragraph(dsss2.Tables[0].Rows[15][1].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                        thirdcell115bb.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;

                        PDTopTableee21b.AddCell(thirdcell115bb);
                        //doc.Add(PDTopTableee21b);
                        maintable16.Add(PDTopTableee21b);

                        maintable.AddCell(maintable0);
                        maintable.AddCell(maintable1);
                        maintable.AddCell(maintable2);
                        maintable.AddCell(maintable3);
                        maintable.AddCell(maintable4);
                        maintable.AddCell(maintable5);
                        maintable.AddCell(maintable6);
                        maintable.AddCell(maintable7);
                        maintable.AddCell(maintable8);
                        maintable.AddCell(maintable9);
                        maintable.AddCell(maintable10);
                        maintable.AddCell(maintable11);
                        maintable.AddCell(maintable12);
                        maintable.AddCell(maintable13);
                        maintable.AddCell(maintable14);
                        maintable.AddCell(maintable15);
                        maintable.AddCell(maintable16);
                        doc.Add(maintable);

                        # region  chart


                        //PDTopCelll119.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                        //PDTopCell119.Width = 80;
                        // PDTopTableee7.AddCell(PDTopCelll119);


                        //strcmd = "SELECT P_rating,rating FROM tbl_II_cand_factors where c_id = '" + c_id + "'order by factor_no";
                        //DataSet ds2 = clsdb_Xaction.ExecDataSet(strcmd);



                        //strdata2 = ds2.Tables[0].Rows[0][0].ToString() + "," + ds2.Tables[0].Rows[1][0].ToString() + "," + ds2.Tables[0].Rows[2][0].ToString();
                        //strdata2 += "," + ds2.Tables[0].Rows[3][0].ToString() + "," + ds2.Tables[0].Rows[4][0].ToString() + "," + ds2.Tables[0].Rows[5][0].ToString();
                        //strdata2 += "," + ds2.Tables[0].Rows[6][0].ToString() + "," + ds2.Tables[0].Rows[7][0].ToString() + "," + ds2.Tables[0].Rows[8][0].ToString();
                        //strdata2 += "," + ds2.Tables[0].Rows[9][0].ToString() + "," + ds2.Tables[0].Rows[10][0].ToString() + "," + ds2.Tables[0].Rows[11][0].ToString();
                        //strdata2 += "," + ds2.Tables[0].Rows[12][0].ToString() + "," + ds2.Tables[0].Rows[13][0].ToString() + "," + ds2.Tables[0].Rows[14][0].ToString();
                        //strdata2 += "," + ds2.Tables[0].Rows[15][0].ToString();

                        //iTextSharp.text.Image png3 = iTextSharp.text.Image.GetInstance("http://chart.apis.google.com/chart?cht=rs&chd=t:" + strdata2 + "&chs=300x300&chl=M|T|C|BC|S|Me|P|A|O|SS|Te|Ar|Ad|Cl|L|Mu&chco=000000&chls=2.0,4.0,0.0&chm=B,00000080,0,1.0,5.0|d,000000,0,0.0,10.0|d,000000,0,1.0,10.0|d,000000,0,2.0,10.0|d,000000,0,3.0,10.0|d,000000,0,4.0,10.0|d,000000,0,5.0,10.0|d,000000,0,6.0,10.0|d,000000,0,7.0,10.0|d,000000,0,8.0,10.0|d,000000,0,9.0,10.0|d,000000,0,10.0,10.0|d,000000,0,11.0,10.0|d,000000,0,12.0,10.0|d,000000,0,13.0,10.0|d,000000,0,14.0,10.0|d,000000,0,15.0,10.0&chxt=r&chxr=2,0,100");

                        //Cell ccell3 = new Cell();
                        //ccell3.Add(png3);
                        //ccell3.Add(new Paragraph("\n"));
                        //ccell3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        ////ccell3.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        ////ccell3.BorderColor = new Color(192, 192, 192);
                        ////ccell3.Border = 0;
                        //ccell3.BackgroundColor = new Color(70, 114, 217);
                        //PDTopTableee7.AddCell(ccell3);


                        ////////////////////////////////.NET CHART 3////////////////////////////////////////////

                        //#region Radar Chart

                        //AbilityBarChart.Visible = false;

                        //// String StrSql = "SELECT ability_code, P_rating FROM (select distinct c_id,test_id,ability_code,P_rating,rating from tbl_candidate_test_results where c_id = '" + c_id + "') as x where c_id = '" + c_id + "'order by test_id";
                        //// DataSet dsChart = clsdb_Xaction.ExecDataSet(StrSql);
                        //// Populate series data
                        //double[] yValues2 = { Convert.ToDouble(ds2.Tables[0].Rows[0][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[1][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[2][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[3][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[4][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[5][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[6][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[7][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[8][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[9][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[10][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[11][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[12][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[13][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[14][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[15][0].ToString()) };
                        //string[] xValues2 = { "M","T","C","BC","S","Me","P","A","O","SS","Te","Ar","Ad","Cl","L","Mu"};
                        //AbilityBarChart.Series["Series1"].Points.DataBindXY(xValues2, yValues2);

                        //// Set radar chart type
                        //AbilityBarChart.Series["Series1"].ChartType = System.Web.UI.DataVisualization.Charting.SeriesChartType.Radar;

                        //// Set radar chart style (Area, Line or Marker)
                        //AbilityBarChart.Series["Series1"]["RadarDrawingStyle"] = "Area";

                        //// Set circular area drawing style (Circle or Polygon)
                        //AbilityBarChart.Series["Series1"]["AreaDrawingStyle"] = "Circle";

                        //// Set labels style (Auto, Horizontal, Circular or Radial)
                        //AbilityBarChart.Series["Series1"]["CircularLabelsStyle"] = "Horizontal";

                        //// Show as 3D
                        ////AbilityBarChart.ChartAreas["ChartArea1"].Area3DStyle.Enable3D = true;

                        //AbilityBarChart.Width = 500;
                        //AbilityBarChart.Height = 250;

                        ////for saving image
                        //AbilityBarChart.SaveImage(Server.MapPath("./Reports_graph/" + candidate_name + "2.png"), System.Web.UI.DataVisualization.Charting.ChartImageFormat.Png);
                        //# endregion

                        //////////////////////////////////////////////////////////////////////////////////////////
                        //iTextSharp.text.Image png3 = iTextSharp.text.Image.GetInstance(@StrChartPath2);

                        //PDTopTableee7.AddCell(acell33);
                        //Cell ccell3 = new Cell();
                        //  ccell3.Add(png3);


                        /////////////////////////////////////////////////////////    add barchart 3/////////////////////////////




                        //iTextSharp.text.Table thirdTablebb = new iTextSharp.text.Table(1);

                        //Cell thirdcellbb = new Cell();
                        //switch (ds2.Tables[0].Rows[0][1].ToString())
                        //{
                        //    case "Very Low":
                        //        //thirdTable.Widths = new float[] { 20, 80 };
                        //        //thirdcell.Add(new Chunk("\n"));
                        //        //thirdcell.BackgroundColor = new Color(255, 0, 0);
                        //        //thirdcell.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcellbb.Add(verylow);

                        //        break;
                        //    case "Low":
                        //        //thirdTable.Widths = new float[] { 40, 60 };
                        //        //thirdcell.Add(new Chunk("\n"));
                        //        //thirdcell.BackgroundColor = new Color(255, 0, 0);
                        //        //thirdcell.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcellbb.Add(low);
                        //        break;
                        //    case "Moderate":
                        //        //thirdTable.Widths = new float[] { 60, 40 };
                        //        //thirdcell.Add(new Chunk("\n"));
                        //        //thirdcell.BackgroundColor = new Color(255, 255, 0);
                        //        //thirdcell.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcellbb.Add(middal);
                        //        break;
                        //    case "High":
                        //        //thirdTable.Widths = new float[] { 80, 20 };
                        //        //thirdcell.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, new Color(255, 255, 255))));
                        //        //thirdcell.BackgroundColor = new Color(0, 64, 0);
                        //        //thirdcell.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcellbb.Add(high);
                        //        break;
                        //    case "Very High":
                        //        //thirdTable.Widths = new float[] { 100, 0 };
                        //        //thirdcell.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, new Color(255, 255, 255))));
                        //        //thirdcell.BackgroundColor = new Color(0, 64, 0);
                        //        //thirdcell.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcellbb.Add(veryhigh);
                        //        break;
                        //}
                        ////thirdTable.Widths = new float[] { 50, 50 };
                        ////Cell thirdcell = new Cell("Low");
                        ////thirdcell.BackgroundColor = new Color(255, 0, 0);

                        //thirdTablebb.AddCell(thirdcellbb);
                        //thirdTable.AddCell("");





                        ////iTextSharp.text.Table thirdTabl1bb = new iTextSharp.text.Table(1);

                        ////Cell thirdcll1bb = new Cell();
                        ////switch (ds2.Tables[0].Rows[1][1].ToString())
                        ////{
                        ////    case "Very Low":
                        ////        //thirdTabl1.Widths = new float[] { 20, 80 };
                        ////        //thirdcll1.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        ////        //thirdcll1.BackgroundColor = new Color(255, 0, 0);
                        ////        //thirdcll1.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        ////        thirdcll1bb.Add(verylow);
                        ////        break;
                        ////    case "Low":
                        ////        //thirdTabl1.Widths = new float[] { 40, 60 };
                        ////        //thirdcll1.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        ////        //thirdcll1.BackgroundColor = new Color(255, 0, 0);
                        ////        //thirdcll1.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        ////        thirdcll1bb.Add(low);
                        ////        break;
                        ////    case "Moderate":
                        ////        //thirdTabl1.Widths = new float[] { 60, 40 };
                        ////        //thirdcll1.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        ////        //thirdcll1.BackgroundColor = new Color(255, 255, 0);
                        ////        //thirdcll1.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        ////        thirdcll1bb.Add(middal);
                        ////        break;
                        ////    case "High":
                        ////        //thirdTabl1.Widths = new float[] { 80, 20 };
                        ////        //thirdcll1.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        ////        //thirdcll1.BackgroundColor = new Color(0, 64, 0);
                        ////        //thirdcll1.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        ////        thirdcll1bb.Add(high);
                        ////        break;
                        ////    case "Very High":
                        ////        //thirdTabl1.Widths = new float[] { 100, 0 };
                        ////        //thirdcll1.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, new Color(255, 255, 255))));
                        ////        //thirdcll1.BackgroundColor = new Color(0, 64, 0);
                        ////        //thirdcll1.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        ////        thirdcll1bb.Add(veryhigh);
                        ////        break;
                        ////}
                        //////thirdTable.Widths = new float[] { 50, 50 };
                        //////Cell thirdcell = new Cell("Low");
                        //////thirdcell.BackgroundColor = new Color(255, 0, 0);

                        ////thirdTabl1bb.AddCell(thirdcll1bb);
                        ////// thirdTabl1.AddCell("");


                        ////iTextSharp.text.Table thirdTabl2bb = new iTextSharp.text.Table(1);

                        ////Cell thirdcll2bb = new Cell();
                        ////switch (ds2.Tables[0].Rows[2][1].ToString())
                        ////{
                        ////    case "Very Low":
                        ////        //thirdTabl2.Widths = new float[] { 20, 80 };
                        ////        //thirdcll2.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        ////        //thirdcll2.BackgroundColor = new Color(255, 0, 0);
                        ////        //thirdcll2.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        ////        thirdcll2bb.Add(verylow);
                        ////        break;
                        ////    case "Low":
                        ////        //thirdTabl2.Widths = new float[] { 40, 60 };
                        ////        //thirdcll2.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        ////        //thirdcll2.BackgroundColor = new Color(255, 0, 0);
                        ////        //thirdcll2.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        ////        thirdcll2bb.Add(low);
                        ////        break;
                        ////    case "Moderate":
                        ////        //thirdTabl2.Widths = new float[] { 60, 40 };
                        ////        //thirdcll2.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        ////        //thirdcll2.BackgroundColor = new Color(255, 255, 0);
                        ////        //thirdcll2.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        ////        thirdcll2bb.Add(middal);
                        ////        break;
                        ////    case "High":
                        ////        //thirdTabl2.Widths = new float[] { 80, 20 };
                        ////        //thirdcll2.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        ////        //thirdcll2.BackgroundColor = new Color(0, 64, 0);
                        ////        //thirdcll2.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        ////        thirdcll2bb.Add(high);
                        ////        break;
                        ////    case "Very High":
                        ////        //thirdTabl2.Widths = new float[] { 100, 0 };
                        ////        //thirdcll2.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, new Color(255, 255, 255))));
                        ////        //thirdcll2.BackgroundColor = new Color(0, 64, 0);
                        ////        //thirdcll2.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        ////        thirdcll2bb.Add(veryhigh);
                        ////        break;
                        ////}
                        //////thirdTable.Widths = new float[] { 50, 50 };
                        //////Cell thirdcell = new Cell("Low");
                        //////thirdcell.BackgroundColor = new Color(255, 0, 0);

                        ////thirdTabl2bb.AddCell(thirdcll2bb);
                        //////  thirdTabl2.AddCell("");


                        ////iTextSharp.text.Table thirdTabl3bb = new iTextSharp.text.Table(1);
                        ////Cell thirdcll3bb = new Cell();
                        ////switch (ds2.Tables[0].Rows[3][1].ToString())
                        ////{
                        ////    case "Very Low":
                        ////        //thirdTabl3.Widths = new float[] { 20, 80 };
                        ////        //thirdcll3.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        ////        //thirdcll3.BackgroundColor = new Color(255, 0, 0);
                        ////        //thirdcll3.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        ////        thirdcll3bb.Add(verylow);
                        ////        break;
                        ////    case "Low":
                        ////        //thirdTabl3.Widths = new float[] { 40, 60 };
                        ////        //thirdcll3.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        ////        //thirdcll3.BackgroundColor = new Color(255, 0, 0);
                        ////        //thirdcll3.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        ////        thirdcll3bb.Add(low);
                        ////        break;
                        ////    case "Moderate":
                        ////        //thirdTabl3.Widths = new float[] { 60, 40 };
                        ////        //thirdcll3.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        ////        //thirdcll3.BackgroundColor = new Color(255, 255, 0);
                        ////        //thirdcll3.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        ////        thirdcll3bb.Add(middal);
                        ////        break;
                        ////    case "High":
                        ////        //thirdTabl3.Widths = new float[] { 80, 20 };
                        ////        //thirdcll3.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        ////        //thirdcll3.BackgroundColor = new Color(0, 64, 0);
                        ////        //thirdcll3.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        ////        thirdcll3bb.Add(high);
                        ////        break;
                        ////    case "Very High":
                        ////        //thirdTabl3.Widths = new float[] { 100, 0 };
                        ////        //thirdcll3.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, new Color(255, 255, 255))));
                        ////        //thirdcll3.BackgroundColor = new Color(0, 64, 0);
                        ////        //thirdcll3.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        ////        thirdcll3bb.Add(veryhigh);
                        ////        break;
                        ////}
                        //////thirdTable.Widths = new float[] { 50, 50 };
                        //////Cell thirdcell = new Cell("Low");
                        //////thirdcell.BackgroundColor = new Color(255, 0, 0);

                        ////thirdTabl3bb.AddCell(thirdcll3bb);
                        ////// thirdTabl3.AddCell("");


                        ////iTextSharp.text.Table thirdTabl4bb = new iTextSharp.text.Table(1);
                        ////Cell thirdcll4bb = new Cell();
                        ////switch (ds2.Tables[0].Rows[4][1].ToString())
                        ////{
                        ////    case "Very Low":
                        ////        //thirdTabl4.Widths = new float[] { 20, 80 };
                        ////        //thirdcll4.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        ////        //thirdcll4.BackgroundColor = new Color(255, 0, 0);
                        ////        //thirdcll4.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        ////        thirdcll4bb.Add(verylow);
                        ////        break;
                        ////    case "Low":
                        ////        //thirdTabl4.Widths = new float[] { 40, 60 };
                        ////        //thirdcll4.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        ////        //thirdcll4.BackgroundColor = new Color(255, 0, 0);
                        ////        //thirdcll4.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        ////        thirdcll4bb.Add(low);
                        ////        break;
                        ////    case "Moderate":
                        ////        //thirdTabl4.Widths = new float[] { 60, 40 };
                        ////        //thirdcll4.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        ////        //thirdcll4.BackgroundColor = new Color(255, 255, 0);
                        ////        //thirdcll4.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        ////        thirdcll4bb.Add(middal);
                        ////        break;
                        ////    case "High":
                        ////        //thirdTabl4.Widths = new float[] { 80, 20 };
                        ////        //thirdcll4.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        ////        //thirdcll4.BackgroundColor = new Color(0, 64, 0);
                        ////        //thirdcll4.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        ////        thirdcll4bb.Add(high);
                        ////        break;
                        ////    case "Very High":
                        ////        //thirdTabl4.Widths = new float[] { 100, 0 };
                        ////        //thirdcll4.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, new Color(255, 255, 255))));
                        ////        //thirdcll4.BackgroundColor = new Color(0, 64, 0);
                        ////        //thirdcll4.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        ////        thirdcll4bb.Add(veryhigh);
                        ////        break;
                        ////}
                        //////thirdTable.Widths = new float[] { 50, 50 };
                        //////Cell thirdcell = new Cell("Low");
                        //////thirdcell.BackgroundColor = new Color(255, 0, 0);

                        ////thirdTabl4bb.AddCell(thirdcll4bb);
                        ////// thirdTabl4.AddCell("");



                        ////iTextSharp.text.Table thirdTabl5bb = new iTextSharp.text.Table(1);
                        ////Cell thirdcll5bb = new Cell();
                        ////switch (ds2.Tables[0].Rows[5][1].ToString())
                        ////{
                        ////    case "Very Low":
                        ////        //thirdTabl5.Widths = new float[] { 20, 80 };
                        ////        //thirdcll5.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        ////        //thirdcll5.BackgroundColor = new Color(255, 0, 0);
                        ////        //thirdcll5.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        ////        thirdcll5bb.Add(verylow);
                        ////        break;
                        ////    case "Low":
                        ////        //thirdTabl5.Widths = new float[] { 40, 60 };
                        ////        //thirdcll5.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        ////        //thirdcll5.BackgroundColor = new Color(255, 0, 0);
                        ////        //thirdcll5.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        ////        thirdcll5bb.Add(low);
                        ////        break;
                        ////    case "Moderate":
                        ////        //thirdTabl5.Widths = new float[] { 60, 40 };
                        ////        //thirdcll5.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        ////        //thirdcll5.BackgroundColor = new Color(255, 255, 0);
                        ////        //thirdcll5.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        ////        thirdcll5bb.Add(middal);
                        ////        break;
                        ////    case "High":
                        ////        //thirdTabl5.Widths = new float[] { 80, 20 };
                        ////        //thirdcll5.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        ////        //thirdcll5.BackgroundColor = new Color(0, 64, 0);
                        ////        //thirdcll5.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        ////        thirdcll5bb.Add(high);
                        ////        break;
                        ////    case "Very High":
                        ////        //thirdTabl5.Widths = new float[] { 100, 0 };
                        ////        //thirdcll5.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, new Color(255, 255, 255))));
                        ////        //thirdcll5.BackgroundColor = new Color(0, 64, 0);
                        ////        //thirdcll5.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        ////        thirdcll5bb.Add(veryhigh);
                        ////        break;
                        ////}
                        //////thirdTable.Widths = new float[] { 50, 50 };
                        //////Cell thirdcell = new Cell("Low");
                        //////thirdcell.BackgroundColor = new Color(255, 0, 0);

                        ////thirdTabl5bb.AddCell(thirdcll5bb);
                        ////// thirdTabl5.AddCell("");



                        //iTextSharp.text.Table thirdTabl6bb = new iTextSharp.text.Table(1);
                        //Cell thirdcell6bb = new Cell();
                        //switch (ds2.Tables[0].Rows[6][1].ToString())
                        //{
                        //    case "Very Low":
                        //        //thirdTabl6.Widths = new float[] { 20, 80 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(255, 0, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell6bb.Add(verylow);
                        //        break;
                        //    case "Low":
                        //        //thirdTabl6.Widths = new float[] { 40, 60 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(255, 0, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell6bb.Add(low);
                        //        break;
                        //    case "Moderate":
                        //        //thirdTabl6.Widths = new float[] { 60, 40 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(255, 255, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell6bb.Add(middal);
                        //        break;
                        //    case "High":
                        //        //thirdTabl6.Widths = new float[] { 80, 20 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(0, 64, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell6bb.Add(high);
                        //        break;
                        //    case "Very High":
                        //        //thirdTabl6.Widths = new float[] { 100, 0 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, new Color(255, 255, 255))));
                        //        //thirdcell6.BackgroundColor = new Color(0, 64, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell6bb.Add(veryhigh);
                        //        break;
                        //}
                        ////thirdTable.Widths = new float[] { 50, 50 };
                        ////Cell thirdcell = new Cell("Low");
                        ////thirdcell.BackgroundColor = new Color(255, 0, 0);

                        //thirdTabl6bb.AddCell(thirdcell6bb);
                        //// thirdTabl6.AddCell("");


                        //iTextSharp.text.Table thirdTabl7bb = new iTextSharp.text.Table(1);
                        //Cell thirdcell7bb = new Cell();
                        //switch (ds2.Tables[0].Rows[7][1].ToString())
                        //{
                        //    case "Very Low":
                        //        //thirdTabl6.Widths = new float[] { 20, 80 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(255, 0, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell7bb.Add(verylow);
                        //        break;
                        //    case "Low":
                        //        //thirdTabl6.Widths = new float[] { 40, 60 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(255, 0, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell7bb.Add(low);
                        //        break;
                        //    case "Moderate":
                        //        //thirdTabl6.Widths = new float[] { 60, 40 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(255, 255, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell7bb.Add(middal);
                        //        break;
                        //    case "High":
                        //        //thirdTabl6.Widths = new float[] { 80, 20 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(0, 64, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell7bb.Add(high);
                        //        break;
                        //    case "Very High":
                        //        //thirdTabl6.Widths = new float[] { 100, 0 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, new Color(255, 255, 255))));
                        //        //thirdcell6.BackgroundColor = new Color(0, 64, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell7bb.Add(veryhigh);
                        //        break;
                        //}
                        ////thirdTable.Widths = new float[] { 50, 50 };
                        ////Cell thirdcell = new Cell("Low");
                        ////thirdcell.BackgroundColor = new Color(255, 0, 0);

                        //thirdTabl7bb.AddCell(thirdcell7bb);
                        //// thirdTabl6.AddCell("");




                        //iTextSharp.text.Table thirdTabl8bb = new iTextSharp.text.Table(1);
                        //Cell thirdcell8bb = new Cell();
                        //switch (ds2.Tables[0].Rows[8][1].ToString())
                        //{
                        //    case "Very Low":
                        //        //thirdTabl6.Widths = new float[] { 20, 80 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(255, 0, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell8bb.Add(verylow);
                        //        break;
                        //    case "Low":
                        //        //thirdTabl6.Widths = new float[] { 40, 60 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(255, 0, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell8bb.Add(low);
                        //        break;
                        //    case "Moderate":
                        //        //thirdTabl6.Widths = new float[] { 60, 40 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(255, 255, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell8bb.Add(middal);
                        //        break;
                        //    case "High":
                        //        //thirdTabl6.Widths = new float[] { 80, 20 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(0, 64, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell8bb.Add(high);
                        //        break;
                        //    case "Very High":
                        //        //thirdTabl6.Widths = new float[] { 100, 0 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, new Color(255, 255, 255))));
                        //        //thirdcell6.BackgroundColor = new Color(0, 64, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell8bb.Add(veryhigh);
                        //        break;
                        //}
                        ////thirdTable.Widths = new float[] { 50, 50 };
                        ////Cell thirdcell = new Cell("Low");
                        ////thirdcell.BackgroundColor = new Color(255, 0, 0);

                        //thirdTabl8bb.AddCell(thirdcell8bb);
                        //// thirdTabl6.AddCell("");


                        //iTextSharp.text.Table thirdTabl9bb = new iTextSharp.text.Table(1);
                        //Cell thirdcell9bb = new Cell();
                        //switch (ds2.Tables[0].Rows[9][1].ToString())
                        //{
                        //    case "Very Low":
                        //        //thirdTabl6.Widths = new float[] { 20, 80 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(255, 0, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell9bb.Add(verylow);
                        //        break;
                        //    case "Low":
                        //        //thirdTabl6.Widths = new float[] { 40, 60 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(255, 0, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell9bb.Add(low);
                        //        break;
                        //    case "Moderate":
                        //        //thirdTabl6.Widths = new float[] { 60, 40 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(255, 255, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell9bb.Add(middal);
                        //        break;
                        //    case "High":
                        //        //thirdTabl6.Widths = new float[] { 80, 20 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(0, 64, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell9bb.Add(high);
                        //        break;
                        //    case "Very High":
                        //        //thirdTabl6.Widths = new float[] { 100, 0 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, new Color(255, 255, 255))));
                        //        //thirdcell6.BackgroundColor = new Color(0, 64, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell9bb.Add(veryhigh);
                        //        break;
                        //}
                        ////thirdTable.Widths = new float[] { 50, 50 };
                        ////Cell thirdcell = new Cell("Low");
                        ////thirdcell.BackgroundColor = new Color(255, 0, 0);

                        //thirdTabl9bb.AddCell(thirdcell9bb);



                        //iTextSharp.text.Table thirdTabl10bb = new iTextSharp.text.Table(1);
                        //Cell thirdcell10bb = new Cell();
                        //switch (ds2.Tables[0].Rows[10][1].ToString())
                        //{
                        //    case "Very Low":
                        //        //thirdTabl6.Widths = new float[] { 20, 80 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(255, 0, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell10bb.Add(verylow);
                        //        break;
                        //    case "Low":
                        //        //thirdTabl6.Widths = new float[] { 40, 60 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(255, 0, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell10bb.Add(low);
                        //        break;
                        //    case "Moderate":
                        //        //thirdTabl6.Widths = new float[] { 60, 40 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(255, 255, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell10bb.Add(middal);
                        //        break;
                        //    case "High":
                        //        //thirdTabl6.Widths = new float[] { 80, 20 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(0, 64, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell10bb.Add(high);
                        //        break;
                        //    case "Very High":
                        //        //thirdTabl6.Widths = new float[] { 100, 0 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, new Color(255, 255, 255))));
                        //        //thirdcell6.BackgroundColor = new Color(0, 64, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell10bb.Add(veryhigh);
                        //        break;
                        //}
                        ////thirdTable.Widths = new float[] { 50, 50 };
                        ////Cell thirdcell = new Cell("Low");
                        ////thirdcell.BackgroundColor = new Color(255, 0, 0);

                        //thirdTabl10bb.AddCell(thirdcell10bb);


                        //iTextSharp.text.Table thirdTabl11bb = new iTextSharp.text.Table(1);
                        //Cell thirdcell110bb = new Cell();
                        //switch (ds2.Tables[0].Rows[11][1].ToString())
                        //{
                        //    case "Very Low":
                        //        //thirdTabl6.Widths = new float[] { 20, 80 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(255, 0, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell110bb.Add(verylow);
                        //        break;
                        //    case "Low":
                        //        //thirdTabl6.Widths = new float[] { 40, 60 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(255, 0, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell110bb.Add(low);
                        //        break;
                        //    case "Moderate":
                        //        //thirdTabl6.Widths = new float[] { 60, 40 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(255, 255, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell110bb.Add(middal);
                        //        break;
                        //    case "High":
                        //        //thirdTabl6.Widths = new float[] { 80, 20 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(0, 64, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell110bb.Add(high);
                        //        break;
                        //    case "Very High":
                        //        //thirdTabl6.Widths = new float[] { 100, 0 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, new Color(255, 255, 255))));
                        //        //thirdcell6.BackgroundColor = new Color(0, 64, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell110bb.Add(veryhigh);
                        //        break;
                        //}
                        ////thirdTable.Widths = new float[] { 50, 50 };
                        ////Cell thirdcell = new Cell("Low");
                        ////thirdcell.BackgroundColor = new Color(255, 0, 0);

                        //thirdTabl11bb.AddCell(thirdcell110bb);


                        //iTextSharp.text.Table thirdTabl12bb = new iTextSharp.text.Table(1);
                        //Cell thirdcell112bb = new Cell();
                        //switch (ds2.Tables[0].Rows[12][1].ToString())
                        //{
                        //    case "Very Low":
                        //        //thirdTabl6.Widths = new float[] { 20, 80 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(255, 0, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell112bb.Add(verylow);
                        //        break;
                        //    case "Low":
                        //        //thirdTabl6.Widths = new float[] { 40, 60 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(255, 0, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell112bb.Add(low);
                        //        break;
                        //    case "Moderate":
                        //        //thirdTabl6.Widths = new float[] { 60, 40 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(255, 255, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell112bb.Add(middal);
                        //        break;
                        //    case "High":
                        //        //thirdTabl6.Widths = new float[] { 80, 20 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(0, 64, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell112bb.Add(high);
                        //        break;
                        //    case "Very High":
                        //        //thirdTabl6.Widths = new float[] { 100, 0 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, new Color(255, 255, 255))));
                        //        //thirdcell6.BackgroundColor = new Color(0, 64, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell112bb.Add(veryhigh);
                        //        break;
                        //}
                        ////thirdTable.Widths = new float[] { 50, 50 };
                        ////Cell thirdcell = new Cell("Low");
                        ////thirdcell.BackgroundColor = new Color(255, 0, 0);

                        //thirdTabl12bb.AddCell(thirdcell112bb);





                        //iTextSharp.text.Table thirdTabl13bb = new iTextSharp.text.Table(1);
                        //Cell thirdcell113bb = new Cell();
                        //switch (ds2.Tables[0].Rows[13][1].ToString())
                        //{
                        //    case "Very Low":
                        //        //thirdTabl6.Widths = new float[] { 20, 80 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(255, 0, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell113bb.Add(verylow);
                        //        break;
                        //    case "Low":
                        //        //thirdTabl6.Widths = new float[] { 40, 60 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(255, 0, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell113bb.Add(low);
                        //        break;
                        //    case "Moderate":
                        //        //thirdTabl6.Widths = new float[] { 60, 40 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(255, 255, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell113bb.Add(middal);
                        //        break;
                        //    case "High":
                        //        //thirdTabl6.Widths = new float[] { 80, 20 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(0, 64, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell113bb.Add(high);
                        //        break;
                        //    case "Very High":
                        //        //thirdTabl6.Widths = new float[] { 100, 0 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, new Color(255, 255, 255))));
                        //        //thirdcell6.BackgroundColor = new Color(0, 64, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell113bb.Add(veryhigh);
                        //        break;
                        //}


                        //thirdTable.Widths = new float[] { 50, 50 };
                        //Cell thirdcell = new Cell("Low");
                        //thirdcell.BackgroundColor = new Color(255, 0, 0);

                        //thirdTabl13bb.AddCell(thirdcell113bb);


                        //iTextSharp.text.Table thirdTabl14bb = new iTextSharp.text.Table(1);
                        //Cell thirdcell114bb = new Cell();
                        //switch (ds2.Tables[0].Rows[14][1].ToString())
                        //{
                        //    case "Very Low":
                        //        //thirdTabl6.Widths = new float[] { 20, 80 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(255, 0, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell114bb.Add(verylow);
                        //        break;
                        //    case "Low":
                        //        //thirdTabl6.Widths = new float[] { 40, 60 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(255, 0, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell114bb.Add(low);
                        //        break;
                        //    case "Moderate":
                        //        //thirdTabl6.Widths = new float[] { 60, 40 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(255, 255, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell114bb.Add(middal);
                        //        break;
                        //    case "High":
                        //        //thirdTabl6.Widths = new float[] { 80, 20 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(0, 64, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell114bb.Add(high);
                        //        break;
                        //    case "Very High":
                        //        //thirdTabl6.Widths = new float[] { 100, 0 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, new Color(255, 255, 255))));
                        //        //thirdcell6.BackgroundColor = new Color(0, 64, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell114bb.Add(veryhigh);
                        //        break;
                        //}
                        ////thirdTable.Widths = new float[] { 50, 50 };
                        ////Cell thirdcell = new Cell("Low");
                        ////thirdcell.BackgroundColor = new Color(255, 0, 0);

                        //thirdTabl14bb.AddCell(thirdcell114bb);


                        //iTextSharp.text.Table thirdTabl15bb = new iTextSharp.text.Table(1);
                        //Cell thirdcell115bb = new Cell();
                        //switch (ds2.Tables[0].Rows[15][1].ToString())
                        //{
                        //    case "Very Low":
                        //        //thirdTabl6.Widths = new float[] { 20, 80 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(255, 0, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell115bb.Add(verylow);
                        //        break;
                        //    case "Low":
                        //        //thirdTabl6.Widths = new float[] { 40, 60 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(255, 0, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell115bb.Add(low);
                        //        break;
                        //    case "Moderate":
                        //        //thirdTabl6.Widths = new float[] { 60, 40 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(255, 255, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell115bb.Add(middal);
                        //        break;
                        //    case "High":
                        //        //thirdTabl6.Widths = new float[] { 80, 20 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9)));
                        //        //thirdcell6.BackgroundColor = new Color(0, 64, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell115bb.Add(high);
                        //        break;
                        //    case "Very High":
                        //        //thirdTabl6.Widths = new float[] { 100, 0 };
                        //        //thirdcell6.Add(new Chunk("\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, new Color(255, 255, 255))));
                        //        //thirdcell6.BackgroundColor = new Color(0, 64, 0);
                        //        //thirdcell6.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        //        thirdcell115bb.Add(veryhigh);
                        //        break;
                        //}
                        ////thirdTable.Widths = new float[] { 50, 50 };
                        ////Cell thirdcell = new Cell("Low");
                        ////thirdcell.BackgroundColor = new Color(255, 0, 0);

                        //thirdTabl15bb.AddCell(thirdcell115bb);




                        ////////////////////////////////////////////////////////     end barchart 3/////////////////////////////

                        //iTextSharp.text.Table barchartbb = new iTextSharp.text.Table(1);
                        //barchartbb.BackgroundColor = new Color(45, 136, 204);

                        //Cell barchartcell1bb = new Cell();

                        //barchartcell1bb.Add(thirdTablebb);
                        //barchartbb.AddCell(barchartcell1bb);
                        //Cell bbb = new Cell("\n");
                        //bbb.BorderColor = new Color(255, 255, 255);
                        //barchartbb.AddCell(bbb);





                        //Cell barchartcell22bb = new Cell();
                        //barchartcell22bb.Add(thirdTabl1bb);
                        //barchartbb.AddCell(barchartcell22bb);
                        //Cell b11bb = new Cell("\n");
                        //b11bb.BorderColor = new Color(255, 255, 255);
                        //barchartbb.AddCell(b11bb);





                        //Cell barchartcell2bb = new Cell();
                        //barchartcell2bb.Add(thirdTabl2bb);
                        //barchartbb.AddCell(barchartcell2bb);
                        //Cell b1bb = new Cell("\n");
                        //b1bb.BorderColor = new Color(255, 255, 255);
                        //barchartbb.AddCell(b1bb);

                        //Cell barchartcell3bb = new Cell();
                        //barchartcell3bb.Add(thirdTabl3bb);
                        //barchartbb.AddCell(barchartcell3bb);
                        //Cell b2bb = new Cell("\n");
                        //b2bb.BorderColor = new Color(255, 255, 255);
                        //barchartbb.AddCell(b2bb);

                        //Cell barchartcell4bb = new Cell();
                        //barchartcell4bb.Add(thirdTabl4bb);
                        //barchartbb.AddCell(barchartcell4bb);
                        //Cell b3bb = new Cell("\n");
                        //b3bb.BorderColor = new Color(255, 255, 255);
                        //barchartbb.AddCell(b3bb);

                        //Cell barchartcell5bb = new Cell();
                        //barchartcell5bb.Add(thirdTabl5bb);
                        //barchartbb.AddCell(barchartcell5bb);
                        //Cell b4bb = new Cell("\n");
                        //b4bb.BorderColor = new Color(255, 255, 255);
                        //barchartbb.AddCell(b4bb);

                        //Cell barchartcell6bb = new Cell();
                        //barchartcell6bb.Add(thirdTabl6bb);
                        //barchartbb.AddCell(barchartcell6bb);
                        //Cell b5bb = new Cell("\n");
                        //b5bb.BorderColor = new Color(255, 255, 255);
                        //barchartbb.AddCell(b5bb);


                        //Cell barchartcell7bb = new Cell();
                        //barchartcell7bb.Add(thirdTabl7bb);
                        //barchartbb.AddCell(barchartcell7bb);
                        //Cell b6bb = new Cell("\n");
                        //b6bb.BorderColor = new Color(255, 255, 255);
                        //barchartbb.AddCell(b6bb);

                        //Cell barchartcell8bb = new Cell();
                        //barchartcell8bb.Add(thirdTabl8bb);
                        //barchartbb.AddCell(barchartcell8bb);
                        //Cell b7bb = new Cell("\n");
                        //b7bb.BorderColor = new Color(255, 255, 255);
                        //barchartbb.AddCell(b7bb);



                        //Cell barchartcell9bb = new Cell();
                        //barchartcell9bb.Add(thirdTabl9bb);
                        //barchartbb.AddCell(barchartcell9bb);
                        //Cell b8bb = new Cell("\n");
                        //b8bb.BorderColor = new Color(255, 255, 255);
                        //barchartbb.AddCell(b8bb);


                        //Cell barchartcell10bb = new Cell();
                        //barchartcell10bb.Add(thirdTabl10bb);
                        //barchartbb.AddCell(barchartcell10bb);
                        //Cell b9bb = new Cell("\n");
                        //b9bb.BorderColor = new Color(255, 255, 255);
                        //barchartbb.AddCell(b9bb);


                        //Cell barchartcell11bb = new Cell();
                        //barchartcell11bb.Add(thirdTabl11bb);
                        //barchartbb.AddCell(barchartcell11bb);
                        //Cell b10bb = new Cell("\n");
                        //b10bb.BorderColor = new Color(255, 255, 255);
                        //barchartbb.AddCell(b10bb);


                        //Cell barchartcell12bb = new Cell();
                        //barchartcell12bb.Add(thirdTabl12bb);
                        //barchartbb.AddCell(barchartcell12bb);
                        //Cell b11bbb = new Cell("\n");
                        //b11bbb.BorderColor = new Color(255, 255, 255);
                        //barchartbb.AddCell(b11bbb);

                        //Cell barchartcell13bb = new Cell();
                        //barchartcell13bb.Add(thirdTabl13bb);
                        //barchartbb.AddCell(barchartcell13bb);
                        //Cell b12bbb = new Cell("\n");
                        //b12bbb.BorderColor = new Color(255, 255, 255);
                        //barchartbb.AddCell(b12bbb);

                        //Cell barchartcell14bb = new Cell();
                        //barchartcell14bb.Add(thirdTabl14bb);
                        //barchartbb.AddCell(barchartcell14bb);
                        //Cell b13bbb = new Cell("\n");
                        //b13bbb.BorderColor = new Color(255, 255, 255);
                        //barchartbb.AddCell(b13bbb);


                        //Cell barchartcell15bb = new Cell();
                        //barchartcell15bb.Add(thirdTabl15bb);
                        //barchartbb.AddCell(barchartcell15bb);
                        //Cell b14bbb = new Cell("\n");
                        //b14bbb.BorderColor = new Color(255, 255, 255);
                        //barchartbb.AddCell(b14bbb);


                        //barchartbb.DefaultVerticalAlignment = iTextSharp .text.Element.ALIGN_TOP;


                        //ccell3.Add(barchartbb);
                        //ccell3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_CENTER;
                        ////ccell3.VerticalAlignment = iTextSharp .text.Element.ALIGN_MIDDLE;
                        ////ccell3.BorderColor = new Color(192, 192, 192);
                        ////ccell3.Border = 0;
                        //ccell3.BackgroundColor = new Color(45, 136, 204);
                        //PDTopTableee7.SetWidths(width);
                        //PDTopTableee7.AddCell(ccell3);

                        # endregion

                        //////////////////////////////////////////////////////////pppppppppppppppppppppppppppppppppppppppppphhhhhhhhhhhhhhhhhhhhhhhhhhuuuuuuuuuuuuuuuuuuuuuuu

                        /////////////////// Created By Dhananjay on January 2019///////////////////////
                        //////////////////////////////////////////////////////SUGGESTED OCCUPATIONAL CATEGORIES ////////////////////////////////
                        //doc.NewPage();
                        //doc.Add(dheyalogo);

                        //iTextSharp.text.Image jpeg5005000 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/suggested_career.png"));
                        ////jpeg.ScalePercent(35f);
                        //jpeg5005000.ScaleToFit(600f, 550f);
                        //jpeg5005000.SetAbsolutePosition(0, 760);
                        //// jpeg.SpacingAfter = -50f;
                        //doc.Add(jpeg5005000);

                        //iTextSharp.text.Table add5005 = new iTextSharp.text.Table(1);
                        //add5005.Alignment = 0;
                        //add5005.Width = 100;
                        //add5005.DefaultCellBorder = 0;
                        //add5005.Border = 0;

                        //Cell addd5005_head = new Cell();
                        //addd5005_head.Add(new Paragraph("Suggested Occupational Categories", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                        //addd5005_head.Width = 100;
                        //addd5005_head.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        //add5005.AddCell(addd5005_head);

                        //Cell addd5005 = new Cell();
                        //addd5005.Add(new Paragraph("\n\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 08, Font.BOLD)));
                        //addd5005.Add(new Paragraph("The world of work is divided into economic sectors; further economic sectors are divided into industries. Industries are run by people who perform their role in order to earn their living. These roles have certain similarities in their demands towards abilities, education, knowledge, behavior and other performance expectation. With our research we have clubbed careers that have more or less similar demands into categories. For example a product designer , a performing artist and a cartoonist would all fall into “CREATIVE” category of careers.", FontFactory.GetFont(FontFactory.HELVETICA, 08, Font.BOLD)));
                        //addd5005.Width = 100;
                        //addd5005.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        //add5005.AddCell(addd5005);

                        //doc.Add(add5005);

                        //#region CAREERS BY (RAPD/PERSONALITY)

                        //iTextSharp.text.Table PDTopTable2000_RAPD = new iTextSharp.text.Table(1);
                        //PDTopTable2000_RAPD.Alignment = 0;
                        //PDTopTable2000_RAPD.Width = 100;
                        //PDTopTable2000_RAPD.DefaultCellBorder = 0;
                        //PDTopTable2000_RAPD.Border = 0;

                        //Cell PDTopCell2000_RAPD = new Cell();
                        //PDTopCell2000_RAPD.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                        //PDTopCell2000_RAPD.Add(new Paragraph("CAREERS BY PERSONALITY.", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                        //PDTopCell2000_RAPD.Width = 100;
                        //PDTopCell2000_RAPD.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        //PDTopTable2000_RAPD.AddCell(PDTopCell2000_RAPD);

                        //doc.Add(PDTopTable2000_RAPD);

                        ////////////////// Invove Data from Database /////////////////////////////////////////
                        ////Add_candidate_career_By_RAPD();

                        //string sql_qry2 = "sp_career_by_RAPD_Ability_Interest";
                        //int status2 = 2; // Get Candidate Career By RAPD
                        //DataSet ds_candidate_career_By_RAPD = clsdal.ExecDataSet(sql_qry2, status2, c_id);

                        //string careers_By_RAPD = "";
                        //if (ds_candidate_career_By_RAPD.Tables[0].Rows.Count == 0)
                        //{
                        //    careers_By_RAPD = "0";
                        //}
                        //else
                        //{
                        //    for (int i = 0; i < ds_candidate_career_By_RAPD.Tables[0].Rows.Count; i++)
                        //    {
                        //        if (i == 0)
                        //        {
                        //            careers_By_RAPD = ds_candidate_career_By_RAPD.Tables[0].Rows[i][0].ToString();
                        //        }
                        //        else
                        //        {
                        //            careers_By_RAPD = careers_By_RAPD + "," + ds_candidate_career_By_RAPD.Tables[0].Rows[i][0].ToString();
                        //        }
                        //    }
                        //}


                        //strcmd = "SELECT  ca_id, basic_info6, Occupational_category, basic_info1 FROM dbo.tbl_career_master WHERE (ca_id IN(" + careers_By_RAPD + "))ORDER BY basic_info6";
                        ////strcmd = "SELECT  ca_id, basic_info6, Occupational_category, basic_info1 FROM dbo.tbl_career_master WHERE (ca_id IN(SELECT  ca_id  FROM dbo.tbl_candidate_career_by_RAPD WHERE (c_id = '" + c_id.ToString() + "')))ORDER BY basic_info6";
                        //DataSet smry_ds_catagory_combine_RAPD = clsdal.ExecDataSet(strcmd);
                        //int career_smry_count_RAPD = smry_ds_catagory_combine_RAPD.Tables[0].Rows.Count;
                        //strcmd = "SELECT Occupational_category, COUNT(Occupational_category) AS CategoryCount, CONVERT(decimal(18, 2), CONVERT(decimal, COUNT(Occupational_category)) / " + career_smry_count_RAPD + ") * 100 AS Compatibility FROM dbo.tbl_career_master WHERE(ca_id IN (" + careers_By_RAPD + ")) and Occupational_category !='Independence' GROUP BY Occupational_category ORDER BY CategoryCount DESC";
                        //DataSet smry_dsOccupationalCount_RAPD = clsdal.ExecDataSet(strcmd);

                        //int no_of_catagary_RAPD = smry_dsOccupationalCount_RAPD.Tables[0].Rows.Count;
                        ////////////////// Invove Data from Database /////////////////////////////////////////

                        //iTextSharp.text.Table maintableb100_RAPD = new iTextSharp.text.Table(1);
                        //maintableb100_RAPD.Width = 100f;
                        //maintableb100_RAPD.DefaultCellBorder = 0;
                        //maintableb100_RAPD.Border = 0;

                        //Cell maintabl11_RAPD = new Cell();
                        ////maintabl11.Border = 10;
                        //Cell maintabl22_RAPD = new Cell();
                        ////maintabl22.Border = 10;
                        //Cell maintabl33_RAPD = new Cell();
                        ////maintabl33.Border = 10;

                        ////////////////////////////////////////////////////////////////////////////////////////////
                        ////int no_of_catagary_RAPD = smry_dsOccupationalCount_RAPD.Tables[0].Rows.Count;
                        ////int no_of_catagary1 = 3;


                        ////////////////////////////////////////////////////////////////////////////////////////////

                        //if (no_of_catagary_RAPD >= 3)
                        //{

                        //    ////////////////LAYER ONE//////////////
                        //    iTextSharp.text.Table TABLE111 = new iTextSharp.text.Table(5);
                        //    TABLE111.Alignment = 0;
                        //    TABLE111.Width = 100;
                        //    int[] widths1 = new int[] { 32, 02, 32, 02, 32 };
                        //    TABLE111.SetWidths(widths1);
                        //    TABLE111.DefaultCellBorder = 0;
                        //    TABLE111.Border = 0;

                        //    String catagary_dis13 = smry_dsOccupationalCount_RAPD.Tables[0].Rows[0][0].ToString();
                        //    String catagary_dis23 = smry_dsOccupationalCount_RAPD.Tables[0].Rows[1][0].ToString();
                        //    String catagary_dis33 = smry_dsOccupationalCount_RAPD.Tables[0].Rows[2][0].ToString();

                        //    Cell Cell111 = new Cell();
                        //    iTextSharp.text.Image jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/career_blank.png"));
                        //    if (catagary_dis13 == "Analysis") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/analysis.png")); jpeg955.ScalePercent(35f); }
                        //    else if (catagary_dis13 == "Creativity") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/creativity.png")); }
                        //    else if (catagary_dis13 == "Equipment") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/equipment.png")); }
                        //    else if (catagary_dis13 == "Financial") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/financial.png")); }
                        //    else if (catagary_dis13 == "Observation & Analysis") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/observation.png")); }
                        //    else if (catagary_dis13 == "People") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/people.png")); }
                        //    else if (catagary_dis13 == "Process") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/process.png")); }
                        //    else if (catagary_dis13 == "Research") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/research.png")); }
                        //    else if (catagary_dis13 == "Results") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/result.png")); }
                        //    else if (catagary_dis13 == "Service") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/service.png")); } //
                        //    else if (catagary_dis13 == "Independence") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/independence.png")); }
                        //    jpeg955.ScaleToFit(150f, 332f);
                        //    //Cell111.Width = 500f;
                        //    Cell111.Add(jpeg955);
                        //    Cell111.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    Cell111.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        //    TABLE111.AddCell(Cell111);

                        //    Cell CellSpace222 = new Cell();
                        //    CellSpace222.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace222.Width = 10;
                        //    CellSpace222.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE111.AddCell(CellSpace222);

                        //    Cell Cell222 = new Cell();
                        //    iTextSharp.text.Image jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/career_blank.png"));
                        //    if (catagary_dis23 == "Analysis") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/analysis.png")); jpeg900555.ScalePercent(35f); }
                        //    else if (catagary_dis23 == "Creativity") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/creativity.png")); }
                        //    else if (catagary_dis23 == "Equipment") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/equipment.png")); }
                        //    else if (catagary_dis23 == "Financial") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/financial.png")); }
                        //    else if (catagary_dis23 == "Observation & Analysis") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/observation.png")); }
                        //    else if (catagary_dis23 == "People") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/people.png")); }
                        //    else if (catagary_dis23 == "Process") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/process.png")); }
                        //    else if (catagary_dis23 == "Research") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/research.png")); }
                        //    else if (catagary_dis23 == "Results") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/result.png")); }
                        //    else if (catagary_dis23 == "Service") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/service.png")); }
                        //    else if (catagary_dis23 == "Independence") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/independence.png")); }
                        //    jpeg900555.ScaleToFit(150f, 332f);
                        //    //Cell111.Width = 500f;
                        //    Cell222.Add(jpeg900555);
                        //    Cell222.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE111.AddCell(Cell222);

                        //    Cell CellSpace333 = new Cell();
                        //    CellSpace333.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace333.Width = 10;
                        //    CellSpace333.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE111.AddCell(CellSpace333);

                        //    Cell Cell333 = new Cell();
                        //    iTextSharp.text.Image jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/career_blank.png"));
                        //    if (catagary_dis33 == "Analysis") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/analysis.png")); }
                        //    else if (catagary_dis33 == "Creativity") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/creativity.png")); jpeg90055.ScalePercent(35f); }
                        //    else if (catagary_dis33 == "Equipment") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/equipment.png")); }
                        //    else if (catagary_dis33 == "Financial") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/financial.png")); }
                        //    else if (catagary_dis33 == "Observation & Analysis") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/observation.png")); }
                        //    else if (catagary_dis33 == "People") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/people.png")); }
                        //    else if (catagary_dis33 == "Process") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/process.png")); }
                        //    else if (catagary_dis33 == "Research") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/research.png")); }
                        //    else if (catagary_dis33 == "Results") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/result.png")); }
                        //    else if (catagary_dis33 == "Service") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/service.png")); }
                        //    else if (catagary_dis33 == "Independence") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/independence.png")); }
                        //    jpeg90055.ScaleToFit(150f, 332f);
                        //    //Cell111.Width = 500f;
                        //    Cell333.Add(jpeg90055);
                        //    Cell333.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE111.AddCell(Cell333);

                        //    maintabl11_RAPD.Add(TABLE111);
                        //    maintableb100_RAPD.AddCell(maintabl11_RAPD);

                        //    ////////////////////LAYER TWO//////////////////////
                        //    iTextSharp.text.Table TABLE222 = new iTextSharp.text.Table(5);
                        //    TABLE222.Alignment = 0;
                        //    TABLE222.Width = 100;
                        //    int[] widths2 = new int[] { 32, 02, 32, 02, 32 };
                        //    TABLE222.SetWidths(widths2);
                        //    TABLE222.DefaultCellBorder = 0;
                        //    TABLE222.Border = 0;

                        //    Cell Cell444 = new Cell();
                        //    Cell444.Add(new Paragraph(smry_dsOccupationalCount_RAPD.Tables[0].Rows[0][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                        //    //Cell444.Width = 200;
                        //    Cell444.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    Cell444.VerticalAlignment = iTextSharp.text.Element.ALIGN_TOP;
                        //    TABLE222.AddCell(Cell444);

                        //    Cell CellSpace444 = new Cell();
                        //    CellSpace444.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace444.Width = 10;
                        //    CellSpace444.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE222.AddCell(CellSpace444);

                        //    Cell Cell555 = new Cell();
                        //    Cell555.Add(new Paragraph(smry_dsOccupationalCount_RAPD.Tables[0].Rows[1][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                        //    //Cell555.Width = 200;
                        //    Cell555.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE222.AddCell(Cell555);

                        //    Cell CellSpace555 = new Cell();
                        //    CellSpace555.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace555.Width = 10;
                        //    CellSpace555.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE222.AddCell(CellSpace555);

                        //    Cell Cell666 = new Cell();
                        //    Cell666.Add(new Paragraph(smry_dsOccupationalCount_RAPD.Tables[0].Rows[2][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                        //    //Cell666.Width = 200;
                        //    Cell666.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE222.AddCell(Cell666);


                        //    maintabl22_RAPD.Add(TABLE222);
                        //    maintableb100_RAPD.AddCell(maintabl22_RAPD);
                        //    ////////////////////LAYER THREE//////////////////////
                        //    iTextSharp.text.Table TABLE333 = new iTextSharp.text.Table(5);
                        //    TABLE333.Alignment = 0;
                        //    TABLE333.Width = 100;
                        //    int[] widths3 = new int[] { 32, 02, 32, 02, 32 };
                        //    TABLE333.SetWidths(widths3);
                        //    TABLE333.DefaultCellBorder = 0;
                        //    TABLE333.Border = 0;



                        //    DataSet catdisss13 = new DataSet();
                        //    String catdissss13 = "select * from career_cat_dis where careercat_name = '" + catagary_dis13 + "' ";
                        //    catdisss13 = clsdal.ExecDataSet(catdissss13);
                        //    String catdiscription13 = catdisss13.Tables[0].Rows[0].ItemArray[3].ToString();

                        //    Cell Cell777 = new Cell();
                        //    Cell777.Add(new Paragraph(catdiscription13, FontFactory.GetFont(FontFactory.HELVETICA, 08, Font.BOLD)));
                        //    //Cell777.Width = 20f;

                        //    Cell777.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE333.AddCell(Cell777);


                        //    Cell CellSpace777 = new Cell();
                        //    CellSpace777.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace777.Width = 10;
                        //    CellSpace777.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE333.AddCell(CellSpace777);

                        //    DataSet catdisss23 = new DataSet();
                        //    String catdissss23 = "select * from career_cat_dis where careercat_name = '" + catagary_dis23 + "' ";
                        //    catdisss23 = clsdal.ExecDataSet(catdissss23);
                        //    String catdiscription23 = catdisss23.Tables[0].Rows[0].ItemArray[3].ToString();

                        //    Cell Cell888 = new Cell();
                        //    Cell888.Add(new Paragraph(catdiscription23, FontFactory.GetFont(FontFactory.HELVETICA, 08, Font.BOLD)));
                        //    //Cell888.Width = 20f;
                        //    Cell888.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE333.AddCell(Cell888);

                        //    Cell CellSpace888 = new Cell();
                        //    CellSpace888.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace888.Width = 10;
                        //    CellSpace888.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE333.AddCell(CellSpace888);

                        //    DataSet catdisss33 = new DataSet();
                        //    String catdissss33 = "select * from career_cat_dis where careercat_name = '" + catagary_dis33 + "' ";
                        //    catdisss33 = clsdal.ExecDataSet(catdissss33);
                        //    String catdiscription33 = catdisss33.Tables[0].Rows[0].ItemArray[3].ToString();

                        //    Cell Cell999 = new Cell();
                        //    Cell999.Add(new Paragraph(catdiscription33, FontFactory.GetFont(FontFactory.HELVETICA, 08, Font.BOLD)));
                        //    //Cell999.Width = 20f;
                        //    Cell999.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE333.AddCell(Cell999);

                        //    maintabl33_RAPD.Add(TABLE333);
                        //    maintableb100_RAPD.AddCell(maintabl33_RAPD);
                        //}

                        //if (no_of_catagary_RAPD == 2)
                        //{
                        //    int[] widths = new int[] { 49, 02, 49 };
                        //    ////////////////LAYER ONE//////////////
                        //    iTextSharp.text.Table TABLE111 = new iTextSharp.text.Table(3);
                        //    TABLE111.Alignment = 0;
                        //    TABLE111.Width = 100;
                        //    TABLE111.SetWidths(widths);
                        //    TABLE111.DefaultCellBorder = 0;
                        //    TABLE111.Border = 0;

                        //    String catagary_dis12 = smry_dsOccupationalCount_RAPD.Tables[0].Rows[0][0].ToString();
                        //    String catagary_dis22 = smry_dsOccupationalCount_RAPD.Tables[0].Rows[1][0].ToString();

                        //    Cell Cell111 = new Cell();
                        //    iTextSharp.text.Image jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/career_blank.png"));
                        //    if (catagary_dis12 == "Analysis") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/analysis.png")); }
                        //    else if (catagary_dis12 == "Creativity") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/creativity.png")); jpeg955.ScalePercent(35f); }
                        //    else if (catagary_dis12 == "Equipment") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/equipment.png")); }
                        //    else if (catagary_dis12 == "Financial") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/financial.png")); }
                        //    else if (catagary_dis12 == "Observation & Analysis") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/observation.png")); }
                        //    else if (catagary_dis12 == "People") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/people.png")); }
                        //    else if (catagary_dis12 == "Process") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/process.png")); }
                        //    else if (catagary_dis12 == "Research") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/research.png")); }
                        //    else if (catagary_dis12 == "Results") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/result.png")); }
                        //    else if (catagary_dis12 == "Service") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/service.png")); }
                        //    else if (catagary_dis12 == "Independence") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/independence.png")); }
                        //    jpeg955.ScaleToFit(150f, 332f);
                        //    //Cell111.Width = 500f;
                        //    Cell111.Add(jpeg955);
                        //    Cell111.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    Cell111.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        //    TABLE111.AddCell(Cell111);

                        //    Cell CellSpace222 = new Cell();
                        //    CellSpace222.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace222.Width = 10;
                        //    CellSpace222.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE111.AddCell(CellSpace222);

                        //    Cell Cell222 = new Cell();
                        //    iTextSharp.text.Image jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/career_blank.png"));
                        //    if (catagary_dis22 == "Analysis") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/analysis.png")); }
                        //    else if (catagary_dis22 == "Creativity") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/creativity.png")); jpeg900555.ScalePercent(35f); }
                        //    else if (catagary_dis22 == "Equipment") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/equipment.png")); }
                        //    else if (catagary_dis22 == "Financial") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/financial.png")); }
                        //    else if (catagary_dis22 == "Observation & Analysis") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/observation.png")); }
                        //    else if (catagary_dis22 == "People") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/people.png")); }
                        //    else if (catagary_dis22 == "Process") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/research.png")); }
                        //    else if (catagary_dis22 == "Research") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/research.png")); }
                        //    else if (catagary_dis22 == "Results") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/result.png")); }
                        //    else if (catagary_dis22 == "Service") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/service.png")); }
                        //    else if (catagary_dis22 == "Independence") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/independence.png")); }
                        //    jpeg900555.ScaleToFit(150f, 332f);


                        //    //Cell222.Width = 500f;
                        //    Cell222.Add(jpeg900555);
                        //    Cell222.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    //Cell222.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    //Cell222.Add(new Paragraph("SERVICE", pop8_bold_dark));
                        //    //Cell222.BackgroundColor = new Color(255, 255, 0);
                        //    TABLE111.AddCell(Cell222);

                        //    maintabl11_RAPD.Add(TABLE111);
                        //    maintableb100_RAPD.AddCell(maintabl11_RAPD);

                        //    ////////////////////LAYER TWO//////////////////////
                        //    iTextSharp.text.Table TABLE222 = new iTextSharp.text.Table(3);
                        //    TABLE222.Alignment = 0;
                        //    TABLE222.Width = 100;
                        //    TABLE222.SetWidths(widths);
                        //    TABLE222.DefaultCellBorder = 0;
                        //    TABLE222.Border = 0;

                        //    String catagary111 = smry_dsOccupationalCount_RAPD.Tables[0].Rows[0][0].ToString();

                        //    Cell Cell444 = new Cell();
                        //    Cell444.Add(new Paragraph(smry_dsOccupationalCount_RAPD.Tables[0].Rows[0][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                        //    //Cell444.Width = 200;
                        //    Cell444.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    Cell444.VerticalAlignment = iTextSharp.text.Element.ALIGN_TOP;
                        //    TABLE222.AddCell(Cell444);

                        //    Cell CellSpace444 = new Cell();
                        //    CellSpace444.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace444.Width = 10;
                        //    CellSpace444.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE222.AddCell(CellSpace444);

                        //    Cell Cell555 = new Cell();
                        //    Cell555.Add(new Paragraph(smry_dsOccupationalCount_RAPD.Tables[0].Rows[1][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                        //    //Cell555.Width = 200;
                        //    Cell555.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE222.AddCell(Cell555);

                        //    maintabl22_RAPD.Add(TABLE222);
                        //    maintableb100_RAPD.AddCell(maintabl22_RAPD);
                        //    ////////////////////LAYER THREE//////////////////////
                        //    iTextSharp.text.Table TABLE333 = new iTextSharp.text.Table(3);
                        //    TABLE333.Alignment = 0;
                        //    TABLE333.Width = 100;
                        //    TABLE333.SetWidths(widths);
                        //    TABLE333.DefaultCellBorder = 0;
                        //    TABLE333.Border = 0;

                        //    DataSet catdisss12 = new DataSet();
                        //    String catdissss12 = "select * from career_cat_dis where careercat_name = '" + catagary_dis12 + "' ";
                        //    catdisss12 = clsdal.ExecDataSet(catdissss12);
                        //    String catdiscription12 = catdisss12.Tables[0].Rows[0].ItemArray[3].ToString();

                        //    Cell Cell777 = new Cell();
                        //    //Cell777.Add(new Paragraph(catdiscription12, FontFactory.GetFont(FontFactory.HELVETICA, 12, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //Cell777.BorderWidth = 10;
                        //    //Cell777.Border = 10;
                        //    //Cell777.SetWidth("10f");
                        //    ////Cell777.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        //    Cell777.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    //Cell777.BorderWidthRight = 1f;
                        //    //TABLE333.AddCell(Cell777);

                        //    Paragraph pp777 = new Paragraph();
                        //    Phrase ph777 = new Phrase(18, new Chunk("\n" + catdiscription12, FontFactory.GetFont(FontFactory.HELVETICA, 08, Font.BOLD)));
                        //    pp777.Add(ph777);
                        //    //pp7.Add(limage);
                        //    Cell777.Add(pp777);
                        //    TABLE333.AddCell(Cell777);

                        //    Cell CellSpace777 = new Cell();
                        //    CellSpace777.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace777.Width = 10;
                        //    CellSpace777.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE333.AddCell(CellSpace777);

                        //    DataSet catdisss22 = new DataSet();
                        //    String catdissss22 = "select * from career_cat_dis where careercat_name = '" + catagary_dis22 + "' ";
                        //    catdisss22 = clsdal.ExecDataSet(catdissss22);
                        //    String catdiscription22 = catdisss22.Tables[0].Rows[0].ItemArray[3].ToString();

                        //    Cell Cell888 = new Cell();
                        //    //Cell888.Add(new Paragraph(catdiscription22, FontFactory.GetFont(FontFactory.HELVETICA, 10, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //Cell777.SetWidth("200f");
                        //    ////Cell888.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        //    Cell888.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    //Cell888.BorderWidthLeft = 1f;
                        //    //TABLE333.AddCell(Cell888);

                        //    Paragraph pp888 = new Paragraph();
                        //    Phrase ph888 = new Phrase(18, new Chunk("\n\t\t\t    " + catdiscription22, FontFactory.GetFont(FontFactory.HELVETICA, 08, Font.BOLD)));
                        //    pp888.Add(ph888);
                        //    //pp7.Add(limage);
                        //    Cell888.Add(pp888);
                        //    TABLE333.AddCell(Cell888);

                        //    maintabl33_RAPD.Add(TABLE333);
                        //    maintableb100_RAPD.AddCell(maintabl33_RAPD);
                        //}

                        //if (no_of_catagary_RAPD == 1)
                        //{

                        //    ////////////////LAYER ONE//////////////
                        //    iTextSharp.text.Table TABLE111 = new iTextSharp.text.Table(1);
                        //    TABLE111.Alignment = 0;
                        //    TABLE111.Width = 100;
                        //    TABLE111.DefaultCellBorder = 0;
                        //    TABLE111.Border = 0;

                        //    String catagary_dis11 = smry_dsOccupationalCount_RAPD.Tables[0].Rows[0][0].ToString();

                        //    Cell Cell111 = new Cell();
                        //    iTextSharp.text.Image jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/career_blank.png"));
                        //    if (catagary_dis11 == "Analysis") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/analysis.png")); }
                        //    else if (catagary_dis11 == "Creativity") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/creativity.png")); jpeg955.ScalePercent(35f); }
                        //    else if (catagary_dis11 == "Equipment") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/equipment.png")); }
                        //    else if (catagary_dis11 == "Financial") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/financial.png")); }
                        //    else if (catagary_dis11 == "Observation & Analysis") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/observation.png")); }
                        //    else if (catagary_dis11 == "People") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/people.png")); }
                        //    else if (catagary_dis11 == "Process") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/research.png")); }
                        //    else if (catagary_dis11 == "Research") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/research.png")); }
                        //    else if (catagary_dis11 == "Results") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/result.png")); }
                        //    else if (catagary_dis11 == "Service") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/service.png")); }
                        //    else if (catagary_dis11 == "Independence") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/independence.png")); }
                        //    jpeg955.ScaleToFit(150f, 332f);
                        //    Cell111.Width = 20f;
                        //    Cell111.Add(jpeg955);
                        //    Cell111.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    Cell111.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        //    TABLE111.AddCell(Cell111);

                        //    maintabl11_RAPD.Add(TABLE111);
                        //    maintableb100_RAPD.AddCell(maintabl11_RAPD);

                        //    ////////////////////LAYER TWO//////////////////////
                        //    iTextSharp.text.Table TABLE222 = new iTextSharp.text.Table(1);
                        //    TABLE222.Alignment = 0;
                        //    TABLE222.Width = 100;
                        //    TABLE222.DefaultCellBorder = 0;
                        //    TABLE222.Border = 0;

                        //    Cell Cell444 = new Cell();
                        //    Cell444.Add(new Paragraph(smry_dsOccupationalCount_RAPD.Tables[0].Rows[0][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                        //    Cell444.Width = 20f;
                        //    Cell444.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    Cell444.VerticalAlignment = iTextSharp.text.Element.ALIGN_TOP;
                        //    TABLE222.AddCell(Cell444);

                        //    maintabl22_RAPD.Add(TABLE222);
                        //    maintableb100_RAPD.AddCell(maintabl22_RAPD);
                        //    ////////////////////LAYER THREE//////////////////////
                        //    iTextSharp.text.Table TABLE333 = new iTextSharp.text.Table(1);
                        //    TABLE333.Alignment = 0;
                        //    TABLE333.Width = 100;
                        //    TABLE333.DefaultCellBorder = 0;
                        //    TABLE333.Border = 0;

                        //    DataSet catdisss11 = new DataSet();
                        //    String catdissss11 = "select * from career_cat_dis where careercat_name = '" + catagary_dis11 + "' ";
                        //    catdisss11 = clsdal.ExecDataSet(catdissss11);
                        //    String catdiscription11 = catdisss11.Tables[0].Rows[0].ItemArray[3].ToString();

                        //    Cell Cell777 = new Cell();
                        //    Cell777.Add(new Paragraph(catdiscription11, FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        //    Cell777.Width = 20f;
                        //    Cell777.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE333.AddCell(Cell777);

                        //    maintabl33_RAPD.Add(TABLE333);
                        //    maintableb100_RAPD.AddCell(maintabl33_RAPD);
                        //}

                        //doc.Add(maintableb100_RAPD);

                        //#endregion CAREERS BY (RAPD/PERSONALITY)

                        //#region CAREERS BY ABILITY


                        ///////////////////////////////PARAGRAPH///////////////////////
                        //iTextSharp.text.Table PDTopTable2000_headline = new iTextSharp.text.Table(1);
                        //PDTopTable2000_headline.Alignment = 0;
                        //PDTopTable2000_headline.Width = 100;
                        //PDTopTable2000_headline.DefaultCellBorder = 0;
                        //PDTopTable2000_headline.Border = 0;

                        //Cell PDTopCell2000_headline = new Cell();
                        //PDTopCell2000_headline.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                        //PDTopCell2000_headline.Add(new Paragraph("CAREERS BY ABILITY", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                        //PDTopCell2000_headline.Width = 100;
                        //PDTopCell2000_headline.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        //PDTopTable2000_headline.AddCell(PDTopCell2000_headline);

                        //doc.Add(PDTopTable2000_headline);

                        ////////////////// Invove Data from Database /////////////////////////////////////////
                        ////Add_candidate_career_By_Ability();

                        //string sql_qry3 = "sp_career_by_RAPD_Ability_Interest";
                        //int status3 = 3; // Get Candidate Career By Ability
                        //DataSet ds_candidate_career_By_Ability = clsdal.ExecDataSet(sql_qry3, status3, c_id);

                        //string careers_By_Ability = "";

                        //if (ds_candidate_career_By_Ability.Tables[0].Rows.Count == 0)
                        //{
                        //    careers_By_Ability = "0";
                        //}
                        //else
                        //{
                        //    for (int i = 0; i < ds_candidate_career_By_Ability.Tables[0].Rows.Count; i++)
                        //    {
                        //        if (i == 0)
                        //        {
                        //            careers_By_Ability = ds_candidate_career_By_Ability.Tables[0].Rows[i][0].ToString();
                        //        }
                        //        else
                        //        {
                        //            careers_By_Ability = careers_By_Ability + "," + ds_candidate_career_By_Ability.Tables[0].Rows[i][0].ToString();
                        //        }
                        //    }
                        //}


                        //strcmd = "SELECT  ca_id, basic_info6, Occupational_category, basic_info1 FROM dbo.tbl_career_master WHERE (ca_id IN(" + careers_By_Ability + "))ORDER BY basic_info6";
                        ////strcmd = "SELECT  ca_id, basic_info6, Occupational_category, basic_info1 FROM dbo.tbl_career_master WHERE (ca_id IN(SELECT  ca_id  FROM dbo.tbl_candidate_career_by_Ability WHERE (c_id = '" + c_id.ToString() + "')))ORDER BY basic_info6";
                        //DataSet smry_ds_catagory_combine_Ability = clsdal.ExecDataSet(strcmd);
                        //int career_smry_count_Ability = smry_ds_catagory_combine_Ability.Tables[0].Rows.Count;
                        //strcmd = "SELECT Occupational_category, COUNT(Occupational_category) AS CategoryCount, CONVERT(decimal(18, 2), CONVERT(decimal, COUNT(Occupational_category)) / " + career_smry_count_Ability + ") * 100 AS Compatibility FROM dbo.tbl_career_master WHERE(ca_id IN (" + careers_By_Ability + ")) and Occupational_category !='Independence' GROUP BY Occupational_category ORDER BY CategoryCount DESC";
                        //DataSet smry_dsOccupationalCount_Ability = clsdal.ExecDataSet(strcmd);

                        //int no_of_catagary_Ability = smry_dsOccupationalCount_Ability.Tables[0].Rows.Count;
                        ////////////////// Invove Data from Database /////////////////////////////////////////

                        //iTextSharp.text.Table maintableb100_Ability = new iTextSharp.text.Table(1);
                        //maintableb100_Ability.Width = 100f;
                        //maintableb100_Ability.DefaultCellBorder = 0;
                        //maintableb100_Ability.Border = 0;

                        //Cell maintabl11_Ability = new Cell();
                        ////maintabl11.Border = 10;
                        //Cell maintabl22_Ability = new Cell();
                        ////maintabl22.Border = 10;
                        //Cell maintabl33_Ability = new Cell();
                        ////maintabl33.Border = 10;

                        ////////////////////////////////////////////////////////////////////////////////////////////
                        ////int no_of_catagary1 = smry_dsOccupationalCount.Tables[0].Rows.Count;
                        ////int no_of_catagary1 = smry_dsOccupationalCount_RAPD.Tables[0].Rows.Count;
                        ////int no_of_catagary1 = 3;


                        ////////////////////////////////////////////////////////////////////////////////////////////

                        //if (no_of_catagary_Ability >= 3)
                        //{

                        //    ////////////////LAYER ONE//////////////
                        //    iTextSharp.text.Table TABLE111 = new iTextSharp.text.Table(5);
                        //    TABLE111.Alignment = 0;
                        //    TABLE111.Width = 100;
                        //    int[] widths1 = new int[] { 32, 02, 32, 02, 32 };
                        //    TABLE111.SetWidths(widths1);
                        //    TABLE111.DefaultCellBorder = 0;
                        //    TABLE111.Border = 0;

                        //    String catagary_dis13 = smry_dsOccupationalCount_Ability.Tables[0].Rows[0][0].ToString();
                        //    String catagary_dis23 = smry_dsOccupationalCount_Ability.Tables[0].Rows[1][0].ToString();
                        //    String catagary_dis33 = smry_dsOccupationalCount_Ability.Tables[0].Rows[2][0].ToString();

                        //    Cell Cell111 = new Cell();
                        //    iTextSharp.text.Image jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/career_blank.png"));
                        //    if (catagary_dis13 == "Analysis") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/analysis.png")); jpeg955.ScalePercent(35f); }
                        //    else if (catagary_dis13 == "Creativity") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/creativity.png")); }
                        //    else if (catagary_dis13 == "Equipment") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/equipment.png")); }
                        //    else if (catagary_dis13 == "Financial") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/financial.png")); }
                        //    else if (catagary_dis13 == "Observation & Analysis") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/observation.png")); }
                        //    else if (catagary_dis13 == "People") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/people.png")); }
                        //    else if (catagary_dis13 == "Process") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/process.png")); }
                        //    else if (catagary_dis13 == "Research") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/research.png")); }
                        //    else if (catagary_dis13 == "Results") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/result.png")); }
                        //    else if (catagary_dis13 == "Service") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/service.png")); } //
                        //    else if (catagary_dis13 == "Independence") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/independence.png")); }
                        //    jpeg955.ScaleToFit(150f, 332f);
                        //    //Cell111.Width = 500f;
                        //    Cell111.Add(jpeg955);
                        //    Cell111.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    Cell111.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        //    TABLE111.AddCell(Cell111);

                        //    Cell CellSpace222 = new Cell();
                        //    CellSpace222.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace222.Width = 10;
                        //    CellSpace222.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE111.AddCell(CellSpace222);

                        //    Cell Cell222 = new Cell();
                        //    iTextSharp.text.Image jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/career_blank.png"));
                        //    if (catagary_dis23 == "Analysis") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/analysis.png")); jpeg900555.ScalePercent(35f); }
                        //    else if (catagary_dis23 == "Creativity") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/creativity.png")); }
                        //    else if (catagary_dis23 == "Equipment") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/equipment.png")); }
                        //    else if (catagary_dis23 == "Financial") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/financial.png")); }
                        //    else if (catagary_dis23 == "Observation & Analysis") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/observation.png")); }
                        //    else if (catagary_dis23 == "People") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/people.png")); }
                        //    else if (catagary_dis23 == "Process") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/process.png")); }
                        //    else if (catagary_dis23 == "Research") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/research.png")); }
                        //    else if (catagary_dis23 == "Results") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/result.png")); }
                        //    else if (catagary_dis23 == "Service") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/service.png")); }
                        //    else if (catagary_dis23 == "Independence") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/independence.png")); }
                        //    jpeg900555.ScaleToFit(150f, 332f);
                        //    //Cell111.Width = 500f;
                        //    Cell222.Add(jpeg900555);
                        //    Cell222.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE111.AddCell(Cell222);

                        //    Cell CellSpace333 = new Cell();
                        //    CellSpace333.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace333.Width = 10;
                        //    CellSpace333.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE111.AddCell(CellSpace333);

                        //    Cell Cell333 = new Cell();
                        //    iTextSharp.text.Image jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/career_blank.png"));
                        //    if (catagary_dis33 == "Analysis") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/analysis.png")); }
                        //    else if (catagary_dis33 == "Creativity") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/creativity.png")); jpeg90055.ScalePercent(35f); }
                        //    else if (catagary_dis33 == "Equipment") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/equipment.png")); }
                        //    else if (catagary_dis33 == "Financial") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/financial.png")); }
                        //    else if (catagary_dis33 == "Observation & Analysis") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/observation.png")); }
                        //    else if (catagary_dis33 == "People") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/people.png")); }
                        //    else if (catagary_dis33 == "Process") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/process.png")); }
                        //    else if (catagary_dis33 == "Research") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/research.png")); }
                        //    else if (catagary_dis33 == "Results") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/result.png")); }
                        //    else if (catagary_dis33 == "Service") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/service.png")); }
                        //    else if (catagary_dis33 == "Independence") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/independence.png")); }
                        //    jpeg90055.ScaleToFit(150f, 332f);
                        //    //Cell111.Width = 500f;
                        //    Cell333.Add(jpeg90055);
                        //    Cell333.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE111.AddCell(Cell333);

                        //    maintabl11_Ability.Add(TABLE111);
                        //    maintableb100_Ability.AddCell(maintabl11_Ability);

                        //    ////////////////////LAYER TWO//////////////////////
                        //    iTextSharp.text.Table TABLE222 = new iTextSharp.text.Table(5);
                        //    TABLE222.Alignment = 0;
                        //    TABLE222.Width = 100;
                        //    int[] widths2 = new int[] { 32, 02, 32, 02, 32 };
                        //    TABLE222.SetWidths(widths2);
                        //    TABLE222.DefaultCellBorder = 0;
                        //    TABLE222.Border = 0;

                        //    Cell Cell444 = new Cell();
                        //    Cell444.Add(new Paragraph(smry_dsOccupationalCount_Ability.Tables[0].Rows[0][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                        //    //Cell444.Width = 200;
                        //    Cell444.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    Cell444.VerticalAlignment = iTextSharp.text.Element.ALIGN_TOP;
                        //    TABLE222.AddCell(Cell444);

                        //    Cell CellSpace444 = new Cell();
                        //    CellSpace444.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace444.Width = 10;
                        //    CellSpace444.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE222.AddCell(CellSpace444);

                        //    Cell Cell555 = new Cell();
                        //    Cell555.Add(new Paragraph(smry_dsOccupationalCount_Ability.Tables[0].Rows[1][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                        //    //Cell555.Width = 200;
                        //    Cell555.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE222.AddCell(Cell555);

                        //    Cell CellSpace555 = new Cell();
                        //    CellSpace555.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace555.Width = 10;
                        //    CellSpace555.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE222.AddCell(CellSpace555);

                        //    Cell Cell666 = new Cell();
                        //    Cell666.Add(new Paragraph(smry_dsOccupationalCount_Ability.Tables[0].Rows[2][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                        //    //Cell666.Width = 200;
                        //    Cell666.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE222.AddCell(Cell666);


                        //    maintabl22_Ability.Add(TABLE222);
                        //    maintableb100_Ability.AddCell(maintabl22_Ability);
                        //    ////////////////////LAYER THREE//////////////////////
                        //    iTextSharp.text.Table TABLE333 = new iTextSharp.text.Table(5);
                        //    TABLE333.Alignment = 0;
                        //    TABLE333.Width = 100;
                        //    int[] widths3 = new int[] { 32, 02, 32, 02, 32 };
                        //    TABLE333.SetWidths(widths3);
                        //    TABLE333.DefaultCellBorder = 0;
                        //    TABLE333.Border = 0;



                        //    DataSet catdisss13 = new DataSet();
                        //    String catdissss13 = "select * from career_cat_dis where careercat_name = '" + catagary_dis13 + "' ";
                        //    catdisss13 = clsdal.ExecDataSet(catdissss13);
                        //    String catdiscription13 = catdisss13.Tables[0].Rows[0].ItemArray[3].ToString();

                        //    Cell Cell777 = new Cell();
                        //    Cell777.Add(new Paragraph(catdiscription13, FontFactory.GetFont(FontFactory.HELVETICA, 08, Font.BOLD)));
                        //    //Cell777.Width = 20f;

                        //    Cell777.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE333.AddCell(Cell777);


                        //    Cell CellSpace777 = new Cell();
                        //    CellSpace777.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace777.Width = 10;
                        //    CellSpace777.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE333.AddCell(CellSpace777);

                        //    DataSet catdisss23 = new DataSet();
                        //    String catdissss23 = "select * from career_cat_dis where careercat_name = '" + catagary_dis23 + "' ";
                        //    catdisss23 = clsdal.ExecDataSet(catdissss23);
                        //    String catdiscription23 = catdisss23.Tables[0].Rows[0].ItemArray[3].ToString();

                        //    Cell Cell888 = new Cell();
                        //    Cell888.Add(new Paragraph(catdiscription23, FontFactory.GetFont(FontFactory.HELVETICA, 08, Font.BOLD)));
                        //    //Cell888.Width = 20f;
                        //    Cell888.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE333.AddCell(Cell888);

                        //    Cell CellSpace888 = new Cell();
                        //    CellSpace888.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace888.Width = 10;
                        //    CellSpace888.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE333.AddCell(CellSpace888);

                        //    DataSet catdisss33 = new DataSet();
                        //    String catdissss33 = "select * from career_cat_dis where careercat_name = '" + catagary_dis33 + "' ";
                        //    catdisss33 = clsdal.ExecDataSet(catdissss33);
                        //    String catdiscription33 = catdisss33.Tables[0].Rows[0].ItemArray[3].ToString();

                        //    Cell Cell999 = new Cell();
                        //    Cell999.Add(new Paragraph(catdiscription33, FontFactory.GetFont(FontFactory.HELVETICA, 08, Font.BOLD)));
                        //    //Cell999.Width = 20f;
                        //    Cell999.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE333.AddCell(Cell999);

                        //    maintabl33_Ability.Add(TABLE333);
                        //    maintableb100_Ability.AddCell(maintabl33_Ability);
                        //}

                        //if (no_of_catagary_Ability == 2)
                        //{
                        //    int[] widths = new int[] { 49, 02, 49 };
                        //    ////////////////LAYER ONE//////////////
                        //    iTextSharp.text.Table TABLE111 = new iTextSharp.text.Table(3);
                        //    TABLE111.Alignment = 0;
                        //    TABLE111.Width = 100;
                        //    TABLE111.SetWidths(widths);
                        //    TABLE111.DefaultCellBorder = 0;
                        //    TABLE111.Border = 0;

                        //    String catagary_dis12 = smry_dsOccupationalCount_Ability.Tables[0].Rows[0][0].ToString();
                        //    String catagary_dis22 = smry_dsOccupationalCount_Ability.Tables[0].Rows[1][0].ToString();

                        //    Cell Cell111 = new Cell();
                        //    iTextSharp.text.Image jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/career_blank.png"));
                        //    if (catagary_dis12 == "Analysis") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/analysis.png")); }
                        //    else if (catagary_dis12 == "Creativity") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/creativity.png")); jpeg955.ScalePercent(35f); }
                        //    else if (catagary_dis12 == "Equipment") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/equipment.png")); }
                        //    else if (catagary_dis12 == "Financial") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/financial.png")); }
                        //    else if (catagary_dis12 == "Observation & Analysis") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/observation.png")); }
                        //    else if (catagary_dis12 == "People") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/people.png")); }
                        //    else if (catagary_dis12 == "Process") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/process.png")); }
                        //    else if (catagary_dis12 == "Research") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/research.png")); }
                        //    else if (catagary_dis12 == "Results") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/result.png")); }
                        //    else if (catagary_dis12 == "Service") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/service.png")); }
                        //    else if (catagary_dis12 == "Independence") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/independence.png")); }
                        //    jpeg955.ScaleToFit(150f, 332f);
                        //    //Cell111.Width = 500f;
                        //    Cell111.Add(jpeg955);
                        //    Cell111.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    Cell111.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        //    TABLE111.AddCell(Cell111);

                        //    Cell CellSpace222 = new Cell();
                        //    CellSpace222.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace222.Width = 10;
                        //    CellSpace222.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE111.AddCell(CellSpace222);

                        //    Cell Cell222 = new Cell();
                        //    iTextSharp.text.Image jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/career_blank.png"));
                        //    if (catagary_dis22 == "Analysis") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/analysis.png")); }
                        //    else if (catagary_dis22 == "Creativity") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/creativity.png")); jpeg900555.ScalePercent(35f); }
                        //    else if (catagary_dis22 == "Equipment") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/equipment.png")); }
                        //    else if (catagary_dis22 == "Financial") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/financial.png")); }
                        //    else if (catagary_dis22 == "Observation & Analysis") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/observation.png")); }
                        //    else if (catagary_dis22 == "People") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/people.png")); }
                        //    else if (catagary_dis22 == "Process") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/research.png")); }
                        //    else if (catagary_dis22 == "Research") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/research.png")); }
                        //    else if (catagary_dis22 == "Results") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/result.png")); }
                        //    else if (catagary_dis22 == "Service") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/service.png")); }
                        //    else if (catagary_dis22 == "Independence") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/independence.png")); }
                        //    jpeg900555.ScaleToFit(150f, 332f);


                        //    //Cell222.Width = 500f;
                        //    Cell222.Add(jpeg900555);
                        //    Cell222.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    //Cell222.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    //Cell222.Add(new Paragraph("SERVICE", pop8_bold_dark));
                        //    //Cell222.BackgroundColor = new Color(255, 255, 0);
                        //    TABLE111.AddCell(Cell222);

                        //    maintabl11_Ability.Add(TABLE111);
                        //    maintableb100_Ability.AddCell(maintabl11_Ability);

                        //    ////////////////////LAYER TWO//////////////////////
                        //    iTextSharp.text.Table TABLE222 = new iTextSharp.text.Table(3);
                        //    TABLE222.Alignment = 0;
                        //    TABLE222.Width = 100;
                        //    TABLE222.SetWidths(widths);
                        //    TABLE222.DefaultCellBorder = 0;
                        //    TABLE222.Border = 0;

                        //    String catagary111 = smry_dsOccupationalCount_Ability.Tables[0].Rows[0][0].ToString();

                        //    Cell Cell444 = new Cell();
                        //    Cell444.Add(new Paragraph(smry_dsOccupationalCount_Ability.Tables[0].Rows[0][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                        //    //Cell444.Width = 200;
                        //    Cell444.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    Cell444.VerticalAlignment = iTextSharp.text.Element.ALIGN_TOP;
                        //    TABLE222.AddCell(Cell444);

                        //    Cell CellSpace444 = new Cell();
                        //    CellSpace444.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace444.Width = 10;
                        //    CellSpace444.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE222.AddCell(CellSpace444);

                        //    Cell Cell555 = new Cell();
                        //    Cell555.Add(new Paragraph(smry_dsOccupationalCount_Ability.Tables[0].Rows[1][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                        //    //Cell555.Width = 200;
                        //    Cell555.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE222.AddCell(Cell555);

                        //    maintabl22_Ability.Add(TABLE222);
                        //    maintableb100_Ability.AddCell(maintabl22_Ability);
                        //    ////////////////////LAYER THREE//////////////////////
                        //    iTextSharp.text.Table TABLE333 = new iTextSharp.text.Table(3);
                        //    TABLE333.Alignment = 0;
                        //    TABLE333.Width = 100;
                        //    TABLE333.SetWidths(widths);
                        //    TABLE333.DefaultCellBorder = 0;
                        //    TABLE333.Border = 0;

                        //    DataSet catdisss12 = new DataSet();
                        //    String catdissss12 = "select * from career_cat_dis where careercat_name = '" + catagary_dis12 + "' ";
                        //    catdisss12 = clsdal.ExecDataSet(catdissss12);
                        //    String catdiscription12 = catdisss12.Tables[0].Rows[0].ItemArray[3].ToString();

                        //    Cell Cell777 = new Cell();
                        //    //Cell777.Add(new Paragraph(catdiscription12, FontFactory.GetFont(FontFactory.HELVETICA, 12, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //Cell777.BorderWidth = 10;
                        //    //Cell777.Border = 10;
                        //    //Cell777.SetWidth("10f");
                        //    ////Cell777.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        //    Cell777.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    //Cell777.BorderWidthRight = 1f;
                        //    //TABLE333.AddCell(Cell777);

                        //    Paragraph pp777 = new Paragraph();
                        //    Phrase ph777 = new Phrase(18, new Chunk("\n" + catdiscription12, FontFactory.GetFont(FontFactory.HELVETICA, 08, Font.BOLD)));
                        //    pp777.Add(ph777);
                        //    //pp7.Add(limage);
                        //    Cell777.Add(pp777);
                        //    TABLE333.AddCell(Cell777);

                        //    Cell CellSpace777 = new Cell();
                        //    CellSpace777.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace777.Width = 10;
                        //    CellSpace777.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE333.AddCell(CellSpace777);

                        //    DataSet catdisss22 = new DataSet();
                        //    String catdissss22 = "select * from career_cat_dis where careercat_name = '" + catagary_dis22 + "' ";
                        //    catdisss22 = clsdal.ExecDataSet(catdissss22);
                        //    String catdiscription22 = catdisss22.Tables[0].Rows[0].ItemArray[3].ToString();

                        //    Cell Cell888 = new Cell();
                        //    //Cell888.Add(new Paragraph(catdiscription22, FontFactory.GetFont(FontFactory.HELVETICA, 10, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //Cell777.SetWidth("200f");
                        //    ////Cell888.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        //    Cell888.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    //Cell888.BorderWidthLeft = 1f;
                        //    //TABLE333.AddCell(Cell888);

                        //    Paragraph pp888 = new Paragraph();
                        //    Phrase ph888 = new Phrase(18, new Chunk("\n\t\t\t    " + catdiscription22, FontFactory.GetFont(FontFactory.HELVETICA, 08, Font.BOLD)));
                        //    pp888.Add(ph888);
                        //    //pp7.Add(limage);
                        //    Cell888.Add(pp888);
                        //    TABLE333.AddCell(Cell888);

                        //    maintabl33_Ability.Add(TABLE333);
                        //    maintableb100_Ability.AddCell(maintabl33_Ability);
                        //}

                        //if (no_of_catagary_Ability == 1)
                        //{

                        //    ////////////////LAYER ONE//////////////
                        //    iTextSharp.text.Table TABLE111 = new iTextSharp.text.Table(1);
                        //    TABLE111.Alignment = 0;
                        //    TABLE111.Width = 100;
                        //    TABLE111.DefaultCellBorder = 0;
                        //    TABLE111.Border = 0;

                        //    String catagary_dis11 = smry_dsOccupationalCount_Ability.Tables[0].Rows[0][0].ToString();

                        //    Cell Cell111 = new Cell();
                        //    iTextSharp.text.Image jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/career_blank.png"));
                        //    if (catagary_dis11 == "Analysis") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/analysis.png")); }
                        //    else if (catagary_dis11 == "Creativity") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/creativity.png")); jpeg955.ScalePercent(35f); }
                        //    else if (catagary_dis11 == "Equipment") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/equipment.png")); }
                        //    else if (catagary_dis11 == "Financial") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/financial.png")); }
                        //    else if (catagary_dis11 == "Observation & Analysis") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/observation.png")); }
                        //    else if (catagary_dis11 == "People") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/people.png")); }
                        //    else if (catagary_dis11 == "Process") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/research.png")); }
                        //    else if (catagary_dis11 == "Research") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/research.png")); }
                        //    else if (catagary_dis11 == "Results") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/result.png")); }
                        //    else if (catagary_dis11 == "Service") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/service.png")); }
                        //    else if (catagary_dis11 == "Independence") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/independence.png")); }
                        //    jpeg955.ScaleToFit(150f, 332f);
                        //    Cell111.Width = 20f;
                        //    Cell111.Add(jpeg955);
                        //    Cell111.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    Cell111.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        //    TABLE111.AddCell(Cell111);

                        //    maintabl11_Ability.Add(TABLE111);
                        //    maintableb100_Ability.AddCell(maintabl11_Ability);

                        //    ////////////////////LAYER TWO//////////////////////
                        //    iTextSharp.text.Table TABLE222 = new iTextSharp.text.Table(1);
                        //    TABLE222.Alignment = 0;
                        //    TABLE222.Width = 100;
                        //    TABLE222.DefaultCellBorder = 0;
                        //    TABLE222.Border = 0;

                        //    Cell Cell444 = new Cell();
                        //    Cell444.Add(new Paragraph(smry_dsOccupationalCount_Ability.Tables[0].Rows[0][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                        //    Cell444.Width = 20f;
                        //    Cell444.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    Cell444.VerticalAlignment = iTextSharp.text.Element.ALIGN_TOP;
                        //    TABLE222.AddCell(Cell444);

                        //    maintabl22_Ability.Add(TABLE222);
                        //    maintableb100_Ability.AddCell(maintabl22_Ability);
                        //    ////////////////////LAYER THREE//////////////////////
                        //    iTextSharp.text.Table TABLE333 = new iTextSharp.text.Table(1);
                        //    TABLE333.Alignment = 0;
                        //    TABLE333.Width = 100;
                        //    TABLE333.DefaultCellBorder = 0;
                        //    TABLE333.Border = 0;

                        //    DataSet catdisss11 = new DataSet();
                        //    String catdissss11 = "select * from career_cat_dis where careercat_name = '" + catagary_dis11 + "' ";
                        //    catdisss11 = clsdal.ExecDataSet(catdissss11);
                        //    String catdiscription11 = catdisss11.Tables[0].Rows[0].ItemArray[3].ToString();

                        //    Cell Cell777 = new Cell();
                        //    Cell777.Add(new Paragraph(catdiscription11, FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        //    Cell777.Width = 20f;
                        //    Cell777.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE333.AddCell(Cell777);

                        //    maintabl33_Ability.Add(TABLE333);
                        //    maintableb100_Ability.AddCell(maintabl33_Ability);
                        //}

                        //doc.Add(maintableb100_Ability);

                        //#endregion CAREERS BY ABILITY

                        //#region Careers By Interest
                        //////////////////////////////////////////////////////////////////////////
                        ////iTextSharp.text.Image jpeg5005000 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/lastthirdpage1_new.png"));
                        //////jpeg.ScalePercent(35f);
                        ////jpeg5005000.ScaleToFit(600f, 550f);
                        ////jpeg5005000.SetAbsolutePosition(0, 530);
                        ////// jpeg.SpacingAfter = -50f;
                        ////doc.Add(jpeg5005000);

                        //iTextSharp.text.Table PDTopTable2000_Interest = new iTextSharp.text.Table(1);
                        //PDTopTable2000_Interest.Alignment = 0;
                        //PDTopTable2000_Interest.Width = 100;
                        //PDTopTable2000_Interest.DefaultCellBorder = 0;
                        //PDTopTable2000_Interest.Border = 0;

                        //Cell PDTopCell2000_Interest = new Cell();
                        //PDTopCell2000_Interest.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                        //PDTopCell2000_Interest.Add(new Paragraph("CAREERS BY INTEREST.", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                        //PDTopCell2000_Interest.Width = 100;
                        //PDTopCell2000_Interest.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        //PDTopTable2000_Interest.AddCell(PDTopCell2000_Interest);

                        //doc.Add(PDTopTable2000_Interest);

                        ////////////////// Invove Data from Database /////////////////////////////////////////

                        ////Add_candidate_career_By_Interest();

                        //string sql_qry4 = "sp_career_by_RAPD_Ability_Interest";
                        //int status4 = 4; // Read Candidate Interest
                        //DataSet ds_candidate_career_By_Interest = clsdal.ExecDataSet(sql_qry4, status4, c_id);

                        //string careers_By_Interest = "";
                        //if (ds_candidate_career_By_Interest.Tables[0].Rows.Count == 0)
                        //{
                        //    careers_By_Interest = "0";
                        //}
                        //else
                        //{
                        //    for (int i = 0; i < ds_candidate_career_By_Interest.Tables[0].Rows.Count; i++)
                        //    {
                        //        if (i == 0)
                        //        {
                        //            careers_By_Interest = ds_candidate_career_By_Interest.Tables[0].Rows[i][0].ToString();
                        //        }
                        //        else
                        //        {
                        //            careers_By_Interest = careers_By_Interest + "," + ds_candidate_career_By_Interest.Tables[0].Rows[i][0].ToString();
                        //        }
                        //    }
                        //}


                        //strcmd = "SELECT  ca_id, basic_info6, Occupational_category, basic_info1 FROM dbo.tbl_career_master WHERE (ca_id IN(" + careers_By_Interest + "))ORDER BY basic_info6";
                        ////strcmd = "SELECT  ca_id, basic_info6, Occupational_category, basic_info1 FROM dbo.tbl_career_master WHERE (ca_id IN(SELECT  ca_id  FROM dbo.tbl_candidate_career_by_Interest WHERE (c_id = '" + c_id.ToString() + "')))ORDER BY basic_info6";
                        //DataSet smry_ds_catagory_combine_Interest = clsdal.ExecDataSet(strcmd);
                        //int career_smry_count_Interest = smry_ds_catagory_combine_Interest.Tables[0].Rows.Count;
                        //strcmd = "SELECT Occupational_category, COUNT(Occupational_category) AS CategoryCount, CONVERT(decimal(18, 2), CONVERT(decimal, COUNT(Occupational_category)) / " + career_smry_count_Interest + ") * 100 AS Compatibility FROM dbo.tbl_career_master WHERE(ca_id IN (" + careers_By_Interest + ")) and Occupational_category !='Independence' GROUP BY Occupational_category ORDER BY CategoryCount DESC";
                        //DataSet smry_dsOccupationalCount_Interest = clsdal.ExecDataSet(strcmd);

                        //int no_of_catagary_Interest = smry_dsOccupationalCount_Interest.Tables[0].Rows.Count;
                        ////////////////// Invove Data from Database /////////////////////////////////////////

                        //iTextSharp.text.Table maintableb100_Interest = new iTextSharp.text.Table(1);
                        //maintableb100_Interest.Width = 100f;
                        //maintableb100_Interest.DefaultCellBorder = 0;
                        //maintableb100_Interest.Border = 0;

                        //Cell maintabl11_Interest = new Cell();
                        ////maintabl11.Border = 10;
                        //Cell maintabl22_Interest = new Cell();
                        ////maintabl22.Border = 10;
                        //Cell maintabl33_Interest = new Cell();
                        ////maintabl33.Border = 10;

                        ////////////////////////////////////////////////////////////////////////////////////////////
                        ////int no_of_catagary1_Interest = smry_dsOccupationalCount_Interest.Tables[0].Rows.Count;
                        ////int no_of_catagary1 = 3;


                        ////////////////////////////////////////////////////////////////////////////////////////////

                        //if (no_of_catagary_Interest >= 3)
                        //{

                        //    ////////////////LAYER ONE//////////////
                        //    iTextSharp.text.Table TABLE111 = new iTextSharp.text.Table(5);
                        //    TABLE111.Alignment = 0;
                        //    TABLE111.Width = 100;
                        //    int[] widths1 = new int[] { 32, 02, 32, 02, 32 };
                        //    TABLE111.SetWidths(widths1);
                        //    TABLE111.DefaultCellBorder = 0;
                        //    TABLE111.Border = 0;

                        //    String catagary_dis13 = smry_dsOccupationalCount_Interest.Tables[0].Rows[0][0].ToString();
                        //    String catagary_dis23 = smry_dsOccupationalCount_Interest.Tables[0].Rows[1][0].ToString();
                        //    String catagary_dis33 = smry_dsOccupationalCount_Interest.Tables[0].Rows[2][0].ToString();

                        //    Cell Cell111 = new Cell();
                        //    iTextSharp.text.Image jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/career_blank.png"));
                        //    if (catagary_dis13 == "Analysis") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/analysis.png")); jpeg955.ScalePercent(35f); }
                        //    else if (catagary_dis13 == "Creativity") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/creativity.png")); }
                        //    else if (catagary_dis13 == "Equipment") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/equipment.png")); }
                        //    else if (catagary_dis13 == "Financial") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/financial.png")); }
                        //    else if (catagary_dis13 == "Observation & Analysis") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/observation.png")); }
                        //    else if (catagary_dis13 == "People") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/people.png")); }
                        //    else if (catagary_dis13 == "Process") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/process.png")); }
                        //    else if (catagary_dis13 == "Research") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/research.png")); }
                        //    else if (catagary_dis13 == "Results") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/result.png")); }
                        //    else if (catagary_dis13 == "Service") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/service.png")); } //
                        //    else if (catagary_dis13 == "Independence") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/independence.png")); }
                        //    jpeg955.ScaleToFit(150f, 332f);
                        //    //Cell111.Width = 500f;
                        //    Cell111.Add(jpeg955);
                        //    Cell111.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    Cell111.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        //    TABLE111.AddCell(Cell111);

                        //    Cell CellSpace222 = new Cell();
                        //    CellSpace222.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace222.Width = 10;
                        //    CellSpace222.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE111.AddCell(CellSpace222);

                        //    Cell Cell222 = new Cell();
                        //    iTextSharp.text.Image jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/career_blank.png"));
                        //    if (catagary_dis23 == "Analysis") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/analysis.png")); jpeg900555.ScalePercent(35f); }
                        //    else if (catagary_dis23 == "Creativity") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/creativity.png")); }
                        //    else if (catagary_dis23 == "Equipment") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/equipment.png")); }
                        //    else if (catagary_dis23 == "Financial") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/financial.png")); }
                        //    else if (catagary_dis23 == "Observation & Analysis") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/observation.png")); }
                        //    else if (catagary_dis23 == "People") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/people.png")); }
                        //    else if (catagary_dis23 == "Process") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/process.png")); }
                        //    else if (catagary_dis23 == "Research") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/research.png")); }
                        //    else if (catagary_dis23 == "Results") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/result.png")); }
                        //    else if (catagary_dis23 == "Service") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/service.png")); }
                        //    else if (catagary_dis23 == "Independence") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/independence.png")); }
                        //    jpeg900555.ScaleToFit(150f, 332f);
                        //    //Cell111.Width = 500f;
                        //    Cell222.Add(jpeg900555);
                        //    Cell222.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE111.AddCell(Cell222);

                        //    Cell CellSpace333 = new Cell();
                        //    CellSpace333.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace333.Width = 10;
                        //    CellSpace333.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE111.AddCell(CellSpace333);

                        //    Cell Cell333 = new Cell();
                        //    iTextSharp.text.Image jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/career_blank.png"));
                        //    if (catagary_dis33 == "Analysis") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/analysis.png")); }
                        //    else if (catagary_dis33 == "Creativity") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/creativity.png")); jpeg90055.ScalePercent(35f); }
                        //    else if (catagary_dis33 == "Equipment") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/equipment.png")); }
                        //    else if (catagary_dis33 == "Financial") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/financial.png")); }
                        //    else if (catagary_dis33 == "Observation & Analysis") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/observation.png")); }
                        //    else if (catagary_dis33 == "People") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/people.png")); }
                        //    else if (catagary_dis33 == "Process") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/process.png")); }
                        //    else if (catagary_dis33 == "Research") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/research.png")); }
                        //    else if (catagary_dis33 == "Results") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/result.png")); }
                        //    else if (catagary_dis33 == "Service") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/service.png")); }
                        //    else if (catagary_dis33 == "Independence") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/independence.png")); }
                        //    jpeg90055.ScaleToFit(150f, 332f);
                        //    //Cell111.Width = 500f;
                        //    Cell333.Add(jpeg90055);
                        //    Cell333.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE111.AddCell(Cell333);

                        //    maintabl11_Interest.Add(TABLE111);
                        //    maintableb100_Interest.AddCell(maintabl11_Interest);

                        //    ////////////////////LAYER TWO//////////////////////
                        //    iTextSharp.text.Table TABLE222 = new iTextSharp.text.Table(5);
                        //    TABLE222.Alignment = 0;
                        //    TABLE222.Width = 100;
                        //    int[] widths2 = new int[] { 32, 02, 32, 02, 32 };
                        //    TABLE222.SetWidths(widths2);
                        //    TABLE222.DefaultCellBorder = 0;
                        //    TABLE222.Border = 0;

                        //    Cell Cell444 = new Cell();
                        //    Cell444.Add(new Paragraph(smry_dsOccupationalCount_Interest.Tables[0].Rows[0][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                        //    //Cell444.Width = 200;
                        //    Cell444.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    Cell444.VerticalAlignment = iTextSharp.text.Element.ALIGN_TOP;
                        //    TABLE222.AddCell(Cell444);

                        //    Cell CellSpace444 = new Cell();
                        //    CellSpace444.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace444.Width = 10;
                        //    CellSpace444.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE222.AddCell(CellSpace444);

                        //    Cell Cell555 = new Cell();
                        //    Cell555.Add(new Paragraph(smry_dsOccupationalCount_Interest.Tables[0].Rows[1][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                        //    //Cell555.Width = 200;
                        //    Cell555.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE222.AddCell(Cell555);

                        //    Cell CellSpace555 = new Cell();
                        //    CellSpace555.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace555.Width = 10;
                        //    CellSpace555.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE222.AddCell(CellSpace555);

                        //    Cell Cell666 = new Cell();
                        //    Cell666.Add(new Paragraph(smry_dsOccupationalCount_Interest.Tables[0].Rows[2][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                        //    //Cell666.Width = 200;
                        //    Cell666.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE222.AddCell(Cell666);


                        //    maintabl22_Interest.Add(TABLE222);
                        //    maintableb100_Interest.AddCell(maintabl22_Interest);
                        //    ////////////////////LAYER THREE//////////////////////
                        //    iTextSharp.text.Table TABLE333 = new iTextSharp.text.Table(5);
                        //    TABLE333.Alignment = 0;
                        //    TABLE333.Width = 100;
                        //    int[] widths3 = new int[] { 32, 02, 32, 02, 32 };
                        //    TABLE333.SetWidths(widths3);
                        //    TABLE333.DefaultCellBorder = 0;
                        //    TABLE333.Border = 0;



                        //    DataSet catdisss13 = new DataSet();
                        //    String catdissss13 = "select * from career_cat_dis where careercat_name = '" + catagary_dis13 + "' ";
                        //    catdisss13 = clsdal.ExecDataSet(catdissss13);
                        //    String catdiscription13 = catdisss13.Tables[0].Rows[0].ItemArray[3].ToString();

                        //    Cell Cell777 = new Cell();
                        //    Cell777.Add(new Paragraph(catdiscription13, FontFactory.GetFont(FontFactory.HELVETICA, 08, Font.BOLD)));
                        //    //Cell777.Width = 20f;

                        //    Cell777.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE333.AddCell(Cell777);


                        //    Cell CellSpace777 = new Cell();
                        //    CellSpace777.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace777.Width = 10;
                        //    CellSpace777.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE333.AddCell(CellSpace777);

                        //    DataSet catdisss23 = new DataSet();
                        //    String catdissss23 = "select * from career_cat_dis where careercat_name = '" + catagary_dis23 + "' ";
                        //    catdisss23 = clsdal.ExecDataSet(catdissss23);
                        //    String catdiscription23 = catdisss23.Tables[0].Rows[0].ItemArray[3].ToString();

                        //    Cell Cell888 = new Cell();
                        //    Cell888.Add(new Paragraph(catdiscription23, FontFactory.GetFont(FontFactory.HELVETICA, 08, Font.BOLD)));
                        //    //Cell888.Width = 20f;
                        //    Cell888.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE333.AddCell(Cell888);

                        //    Cell CellSpace888 = new Cell();
                        //    CellSpace888.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace888.Width = 10;
                        //    CellSpace888.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE333.AddCell(CellSpace888);

                        //    DataSet catdisss33 = new DataSet();
                        //    String catdissss33 = "select * from career_cat_dis where careercat_name = '" + catagary_dis33 + "' ";
                        //    catdisss33 = clsdal.ExecDataSet(catdissss33);
                        //    String catdiscription33 = catdisss33.Tables[0].Rows[0].ItemArray[3].ToString();

                        //    Cell Cell999 = new Cell();
                        //    Cell999.Add(new Paragraph(catdiscription33, FontFactory.GetFont(FontFactory.HELVETICA, 08, Font.BOLD)));
                        //    //Cell999.Width = 20f;
                        //    Cell999.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE333.AddCell(Cell999);

                        //    maintabl33_Interest.Add(TABLE333);
                        //    maintableb100_Interest.AddCell(maintabl33_Interest);
                        //}

                        //if (no_of_catagary_Interest == 2)
                        //{
                        //    int[] widths = new int[] { 49, 02, 49 };
                        //    ////////////////LAYER ONE//////////////
                        //    iTextSharp.text.Table TABLE111 = new iTextSharp.text.Table(3);
                        //    TABLE111.Alignment = 0;
                        //    TABLE111.Width = 100;
                        //    TABLE111.SetWidths(widths);
                        //    TABLE111.DefaultCellBorder = 0;
                        //    TABLE111.Border = 0;

                        //    String catagary_dis12 = smry_dsOccupationalCount_Interest.Tables[0].Rows[0][0].ToString();
                        //    String catagary_dis22 = smry_dsOccupationalCount_Interest.Tables[0].Rows[1][0].ToString();

                        //    Cell Cell111 = new Cell();
                        //    iTextSharp.text.Image jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/career_blank.png"));
                        //    if (catagary_dis12 == "Analysis") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/analysis.png")); }
                        //    else if (catagary_dis12 == "Creativity") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/creativity.png")); jpeg955.ScalePercent(35f); }
                        //    else if (catagary_dis12 == "Equipment") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/equipment.png")); }
                        //    else if (catagary_dis12 == "Financial") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/financial.png")); }
                        //    else if (catagary_dis12 == "Observation & Analysis") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/observation.png")); }
                        //    else if (catagary_dis12 == "People") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/people.png")); }
                        //    else if (catagary_dis12 == "Process") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/process.png")); }
                        //    else if (catagary_dis12 == "Research") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/research.png")); }
                        //    else if (catagary_dis12 == "Results") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/result.png")); }
                        //    else if (catagary_dis12 == "Service") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/service.png")); }
                        //    else if (catagary_dis12 == "Independence") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/independence.png")); }
                        //    jpeg955.ScaleToFit(150f, 332f);
                        //    //Cell111.Width = 500f;
                        //    Cell111.Add(jpeg955);
                        //    Cell111.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    Cell111.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        //    TABLE111.AddCell(Cell111);

                        //    Cell CellSpace222 = new Cell();
                        //    CellSpace222.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace222.Width = 10;
                        //    CellSpace222.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE111.AddCell(CellSpace222);

                        //    Cell Cell222 = new Cell();
                        //    iTextSharp.text.Image jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/career_blank.png"));
                        //    if (catagary_dis22 == "Analysis") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/analysis.png")); }
                        //    else if (catagary_dis22 == "Creativity") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/creativity.png")); jpeg900555.ScalePercent(35f); }
                        //    else if (catagary_dis22 == "Equipment") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/equipment.png")); }
                        //    else if (catagary_dis22 == "Financial") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/financial.png")); }
                        //    else if (catagary_dis22 == "Observation & Analysis") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/observation.png")); }
                        //    else if (catagary_dis22 == "People") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/people.png")); }
                        //    else if (catagary_dis22 == "Process") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/research.png")); }
                        //    else if (catagary_dis22 == "Research") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/research.png")); }
                        //    else if (catagary_dis22 == "Results") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/result.png")); }
                        //    else if (catagary_dis22 == "Service") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/service.png")); }
                        //    else if (catagary_dis22 == "Independence") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/independence.png")); }
                        //    jpeg900555.ScaleToFit(150f, 332f);


                        //    //Cell222.Width = 500f;
                        //    Cell222.Add(jpeg900555);
                        //    Cell222.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    //Cell222.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    //Cell222.Add(new Paragraph("SERVICE", pop8_bold_dark));
                        //    //Cell222.BackgroundColor = new Color(255, 255, 0);
                        //    TABLE111.AddCell(Cell222);

                        //    maintabl11_Interest.Add(TABLE111);
                        //    maintableb100_Interest.AddCell(maintabl11_Interest);

                        //    ////////////////////LAYER TWO//////////////////////
                        //    iTextSharp.text.Table TABLE222 = new iTextSharp.text.Table(3);
                        //    TABLE222.Alignment = 0;
                        //    TABLE222.Width = 100;
                        //    TABLE222.SetWidths(widths);
                        //    TABLE222.DefaultCellBorder = 0;
                        //    TABLE222.Border = 0;

                        //    String catagary111 = smry_dsOccupationalCount_Interest.Tables[0].Rows[0][0].ToString();

                        //    Cell Cell444 = new Cell();
                        //    Cell444.Add(new Paragraph(smry_dsOccupationalCount_Interest.Tables[0].Rows[0][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                        //    //Cell444.Width = 200;
                        //    Cell444.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    Cell444.VerticalAlignment = iTextSharp.text.Element.ALIGN_TOP;
                        //    TABLE222.AddCell(Cell444);

                        //    Cell CellSpace444 = new Cell();
                        //    CellSpace444.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace444.Width = 10;
                        //    CellSpace444.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE222.AddCell(CellSpace444);

                        //    Cell Cell555 = new Cell();
                        //    Cell555.Add(new Paragraph(smry_dsOccupationalCount_Interest.Tables[0].Rows[1][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                        //    //Cell555.Width = 200;
                        //    Cell555.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE222.AddCell(Cell555);

                        //    maintabl22_Interest.Add(TABLE222);
                        //    maintableb100_Interest.AddCell(maintabl22_Interest);
                        //    ////////////////////LAYER THREE//////////////////////
                        //    iTextSharp.text.Table TABLE333 = new iTextSharp.text.Table(3);
                        //    TABLE333.Alignment = 0;
                        //    TABLE333.Width = 100;
                        //    TABLE333.SetWidths(widths);
                        //    TABLE333.DefaultCellBorder = 0;
                        //    TABLE333.Border = 0;

                        //    DataSet catdisss12 = new DataSet();
                        //    String catdissss12 = "select * from career_cat_dis where careercat_name = '" + catagary_dis12 + "' ";
                        //    catdisss12 = clsdal.ExecDataSet(catdissss12);
                        //    String catdiscription12 = catdisss12.Tables[0].Rows[0].ItemArray[3].ToString();

                        //    Cell Cell777 = new Cell();
                        //    //Cell777.Add(new Paragraph(catdiscription12, FontFactory.GetFont(FontFactory.HELVETICA, 12, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //Cell777.BorderWidth = 10;
                        //    //Cell777.Border = 10;
                        //    //Cell777.SetWidth("10f");
                        //    ////Cell777.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        //    Cell777.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    //Cell777.BorderWidthRight = 1f;
                        //    //TABLE333.AddCell(Cell777);

                        //    Paragraph pp777 = new Paragraph();
                        //    Phrase ph777 = new Phrase(18, new Chunk("\n" + catdiscription12, FontFactory.GetFont(FontFactory.HELVETICA, 08, Font.BOLD)));
                        //    pp777.Add(ph777);
                        //    //pp7.Add(limage);
                        //    Cell777.Add(pp777);
                        //    TABLE333.AddCell(Cell777);

                        //    Cell CellSpace777 = new Cell();
                        //    CellSpace777.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace777.Width = 10;
                        //    CellSpace777.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE333.AddCell(CellSpace777);

                        //    DataSet catdisss22 = new DataSet();
                        //    String catdissss22 = "select * from career_cat_dis where careercat_name = '" + catagary_dis22 + "' ";
                        //    catdisss22 = clsdal.ExecDataSet(catdissss22);
                        //    String catdiscription22 = catdisss22.Tables[0].Rows[0].ItemArray[3].ToString();

                        //    Cell Cell888 = new Cell();
                        //    //Cell888.Add(new Paragraph(catdiscription22, FontFactory.GetFont(FontFactory.HELVETICA, 10, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //Cell777.SetWidth("200f");
                        //    ////Cell888.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        //    Cell888.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    //Cell888.BorderWidthLeft = 1f;
                        //    //TABLE333.AddCell(Cell888);

                        //    Paragraph pp888 = new Paragraph();
                        //    Phrase ph888 = new Phrase(18, new Chunk("\n\t\t\t    " + catdiscription22, FontFactory.GetFont(FontFactory.HELVETICA, 08, Font.BOLD)));
                        //    pp888.Add(ph888);
                        //    //pp7.Add(limage);
                        //    Cell888.Add(pp888);
                        //    TABLE333.AddCell(Cell888);

                        //    maintabl33_Interest.Add(TABLE333);
                        //    maintableb100_Interest.AddCell(maintabl33_Interest);
                        //}

                        //if (no_of_catagary_Interest == 1)
                        //{

                        //    ////////////////LAYER ONE//////////////
                        //    iTextSharp.text.Table TABLE111 = new iTextSharp.text.Table(1);
                        //    TABLE111.Alignment = 0;
                        //    TABLE111.Width = 100;
                        //    TABLE111.DefaultCellBorder = 0;
                        //    TABLE111.Border = 0;

                        //    String catagary_dis11 = smry_dsOccupationalCount_Interest.Tables[0].Rows[0][0].ToString();

                        //    Cell Cell111 = new Cell();
                        //    iTextSharp.text.Image jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/career_blank.png"));
                        //    if (catagary_dis11 == "Analysis") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/analysis.png")); }
                        //    else if (catagary_dis11 == "Creativity") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/creativity.png")); jpeg955.ScalePercent(35f); }
                        //    else if (catagary_dis11 == "Equipment") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/equipment.png")); }
                        //    else if (catagary_dis11 == "Financial") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/financial.png")); }
                        //    else if (catagary_dis11 == "Observation & Analysis") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/observation.png")); }
                        //    else if (catagary_dis11 == "People") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/people.png")); }
                        //    else if (catagary_dis11 == "Process") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/research.png")); }
                        //    else if (catagary_dis11 == "Research") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/research.png")); }
                        //    else if (catagary_dis11 == "Results") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/result.png")); }
                        //    else if (catagary_dis11 == "Service") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/service.png")); }
                        //    else if (catagary_dis11 == "Independence") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/independence.png")); }
                        //    jpeg955.ScaleToFit(150f, 332f);
                        //    Cell111.Width = 20f;
                        //    Cell111.Add(jpeg955);
                        //    Cell111.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    Cell111.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        //    TABLE111.AddCell(Cell111);

                        //    maintabl11_Interest.Add(TABLE111);
                        //    maintableb100_Interest.AddCell(maintabl11_Interest);

                        //    ////////////////////LAYER TWO//////////////////////
                        //    iTextSharp.text.Table TABLE222 = new iTextSharp.text.Table(1);
                        //    TABLE222.Alignment = 0;
                        //    TABLE222.Width = 100;
                        //    TABLE222.DefaultCellBorder = 0;
                        //    TABLE222.Border = 0;

                        //    Cell Cell444 = new Cell();
                        //    Cell444.Add(new Paragraph(smry_dsOccupationalCount_Interest.Tables[0].Rows[0][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                        //    Cell444.Width = 20f;
                        //    Cell444.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    Cell444.VerticalAlignment = iTextSharp.text.Element.ALIGN_TOP;
                        //    TABLE222.AddCell(Cell444);

                        //    maintabl22_Interest.Add(TABLE222);
                        //    maintableb100_Interest.AddCell(maintabl22_Interest);
                        //    ////////////////////LAYER THREE//////////////////////
                        //    iTextSharp.text.Table TABLE333 = new iTextSharp.text.Table(1);
                        //    TABLE333.Alignment = 0;
                        //    TABLE333.Width = 100;
                        //    TABLE333.DefaultCellBorder = 0;
                        //    TABLE333.Border = 0;

                        //    DataSet catdisss11 = new DataSet();
                        //    String catdissss11 = "select * from career_cat_dis where careercat_name = '" + catagary_dis11 + "' ";
                        //    catdisss11 = clsdal.ExecDataSet(catdissss11);
                        //    String catdiscription11 = catdisss11.Tables[0].Rows[0].ItemArray[3].ToString();

                        //    Cell Cell777 = new Cell();
                        //    Cell777.Add(new Paragraph(catdiscription11, FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        //    Cell777.Width = 20f;
                        //    Cell777.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE333.AddCell(Cell777);

                        //    maintabl33_Interest.Add(TABLE333);
                        //    maintableb100_Interest.AddCell(maintabl33_Interest);
                        //}

                        //doc.Add(maintableb100_Interest);
                        //#endregion Careers By Interest

                        //#region Careers By Personality (RAPD) & Ability & Interest
                        //////////////////////////////////////////////////////////////////////////
                        ////iTextSharp.text.Image jpeg5005000 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/lastthirdpage1_new.png"));
                        //////jpeg.ScalePercent(35f);
                        ////jpeg5005000.ScaleToFit(600f, 550f);
                        ////jpeg5005000.SetAbsolutePosition(0, 530);
                        ////// jpeg.SpacingAfter = -50f;
                        ////doc.Add(jpeg5005000);

                        //iTextSharp.text.Table PDTopTable2000_P_A_I = new iTextSharp.text.Table(1);
                        //PDTopTable2000_P_A_I.Alignment = 0;
                        //PDTopTable2000_P_A_I.Width = 100;
                        //PDTopTable2000_P_A_I.DefaultCellBorder = 0;
                        //PDTopTable2000_P_A_I.Border = 0;

                        //Cell PDTopCell2000_P_A_I = new Cell();
                        //PDTopCell2000_P_A_I.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                        //PDTopCell2000_P_A_I.Add(new Paragraph("CAREERS BY PERSONALITY & ABILITY & INTEREST.", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                        //PDTopCell2000_P_A_I.Width = 100;
                        //PDTopCell2000_P_A_I.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        //PDTopTable2000_P_A_I.AddCell(PDTopCell2000_P_A_I);

                        //doc.Add(PDTopTable2000_P_A_I);

                        ////////////////// Invove Data from Database /////////////////////////////////////////
                        ////Add_candidate_career_By_P_A_I();

                        ////string sql_qry234 = "sp_career_by_RAPD_Ability_Interest";
                        ////int status234 = 4; // Read Candidate Interest

                        //int RAPD = ds_candidate_career_By_RAPD.Tables[0].Rows.Count;
                        //int Ability = ds_candidate_career_By_Ability.Tables[0].Rows.Count;
                        //int Interest = ds_candidate_career_By_Interest.Tables[0].Rows.Count;

                        //DataSet ds_candidate_career_By_P_A_I = new DataSet();
                        //ds_candidate_career_By_RAPD.Merge(ds_candidate_career_By_Ability);
                        //ds_candidate_career_By_Interest.Merge(ds_candidate_career_By_RAPD);
                        //ds_candidate_career_By_P_A_I.Merge(ds_candidate_career_By_Interest);

                        //int PAI = ds_candidate_career_By_P_A_I.Tables[0].Rows.Count;

                        //string careers_By_P_A_I = "";
                        //if (ds_candidate_career_By_P_A_I.Tables[0].Rows.Count == 0)
                        //{
                        //    careers_By_P_A_I = "0";
                        //}
                        //else
                        //{
                        //    for (int i = 0; i < ds_candidate_career_By_P_A_I.Tables[0].Rows.Count; i++)
                        //    {
                        //        if (i == 0)
                        //        {
                        //            careers_By_P_A_I = ds_candidate_career_By_P_A_I.Tables[0].Rows[i][0].ToString();
                        //        }
                        //        else
                        //        {
                        //            careers_By_P_A_I = careers_By_P_A_I + "," + ds_candidate_career_By_P_A_I.Tables[0].Rows[i][0].ToString();
                        //        }
                        //    }
                        //}


                        //strcmd = "SELECT  ca_id, basic_info6, Occupational_category, basic_info1 FROM dbo.tbl_career_master WHERE (ca_id IN(" + careers_By_P_A_I + "))ORDER BY basic_info6";
                        ////strcmd = "SELECT  ca_id, basic_info6, Occupational_category, basic_info1 FROM dbo.tbl_career_master WHERE (ca_id IN(SELECT  ca_id  FROM dbo.tbl_candidate_career_by_RAPD WHERE (c_id = '" + c_id.ToString() + "')))ORDER BY basic_info6";
                        //DataSet smry_ds_catagory_combine_P_A_I = clsdal.ExecDataSet(strcmd);
                        //int career_smry_count_P_A_I = smry_ds_catagory_combine_P_A_I.Tables[0].Rows.Count;
                        //strcmd = "SELECT Occupational_category, COUNT(Occupational_category) AS CategoryCount, CONVERT(decimal(18, 2), CONVERT(decimal, COUNT(Occupational_category)) / " + career_smry_count_P_A_I + ") * 100 AS Compatibility FROM dbo.tbl_career_master WHERE(ca_id IN (" + careers_By_P_A_I + ")) and Occupational_category !='Independence' GROUP BY Occupational_category ORDER BY CategoryCount DESC";
                        //DataSet smry_dsOccupationalCount_P_A_I = clsdal.ExecDataSet(strcmd);

                        //int no_of_catagary_P_A_I = smry_dsOccupationalCount_P_A_I.Tables[0].Rows.Count;
                        ////////////////// Invove Data from Database /////////////////////////////////////////

                        //iTextSharp.text.Table maintableb100_P_A_I = new iTextSharp.text.Table(1);
                        //maintableb100_P_A_I.Width = 100f;
                        //maintableb100_P_A_I.DefaultCellBorder = 0;
                        //maintableb100_P_A_I.Border = 0;

                        //Cell maintabl11_P_A_I = new Cell();
                        ////maintabl11.Border = 10;
                        //Cell maintabl22_P_A_I = new Cell();
                        ////maintabl22.Border = 10;
                        //Cell maintabl33_P_A_I = new Cell();
                        ////maintabl33.Border = 10;

                        ////////////////////////////////////////////////////////////////////////////////////////////
                        ////int no_of_catagary1_P_A_I = smry_dsOccupationalCount_P_A_I.Tables[0].Rows.Count;
                        ////int no_of_catagary1 = 3;


                        ////////////////////////////////////////////////////////////////////////////////////////////

                        //if (no_of_catagary_P_A_I >= 3)
                        //{

                        //    ////////////////LAYER ONE//////////////
                        //    iTextSharp.text.Table TABLE111 = new iTextSharp.text.Table(5);
                        //    TABLE111.Alignment = 0;
                        //    TABLE111.Width = 100;
                        //    int[] widths1 = new int[] { 32, 02, 32, 02, 32 };
                        //    TABLE111.SetWidths(widths1);
                        //    TABLE111.DefaultCellBorder = 0;
                        //    TABLE111.Border = 0;

                        //    String catagary_dis13 = smry_dsOccupationalCount_P_A_I.Tables[0].Rows[0][0].ToString();
                        //    String catagary_dis23 = smry_dsOccupationalCount_P_A_I.Tables[0].Rows[1][0].ToString();
                        //    String catagary_dis33 = smry_dsOccupationalCount_P_A_I.Tables[0].Rows[2][0].ToString();

                        //    Cell Cell111 = new Cell();
                        //    iTextSharp.text.Image jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/career_blank.png"));
                        //    if (catagary_dis13 == "Analysis") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/analysis.png")); jpeg955.ScalePercent(35f); }
                        //    else if (catagary_dis13 == "Creativity") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/creativity.png")); }
                        //    else if (catagary_dis13 == "Equipment") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/equipment.png")); }
                        //    else if (catagary_dis13 == "Financial") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/financial.png")); }
                        //    else if (catagary_dis13 == "Observation & Analysis") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/observation.png")); }
                        //    else if (catagary_dis13 == "People") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/people.png")); }
                        //    else if (catagary_dis13 == "Process") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/process.png")); }
                        //    else if (catagary_dis13 == "Research") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/research.png")); }
                        //    else if (catagary_dis13 == "Results") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/result.png")); }
                        //    else if (catagary_dis13 == "Service") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/service.png")); } //
                        //    else if (catagary_dis13 == "Independence") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/independence.png")); }
                        //    jpeg955.ScaleToFit(150f, 332f);
                        //    //Cell111.Width = 500f;
                        //    Cell111.Add(jpeg955);
                        //    Cell111.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    Cell111.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        //    TABLE111.AddCell(Cell111);

                        //    Cell CellSpace222 = new Cell();
                        //    CellSpace222.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace222.Width = 10;
                        //    CellSpace222.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE111.AddCell(CellSpace222);

                        //    Cell Cell222 = new Cell();
                        //    iTextSharp.text.Image jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/career_blank.png"));
                        //    if (catagary_dis23 == "Analysis") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/analysis.png")); jpeg900555.ScalePercent(35f); }
                        //    else if (catagary_dis23 == "Creativity") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/creativity.png")); }
                        //    else if (catagary_dis23 == "Equipment") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/equipment.png")); }
                        //    else if (catagary_dis23 == "Financial") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/financial.png")); }
                        //    else if (catagary_dis23 == "Observation & Analysis") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/observation.png")); }
                        //    else if (catagary_dis23 == "People") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/people.png")); }
                        //    else if (catagary_dis23 == "Process") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/process.png")); }
                        //    else if (catagary_dis23 == "Research") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/research.png")); }
                        //    else if (catagary_dis23 == "Results") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/result.png")); }
                        //    else if (catagary_dis23 == "Service") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/service.png")); }
                        //    else if (catagary_dis23 == "Independence") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/independence.png")); }
                        //    jpeg900555.ScaleToFit(150f, 332f);
                        //    //Cell111.Width = 500f;
                        //    Cell222.Add(jpeg900555);
                        //    Cell222.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE111.AddCell(Cell222);

                        //    Cell CellSpace333 = new Cell();
                        //    CellSpace333.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace333.Width = 10;
                        //    CellSpace333.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE111.AddCell(CellSpace333);

                        //    Cell Cell333 = new Cell();
                        //    iTextSharp.text.Image jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/career_blank.png"));
                        //    if (catagary_dis33 == "Analysis") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/analysis.png")); }
                        //    else if (catagary_dis33 == "Creativity") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/creativity.png")); jpeg90055.ScalePercent(35f); }
                        //    else if (catagary_dis33 == "Equipment") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/equipment.png")); }
                        //    else if (catagary_dis33 == "Financial") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/financial.png")); }
                        //    else if (catagary_dis33 == "Observation & Analysis") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/observation.png")); }
                        //    else if (catagary_dis33 == "People") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/people.png")); }
                        //    else if (catagary_dis33 == "Process") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/process.png")); }
                        //    else if (catagary_dis33 == "Research") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/research.png")); }
                        //    else if (catagary_dis33 == "Results") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/result.png")); }
                        //    else if (catagary_dis33 == "Service") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/service.png")); }
                        //    else if (catagary_dis33 == "Independence") { jpeg90055 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/independence.png")); }
                        //    jpeg90055.ScaleToFit(150f, 332f);
                        //    //Cell111.Width = 500f;
                        //    Cell333.Add(jpeg90055);
                        //    Cell333.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE111.AddCell(Cell333);

                        //    maintabl11_P_A_I.Add(TABLE111);
                        //    maintableb100_P_A_I.AddCell(maintabl11_P_A_I);

                        //    ////////////////////LAYER TWO//////////////////////
                        //    iTextSharp.text.Table TABLE222 = new iTextSharp.text.Table(5);
                        //    TABLE222.Alignment = 0;
                        //    TABLE222.Width = 100;
                        //    int[] widths2 = new int[] { 32, 02, 32, 02, 32 };
                        //    TABLE222.SetWidths(widths2);
                        //    TABLE222.DefaultCellBorder = 0;
                        //    TABLE222.Border = 0;

                        //    Cell Cell444 = new Cell();
                        //    Cell444.Add(new Paragraph(smry_dsOccupationalCount_P_A_I.Tables[0].Rows[0][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                        //    //Cell444.Width = 200;
                        //    Cell444.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    Cell444.VerticalAlignment = iTextSharp.text.Element.ALIGN_TOP;
                        //    TABLE222.AddCell(Cell444);

                        //    Cell CellSpace444 = new Cell();
                        //    CellSpace444.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace444.Width = 10;
                        //    CellSpace444.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE222.AddCell(CellSpace444);

                        //    Cell Cell555 = new Cell();
                        //    Cell555.Add(new Paragraph(smry_dsOccupationalCount_P_A_I.Tables[0].Rows[1][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                        //    //Cell555.Width = 200;
                        //    Cell555.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE222.AddCell(Cell555);

                        //    Cell CellSpace555 = new Cell();
                        //    CellSpace555.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace555.Width = 10;
                        //    CellSpace555.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE222.AddCell(CellSpace555);

                        //    Cell Cell666 = new Cell();
                        //    Cell666.Add(new Paragraph(smry_dsOccupationalCount_P_A_I.Tables[0].Rows[2][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                        //    //Cell666.Width = 200;
                        //    Cell666.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE222.AddCell(Cell666);


                        //    maintabl22_P_A_I.Add(TABLE222);
                        //    maintableb100_P_A_I.AddCell(maintabl22_P_A_I);
                        //    ////////////////////LAYER THREE//////////////////////
                        //    iTextSharp.text.Table TABLE333 = new iTextSharp.text.Table(5);
                        //    TABLE333.Alignment = 0;
                        //    TABLE333.Width = 100;
                        //    int[] widths3 = new int[] { 32, 02, 32, 02, 32 };
                        //    TABLE333.SetWidths(widths3);
                        //    TABLE333.DefaultCellBorder = 0;
                        //    TABLE333.Border = 0;



                        //    DataSet catdisss13 = new DataSet();
                        //    String catdissss13 = "select * from career_cat_dis where careercat_name = '" + catagary_dis13 + "' ";
                        //    catdisss13 = clsdal.ExecDataSet(catdissss13);
                        //    String catdiscription13 = catdisss13.Tables[0].Rows[0].ItemArray[3].ToString();

                        //    Cell Cell777 = new Cell();
                        //    Cell777.Add(new Paragraph(catdiscription13, FontFactory.GetFont(FontFactory.HELVETICA, 08, Font.BOLD)));
                        //    //Cell777.Width = 20f;

                        //    Cell777.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE333.AddCell(Cell777);


                        //    Cell CellSpace777 = new Cell();
                        //    CellSpace777.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace777.Width = 10;
                        //    CellSpace777.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE333.AddCell(CellSpace777);

                        //    DataSet catdisss23 = new DataSet();
                        //    String catdissss23 = "select * from career_cat_dis where careercat_name = '" + catagary_dis23 + "' ";
                        //    catdisss23 = clsdal.ExecDataSet(catdissss23);
                        //    String catdiscription23 = catdisss23.Tables[0].Rows[0].ItemArray[3].ToString();

                        //    Cell Cell888 = new Cell();
                        //    Cell888.Add(new Paragraph(catdiscription23, FontFactory.GetFont(FontFactory.HELVETICA, 08, Font.BOLD)));
                        //    //Cell888.Width = 20f;
                        //    Cell888.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE333.AddCell(Cell888);

                        //    Cell CellSpace888 = new Cell();
                        //    CellSpace888.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace888.Width = 10;
                        //    CellSpace888.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE333.AddCell(CellSpace888);

                        //    DataSet catdisss33 = new DataSet();
                        //    String catdissss33 = "select * from career_cat_dis where careercat_name = '" + catagary_dis33 + "' ";
                        //    catdisss33 = clsdal.ExecDataSet(catdissss33);
                        //    String catdiscription33 = catdisss33.Tables[0].Rows[0].ItemArray[3].ToString();

                        //    Cell Cell999 = new Cell();
                        //    Cell999.Add(new Paragraph(catdiscription33, FontFactory.GetFont(FontFactory.HELVETICA, 08, Font.BOLD)));
                        //    //Cell999.Width = 20f;
                        //    Cell999.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE333.AddCell(Cell999);

                        //    maintabl33_P_A_I.Add(TABLE333);
                        //    maintableb100_P_A_I.AddCell(maintabl33_P_A_I);
                        //}

                        //if (no_of_catagary_P_A_I == 2)
                        //{
                        //    int[] widths = new int[] { 49, 02, 49 };
                        //    ////////////////LAYER ONE//////////////
                        //    iTextSharp.text.Table TABLE111 = new iTextSharp.text.Table(3);
                        //    TABLE111.Alignment = 0;
                        //    TABLE111.Width = 100;
                        //    TABLE111.SetWidths(widths);
                        //    TABLE111.DefaultCellBorder = 0;
                        //    TABLE111.Border = 0;

                        //    String catagary_dis12 = smry_dsOccupationalCount_P_A_I.Tables[0].Rows[0][0].ToString();
                        //    String catagary_dis22 = smry_dsOccupationalCount_P_A_I.Tables[0].Rows[1][0].ToString();

                        //    Cell Cell111 = new Cell();
                        //    iTextSharp.text.Image jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/career_blank.png"));
                        //    if (catagary_dis12 == "Analysis") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/analysis.png")); }
                        //    else if (catagary_dis12 == "Creativity") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/creativity.png")); jpeg955.ScalePercent(35f); }
                        //    else if (catagary_dis12 == "Equipment") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/equipment.png")); }
                        //    else if (catagary_dis12 == "Financial") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/financial.png")); }
                        //    else if (catagary_dis12 == "Observation & Analysis") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/observation.png")); }
                        //    else if (catagary_dis12 == "People") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/people.png")); }
                        //    else if (catagary_dis12 == "Process") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/process.png")); }
                        //    else if (catagary_dis12 == "Research") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/research.png")); }
                        //    else if (catagary_dis12 == "Results") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/result.png")); }
                        //    else if (catagary_dis12 == "Service") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/service.png")); }
                        //    else if (catagary_dis12 == "Independence") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/independence.png")); }
                        //    jpeg955.ScaleToFit(150f, 332f);
                        //    //Cell111.Width = 500f;
                        //    Cell111.Add(jpeg955);
                        //    Cell111.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    Cell111.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        //    TABLE111.AddCell(Cell111);

                        //    Cell CellSpace222 = new Cell();
                        //    CellSpace222.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace222.Width = 10;
                        //    CellSpace222.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE111.AddCell(CellSpace222);

                        //    Cell Cell222 = new Cell();
                        //    iTextSharp.text.Image jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/career_blank.png"));
                        //    if (catagary_dis22 == "Analysis") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/analysis.png")); }
                        //    else if (catagary_dis22 == "Creativity") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/creativity.png")); jpeg900555.ScalePercent(35f); }
                        //    else if (catagary_dis22 == "Equipment") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/equipment.png")); }
                        //    else if (catagary_dis22 == "Financial") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/financial.png")); }
                        //    else if (catagary_dis22 == "Observation & Analysis") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/observation.png")); }
                        //    else if (catagary_dis22 == "People") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/people.png")); }
                        //    else if (catagary_dis22 == "Process") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/research.png")); }
                        //    else if (catagary_dis22 == "Research") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/research.png")); }
                        //    else if (catagary_dis22 == "Results") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/result.png")); }
                        //    else if (catagary_dis22 == "Service") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/service.png")); }
                        //    else if (catagary_dis22 == "Independence") { jpeg900555 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/independence.png")); }
                        //    jpeg900555.ScaleToFit(150f, 332f);


                        //    //Cell222.Width = 500f;
                        //    Cell222.Add(jpeg900555);
                        //    Cell222.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    //Cell222.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    //Cell222.Add(new Paragraph("SERVICE", pop8_bold_dark));
                        //    //Cell222.BackgroundColor = new Color(255, 255, 0);
                        //    TABLE111.AddCell(Cell222);

                        //    maintabl11_P_A_I.Add(TABLE111);
                        //    maintableb100_P_A_I.AddCell(maintabl11_P_A_I);

                        //    ////////////////////LAYER TWO//////////////////////
                        //    iTextSharp.text.Table TABLE222 = new iTextSharp.text.Table(3);
                        //    TABLE222.Alignment = 0;
                        //    TABLE222.Width = 100;
                        //    TABLE222.SetWidths(widths);
                        //    TABLE222.DefaultCellBorder = 0;
                        //    TABLE222.Border = 0;

                        //    String catagary111 = smry_dsOccupationalCount_P_A_I.Tables[0].Rows[0][0].ToString();

                        //    Cell Cell444 = new Cell();
                        //    Cell444.Add(new Paragraph(smry_dsOccupationalCount_P_A_I.Tables[0].Rows[0][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                        //    //Cell444.Width = 200;
                        //    Cell444.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    Cell444.VerticalAlignment = iTextSharp.text.Element.ALIGN_TOP;
                        //    TABLE222.AddCell(Cell444);

                        //    Cell CellSpace444 = new Cell();
                        //    CellSpace444.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace444.Width = 10;
                        //    CellSpace444.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE222.AddCell(CellSpace444);

                        //    Cell Cell555 = new Cell();
                        //    Cell555.Add(new Paragraph(smry_dsOccupationalCount_P_A_I.Tables[0].Rows[1][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                        //    //Cell555.Width = 200;
                        //    Cell555.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE222.AddCell(Cell555);

                        //    maintabl22_P_A_I.Add(TABLE222);
                        //    maintableb100_P_A_I.AddCell(maintabl22_P_A_I);
                        //    ////////////////////LAYER THREE//////////////////////
                        //    iTextSharp.text.Table TABLE333 = new iTextSharp.text.Table(3);
                        //    TABLE333.Alignment = 0;
                        //    TABLE333.Width = 100;
                        //    TABLE333.SetWidths(widths);
                        //    TABLE333.DefaultCellBorder = 0;
                        //    TABLE333.Border = 0;

                        //    DataSet catdisss12 = new DataSet();
                        //    String catdissss12 = "select * from career_cat_dis where careercat_name = '" + catagary_dis12 + "' ";
                        //    catdisss12 = clsdal.ExecDataSet(catdissss12);
                        //    String catdiscription12 = catdisss12.Tables[0].Rows[0].ItemArray[3].ToString();

                        //    Cell Cell777 = new Cell();
                        //    //Cell777.Add(new Paragraph(catdiscription12, FontFactory.GetFont(FontFactory.HELVETICA, 12, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //Cell777.BorderWidth = 10;
                        //    //Cell777.Border = 10;
                        //    //Cell777.SetWidth("10f");
                        //    ////Cell777.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        //    Cell777.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    //Cell777.BorderWidthRight = 1f;
                        //    //TABLE333.AddCell(Cell777);

                        //    Paragraph pp777 = new Paragraph();
                        //    Phrase ph777 = new Phrase(18, new Chunk("\n" + catdiscription12, FontFactory.GetFont(FontFactory.HELVETICA, 08, Font.BOLD)));
                        //    pp777.Add(ph777);
                        //    //pp7.Add(limage);
                        //    Cell777.Add(pp777);
                        //    TABLE333.AddCell(Cell777);

                        //    Cell CellSpace777 = new Cell();
                        //    CellSpace777.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 14, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //CellSpace777.Width = 10;
                        //    CellSpace777.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE333.AddCell(CellSpace777);

                        //    DataSet catdisss22 = new DataSet();
                        //    String catdissss22 = "select * from career_cat_dis where careercat_name = '" + catagary_dis22 + "' ";
                        //    catdisss22 = clsdal.ExecDataSet(catdissss22);
                        //    String catdiscription22 = catdisss22.Tables[0].Rows[0].ItemArray[3].ToString();

                        //    Cell Cell888 = new Cell();
                        //    //Cell888.Add(new Paragraph(catdiscription22, FontFactory.GetFont(FontFactory.HELVETICA, 10, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                        //    //Cell777.SetWidth("200f");
                        //    ////Cell888.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        //    Cell888.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    //Cell888.BorderWidthLeft = 1f;
                        //    //TABLE333.AddCell(Cell888);

                        //    Paragraph pp888 = new Paragraph();
                        //    Phrase ph888 = new Phrase(18, new Chunk("\n\t\t\t    " + catdiscription22, FontFactory.GetFont(FontFactory.HELVETICA, 08, Font.BOLD)));
                        //    pp888.Add(ph888);
                        //    //pp7.Add(limage);
                        //    Cell888.Add(pp888);
                        //    TABLE333.AddCell(Cell888);

                        //    maintabl33_P_A_I.Add(TABLE333);
                        //    maintableb100_P_A_I.AddCell(maintabl33_P_A_I);
                        //}

                        //if (no_of_catagary_P_A_I == 1)
                        //{

                        //    ////////////////LAYER ONE//////////////
                        //    iTextSharp.text.Table TABLE111 = new iTextSharp.text.Table(1);
                        //    TABLE111.Alignment = 0;
                        //    TABLE111.Width = 100;
                        //    TABLE111.DefaultCellBorder = 0;
                        //    TABLE111.Border = 0;

                        //    String catagary_dis11 = smry_dsOccupationalCount_P_A_I.Tables[0].Rows[0][0].ToString();

                        //    Cell Cell111 = new Cell();
                        //    iTextSharp.text.Image jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/career_blank.png"));
                        //    if (catagary_dis11 == "Analysis") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/analysis.png")); }
                        //    else if (catagary_dis11 == "Creativity") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/creativity.png")); jpeg955.ScalePercent(35f); }
                        //    else if (catagary_dis11 == "Equipment") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/equipment.png")); }
                        //    else if (catagary_dis11 == "Financial") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/financial.png")); }
                        //    else if (catagary_dis11 == "Observation & Analysis") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/observation.png")); }
                        //    else if (catagary_dis11 == "People") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/people.png")); }
                        //    else if (catagary_dis11 == "Process") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/research.png")); }
                        //    else if (catagary_dis11 == "Research") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/research.png")); }
                        //    else if (catagary_dis11 == "Results") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/result.png")); }
                        //    else if (catagary_dis11 == "Service") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/service.png")); }
                        //    else if (catagary_dis11 == "Independence") { jpeg955 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/independence.png")); }
                        //    jpeg955.ScaleToFit(150f, 332f);
                        //    Cell111.Width = 20f;
                        //    Cell111.Add(jpeg955);
                        //    Cell111.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    Cell111.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
                        //    TABLE111.AddCell(Cell111);

                        //    maintabl11_P_A_I.Add(TABLE111);
                        //    maintableb100_P_A_I.AddCell(maintabl11_P_A_I);

                        //    ////////////////////LAYER TWO//////////////////////
                        //    iTextSharp.text.Table TABLE222 = new iTextSharp.text.Table(1);
                        //    TABLE222.Alignment = 0;
                        //    TABLE222.Width = 100;
                        //    TABLE222.DefaultCellBorder = 0;
                        //    TABLE222.Border = 0;

                        //    Cell Cell444 = new Cell();
                        //    Cell444.Add(new Paragraph(smry_dsOccupationalCount_P_A_I.Tables[0].Rows[0][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                        //    Cell444.Width = 20f;
                        //    Cell444.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    Cell444.VerticalAlignment = iTextSharp.text.Element.ALIGN_TOP;
                        //    TABLE222.AddCell(Cell444);

                        //    maintabl22_P_A_I.Add(TABLE222);
                        //    maintableb100_P_A_I.AddCell(maintabl22_P_A_I);
                        //    ////////////////////LAYER THREE//////////////////////
                        //    iTextSharp.text.Table TABLE333 = new iTextSharp.text.Table(1);
                        //    TABLE333.Alignment = 0;
                        //    TABLE333.Width = 100;
                        //    TABLE333.DefaultCellBorder = 0;
                        //    TABLE333.Border = 0;

                        //    DataSet catdisss11 = new DataSet();
                        //    String catdissss11 = "select * from career_cat_dis where careercat_name = '" + catagary_dis11 + "' ";
                        //    catdisss11 = clsdal.ExecDataSet(catdissss11);
                        //    String catdiscription11 = catdisss11.Tables[0].Rows[0].ItemArray[3].ToString();

                        //    Cell Cell777 = new Cell();
                        //    Cell777.Add(new Paragraph(catdiscription11, FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        //    Cell777.Width = 20f;
                        //    Cell777.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                        //    TABLE333.AddCell(Cell777);

                        //    maintabl33_P_A_I.Add(TABLE333);
                        //    maintableb100_P_A_I.AddCell(maintabl33_P_A_I);
                        //}

                        //doc.Add(maintableb100_P_A_I);
                        //#endregion Careers By Personality (RAPD) & Ability & Interest


                        //////////////////////////////Updation - 19-2-2019 -  Only Combine All - Resion Page not found/////////
                        #region CAREERS BY (RAPD/PERSONALITY)

                        string sql_qry2 = "sp_career_by_RAPD_Ability_Interest1";
                        int status2 = 2; // Get Candidate Career By RAPD
                        DataSet ds_candidate_career_By_RAPD = clsdal.ExecDataSet(sql_qry2, status2, c_id);
                        string careers_By_RAPD = "";
                        if (ds_candidate_career_By_RAPD.Tables[0].Rows.Count == 0)
                        {
                            careers_By_RAPD = "0";
                        }
                        else
                        {
                            for (int i = 0; i < ds_candidate_career_By_RAPD.Tables[0].Rows.Count; i++)
                            {
                                if (i == 0)
                                {
                                    careers_By_RAPD = ds_candidate_career_By_RAPD.Tables[0].Rows[i][0].ToString();
                                }
                                else
                                {
                                    careers_By_RAPD = careers_By_RAPD + "," + ds_candidate_career_By_RAPD.Tables[0].Rows[i][0].ToString();
                                }
                            }
                        }

                        #endregion CAREERS BY (RAPD/PERSONALITY)

                        #region CAREERS BY ABILITY

                        string sql_qry3 = "sp_career_by_RAPD_Ability_Interest1";
                        int status3 = 3; // Get Candidate Career By Ability
                        DataSet ds_candidate_career_By_Ability = clsdal.ExecDataSet(sql_qry3, status3, c_id);

                        string careers_By_Ability = "";

                        if (ds_candidate_career_By_Ability.Tables[0].Rows.Count == 0)
                        {
                            careers_By_Ability = "0";
                        }
                        else
                        {
                            for (int i = 0; i < ds_candidate_career_By_Ability.Tables[0].Rows.Count; i++)
                            {
                                if (i == 0)
                                {
                                    careers_By_Ability = ds_candidate_career_By_Ability.Tables[0].Rows[i][0].ToString();
                                }
                                else
                                {
                                    careers_By_Ability = careers_By_Ability + "," + ds_candidate_career_By_Ability.Tables[0].Rows[i][0].ToString();
                                }
                            }
                        }

                        #endregion CAREERS BY ABILITY

                        #region CAREERS BY INTEREST

                        string sql_qry4 = "sp_career_by_RAPD_Ability_Interest1";
                        int status4 = 4; // Read Candidate Interest
                        DataSet ds_candidate_career_By_Interest = clsdal.ExecDataSet(sql_qry4, status4, c_id);

                        string careers_By_Interest = "";
                        if (ds_candidate_career_By_Interest.Tables[0].Rows.Count == 0)
                        {
                            careers_By_Interest = "0";
                        }
                        else
                        {
                            for (int i = 0; i < ds_candidate_career_By_Interest.Tables[0].Rows.Count; i++)
                            {
                                if (i == 0)
                                {
                                    careers_By_Interest = ds_candidate_career_By_Interest.Tables[0].Rows[i][0].ToString();
                                }
                                else
                                {
                                    careers_By_Interest = careers_By_Interest + "," + ds_candidate_career_By_Interest.Tables[0].Rows[i][0].ToString();
                                }
                            }
                        }

                        #endregion CAREERS BY INTEREST

                        #region Careers By Personality (RAPD) & Ability & Interest

                        int RAPD = ds_candidate_career_By_RAPD.Tables[0].Rows.Count;
                        int Ability = ds_candidate_career_By_Ability.Tables[0].Rows.Count;
                        int Interest = ds_candidate_career_By_Interest.Tables[0].Rows.Count;

                        DataSet ds_candidate_career_By_P_A_I = new DataSet();
                        ds_candidate_career_By_RAPD.Merge(ds_candidate_career_By_Ability);
                        ds_candidate_career_By_Interest.Merge(ds_candidate_career_By_RAPD);
                        ds_candidate_career_By_P_A_I.Merge(ds_candidate_career_By_Interest);

                        int PAI = ds_candidate_career_By_P_A_I.Tables[0].Rows.Count;

                        string careers_By_P_A_I = "";
                        if (ds_candidate_career_By_P_A_I.Tables[0].Rows.Count == 0)
                        {
                            careers_By_P_A_I = "0";
                        }
                        else
                        {
                            for (int i = 0; i < ds_candidate_career_By_P_A_I.Tables[0].Rows.Count; i++)
                            {
                                if (i == 0)
                                {
                                    careers_By_P_A_I = ds_candidate_career_By_P_A_I.Tables[0].Rows[i][0].ToString();
                                }
                                else
                                {
                                    careers_By_P_A_I = careers_By_P_A_I + "," + ds_candidate_career_By_P_A_I.Tables[0].Rows[i][0].ToString();
                                }
                            }
                        }

                        #endregion Careers By Personality (RAPD) & Ability & Interest
                        ////////////////////////////////////////////////////////////////////////////////////////////

                        //////////////////////////////////////last third page

                        doc.Add(dheyalogo);
                        doc.NewPage();
                        iTextSharp.text.Image jpeg20 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/lastthirdpage1.png"));
                        //jpeg.ScalePercent(35f);
                        jpeg20.ScaleToFit(600f, 550f);
                        jpeg20.SetAbsolutePosition(0, 0);
                        // jpeg.SpacingAfter = -50f;
                        // doc.Add(jpeg20);

                        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

                        //// Query For Ability
                        //strcmd = "SELECT top 5 ability_code FROM (select distinct c_id,test_id,ability_code,P_rating,rating from tbl_candidate_test_results where c_id = '" + c_id + "') as x where c_id = '" + c_id + "'order by P_rating desc";
                        //DataSet smry_bg_top3_ability_ds = clsdb_Xaction.ExecDataSet(strcmd);

                        ////Query For Interest
                        //strcmd = "";
                        //strcmd = "SELECT top 5 tbl_report_interest_test_discription.i_factor FROM tbl_report_interest_test_discription INNER JOIN (SELECT TOP (5) factor_no FROM (SELECT DISTINCT c_id, factor_no, rating, P_rating FROM tbl_II_cand_factors WHERE (c_id = '" + c_id + "')) AS x_1 WHERE (c_id = '" + c_id + "') ORDER BY P_rating DESC) AS w ON tbl_report_interest_test_discription.factor_no = w.factor_no";
                        //DataSet smry_ibg_top3_ability_ds = clsdb_Xaction.ExecDataSet(strcmd);

                        //// Query For Personality
                        //strcmd = "";
                        //strcmd = "SELECT tbl_report_personality_test_discription.p_factor FROM tbl_report_personality_test_discription INNER JOIN (SELECT TOP (5) factor_no FROM (SELECT DISTINCT c_id, factor_no, New_P_rating, rating, P_rating FROM tbl_KY_cand_factors WHERE (c_id = '" + c_id + "') AND factor_no <> 2) AS x_1 WHERE (c_id = '" + c_id + "') ORDER BY P_rating DESC) AS w ON tbl_report_personality_test_discription.factor_no = w.factor_no";
                        //DataSet smry_pbg_top3_ability_ds = clsdb_Xaction.ExecDataSet(strcmd);

                        ////Query For Combined OF ABILITY Interest And Personality
                        //strcmd = "";
                        //strcmd = " SELECT distinct A.ca_id As CareerID, B.Career_category As CareerCategory,B.Occupational_category As OccupationalCategory," +
                        //       " B.basic_info1 As Career FROM tbl_career_ability_master AS A INNER JOIN tbl_career_master As B ON A.ca_id = B.ca_id " +
                        //       " WHERE (ability1 = '" + smry_bg_top3_ability_ds.Tables[0].Rows[0][0].ToString() + "' or ability2 = '" + smry_bg_top3_ability_ds.Tables[0].Rows[0][0].ToString() + "' or ability3 = '" + smry_bg_top3_ability_ds.Tables[0].Rows[0][0].ToString() + "')  AND A.ca_id in " +
                        //       " (SELECT [ca_id] FROM tbl_career_ability_master WHERE (ability1 = '" + smry_bg_top3_ability_ds.Tables[0].Rows[1][0].ToString() + "'  or ability2 = '" + smry_bg_top3_ability_ds.Tables[0].Rows[1][0].ToString() + "' or ability3 = '" + smry_bg_top3_ability_ds.Tables[0].Rows[1][0].ToString() + "') AND " +
                        //       " A.ca_id in  (SELECT [ca_id] FROM tbl_career_ability_master where ability1 = '" + smry_bg_top3_ability_ds.Tables[0].Rows[2][0].ToString() + "' " +
                        //       " or ability2 = '" + smry_bg_top3_ability_ds.Tables[0].Rows[2][0].ToString() + "' or ability3 = '" + smry_bg_top3_ability_ds.Tables[0].Rows[2][0].ToString() + "') )  AND B.Career_category IS NOT NULL " +
                        //       " UNION  " +
                        //       " (SELECT distinct ca_id As CareerID, Career_category As CareerCategory,Occupational_category As OccupationalCategory,basic_info1 As Career  FROM tbl_career_master" +
                        //       "  WHERE (basic_info4 = '" + smry_ibg_top3_ability_ds.Tables[0].Rows[0][0].ToString() + "' or basic_info5 = '" + smry_ibg_top3_ability_ds.Tables[0].Rows[0][0].ToString() + "')  " +
                        //       " AND ca_id in (SELECT distinct ca_id FROM tbl_career_master where basic_info4 = '" + smry_ibg_top3_ability_ds.Tables[0].Rows[1][0].ToString() + "' or basic_info5 = '" + smry_ibg_top3_ability_ds.Tables[0].Rows[1][0].ToString() + "')AND Career_category IS NOT NULL)" +
                        //       " UNION " +
                        //       " (SELECT distinct A.ca_id As CareerID, B.Career_category As CareerCategory,B.Occupational_category As OccupationalCategory, B.basic_info1 As Career FROM tbl_career_personality_master AS A INNER JOIN tbl_career_master As B ON A.ca_id = B.ca_id " +
                        //       " where (personality1='" + smry_pbg_top3_ability_ds.Tables[0].Rows[0][0].ToString() + "' OR personality2='" + smry_pbg_top3_ability_ds.Tables[0].Rows[0][0].ToString() + "' OR personality3='" + smry_pbg_top3_ability_ds.Tables[0].Rows[0][0].ToString() + "') " +
                        //       " AND A.ca_id in(SELECT [ca_id] FROM tbl_career_personality_master WHERE (personality1 = '" + smry_pbg_top3_ability_ds.Tables[0].Rows[1][0].ToString() + "' or personality2 = '" + smry_pbg_top3_ability_ds.Tables[0].Rows[1][0].ToString() + "' or personality3 = '" + smry_pbg_top3_ability_ds.Tables[0].Rows[1][0].ToString() + "'))" +
                        //       " AND A.ca_id in  (SELECT [ca_id] FROM tbl_career_personality_master WHERE (personality1 = '" + smry_pbg_top3_ability_ds.Tables[0].Rows[2][0].ToString() + "' or personality2 = '" + smry_pbg_top3_ability_ds.Tables[0].Rows[2][0].ToString() + "' or personality3 = '" + smry_pbg_top3_ability_ds.Tables[0].Rows[2][0].ToString() + "'))" +
                        //       " AND B.Career_category IS NOT NULL) order by B.Career_category";
                        ////////////////
                        ////strcmd = " SELECT distinct A.ca_id As CareerID, B.Career_category As CareerCategory,B.Occupational_category As OccupationalCategory," +
                        ////      " B.basic_info1 As Career FROM tbl_career_ability_master AS A INNER JOIN tbl_career_master As B ON A.ca_id = B.ca_id " +
                        ////      " WHERE (ability1 = '" + smry_bg_top3_ability_ds.Tables[0].Rows[0][0].ToString() + "' or ability2 = '" + smry_bg_top3_ability_ds.Tables[0].Rows[0][0].ToString() + "' or ability3 = '" + smry_bg_top3_ability_ds.Tables[0].Rows[0][0].ToString() + "')  AND A.ca_id in " +
                        ////      " (SELECT [ca_id] FROM tbl_career_ability_master WHERE (ability1 = '" + smry_bg_top3_ability_ds.Tables[0].Rows[1][0].ToString() + "'  or ability2 = '" + smry_bg_top3_ability_ds.Tables[0].Rows[1][0].ToString() + "' or ability3 = '" + smry_bg_top3_ability_ds.Tables[0].Rows[1][0].ToString() + "') AND " +
                        ////      " A.ca_id in  (SELECT [ca_id] FROM tbl_career_ability_master where ability1 = '" + smry_bg_top3_ability_ds.Tables[0].Rows[2][0].ToString() + "' " +
                        ////      " or ability2 = '" + smry_bg_top3_ability_ds.Tables[0].Rows[2][0].ToString() + "' or ability3 = '" + smry_bg_top3_ability_ds.Tables[0].Rows[2][0].ToString() + "') )  AND" +
                        ////       " A.ca_id in  (SELECT [ca_id] FROM tbl_career_ability_master where ability1 = '" + smry_bg_top3_ability_ds.Tables[0].Rows[3][0].ToString() + "' " +
                        ////      " or ability2 = '" + smry_bg_top3_ability_ds.Tables[0].Rows[3][0].ToString() + "' or ability3 = '" + smry_bg_top3_ability_ds.Tables[0].Rows[3][0].ToString() + "') )  AND" +
                        ////       " A.ca_id in  (SELECT [ca_id] FROM tbl_career_ability_master where ability1 = '" + smry_bg_top3_ability_ds.Tables[0].Rows[4][0].ToString() + "' " +
                        ////      " or ability2 = '" + smry_bg_top3_ability_ds.Tables[0].Rows[4][0].ToString() + "' or ability3 = '" + smry_bg_top3_ability_ds.Tables[0].Rows[4][0].ToString() + "') )  AND B.Career_category IS NOT NULL " +
                        ////      " UNION  " +
                        ////      " (SELECT distinct ca_id As CareerID, Career_category As CareerCategory,Occupational_category As OccupationalCategory,basic_info1 As Career  FROM tbl_career_master" +
                        ////      "  WHERE (basic_info4 = '" + smry_ibg_top3_ability_ds.Tables[0].Rows[0][0].ToString() + "' or basic_info5 = '" + smry_ibg_top3_ability_ds.Tables[0].Rows[0][0].ToString() + "' or basic_info6 = '" + smry_ibg_top3_ability_ds.Tables[0].Rows[0][0].ToString() + "')  " +
                        ////      " AND ca_id in (SELECT distinct ca_id FROM tbl_career_master where basic_info4 = '" + smry_ibg_top3_ability_ds.Tables[0].Rows[1][0].ToString() + "' or basic_info5 = '" + smry_ibg_top3_ability_ds.Tables[0].Rows[1][0].ToString() + "' or basic_info6 = '" + smry_ibg_top3_ability_ds.Tables[0].Rows[1][0].ToString() + "')" +
                        ////      " AND ca_id in (SELECT distinct ca_id FROM tbl_career_master where basic_info4 = '" + smry_ibg_top3_ability_ds.Tables[0].Rows[2][0].ToString() + "' or basic_info5 = '" + smry_ibg_top3_ability_ds.Tables[0].Rows[2][0].ToString() + "' or basic_info6 = '" + smry_ibg_top3_ability_ds.Tables[0].Rows[2][0].ToString() + "')" +
                        ////      " AND ca_id in (SELECT distinct ca_id FROM tbl_career_master where basic_info4 = '" + smry_ibg_top3_ability_ds.Tables[0].Rows[3][0].ToString() + "' or basic_info5 = '" + smry_ibg_top3_ability_ds.Tables[0].Rows[3][0].ToString() + "' or basic_info6 = '" + smry_ibg_top3_ability_ds.Tables[0].Rows[3][0].ToString() + "')" +
                        ////      " AND ca_id in (SELECT distinct ca_id FROM tbl_career_master where basic_info4 = '" + smry_ibg_top3_ability_ds.Tables[0].Rows[4][0].ToString() + "' or basic_info5 = '" + smry_ibg_top3_ability_ds.Tables[0].Rows[4][0].ToString() + "' or basic_info6 = '" + smry_ibg_top3_ability_ds.Tables[0].Rows[4][0].ToString() + "')AND Career_category IS NOT NULL)" +
                        ////      " UNION " +
                        ////      " (SELECT distinct A.ca_id As CareerID, B.Career_category As CareerCategory,B.Occupational_category As OccupationalCategory, B.basic_info1 As Career FROM tbl_career_personality_master AS A INNER JOIN tbl_career_master As B ON A.ca_id = B.ca_id " +
                        ////      " where (personality1='" + smry_pbg_top3_ability_ds.Tables[0].Rows[0][0].ToString() + "' OR personality2='" + smry_pbg_top3_ability_ds.Tables[0].Rows[0][0].ToString() + "' OR personality3='" + smry_pbg_top3_ability_ds.Tables[0].Rows[0][0].ToString() + "') " +
                        ////      " AND A.ca_id in(SELECT [ca_id] FROM tbl_career_personality_master WHERE (personality1 = '" + smry_pbg_top3_ability_ds.Tables[0].Rows[1][0].ToString() + "' or personality2 = '" + smry_pbg_top3_ability_ds.Tables[0].Rows[1][0].ToString() + "' or personality3 = '" + smry_pbg_top3_ability_ds.Tables[0].Rows[1][0].ToString() + "'))" +
                        ////      " AND A.ca_id in  (SELECT [ca_id] FROM tbl_career_personality_master WHERE (personality1 = '" + smry_pbg_top3_ability_ds.Tables[0].Rows[2][0].ToString() + "' or personality2 = '" + smry_pbg_top3_ability_ds.Tables[0].Rows[2][0].ToString() + "' or personality3 = '" + smry_pbg_top3_ability_ds.Tables[0].Rows[2][0].ToString() + "'))" +
                        ////      " AND A.ca_id in  (SELECT [ca_id] FROM tbl_career_personality_master WHERE (personality1 = '" + smry_pbg_top3_ability_ds.Tables[0].Rows[3][0].ToString() + "' or personality2 = '" + smry_pbg_top3_ability_ds.Tables[0].Rows[3][0].ToString() + "' or personality3 = '" + smry_pbg_top3_ability_ds.Tables[0].Rows[3][0].ToString() + "'))" +
                        ////      " AND A.ca_id in  (SELECT [ca_id] FROM tbl_career_personality_master WHERE (personality1 = '" + smry_pbg_top3_ability_ds.Tables[0].Rows[4][0].ToString() + "' or personality2 = '" + smry_pbg_top3_ability_ds.Tables[0].Rows[4][0].ToString() + "' or personality3 = '" + smry_pbg_top3_ability_ds.Tables[0].Rows[4][0].ToString() + "'))" +
                        ////      " AND B.Career_category IS NOT NULL order by B.Career_category";

                        ////DataSet smry_ds_catagory_combine1 = clsdal.ExecDataSet(strcmd);


                        //strcmd = "SELECT  ca_id, basic_info6, Occupational_category, basic_info1 FROM dbo.tbl_career_master WHERE (ca_id IN(SELECT  ca_id  FROM dbo.tbl_candidate_career WHERE (c_id = '" + c_id.ToString() + "')))ORDER BY basic_info6";
                        strcmd = "SELECT  ca_id, basic_info6, Occupational_category, basic_info1 FROM dbo.tbl_career_master WHERE (ca_id IN(" + careers_By_P_A_I + "))ORDER BY basic_info6";


                        DataSet smry_ds_catagory_combine = clsdal.ExecDataSet(strcmd);

                        //int career_smry_count = smry_ds_catagory_combine.Tables[0].Rows.Count;
                        int career_smry_count_P_A_I = smry_ds_catagory_combine.Tables[0].Rows.Count;

                        //strcmd = " SELECT OccupationalCategory,COUNT(OccupationalCategory) AS CategoryCount,CONVERT(decimal(18, 2), CONVERT(decimal, COUNT(OccupationalCategory)) /" + career_smry_count + ")*100 AS Compatibility " +
                        //" FROM (SELECT distinct A.ca_id As CareerID, B.Career_category As CareerCategory,B.Occupational_category As OccupationalCategory,B.basic_info1 As Career " +
                        //" FROM tbl_career_ability_master AS A INNER JOIN tbl_career_master As B    ON A.ca_id = B.ca_id where (ability1 = '" + smry_bg_top3_ability_ds.Tables[0].Rows[0][0].ToString() + "' or ability2 = '" + smry_bg_top3_ability_ds.Tables[0].Rows[0][0].ToString() + "' or ability3 = '" + smry_bg_top3_ability_ds.Tables[0].Rows[0][0].ToString() + "') " +
                        //" AND A.ca_id in (SELECT [ca_id] FROM tbl_career_ability_master where  (ability1 = '" + smry_bg_top3_ability_ds.Tables[0].Rows[1][0].ToString() + "' or ability2 = '" + smry_bg_top3_ability_ds.Tables[0].Rows[1][0].ToString() + "'  or ability3 = '" + smry_bg_top3_ability_ds.Tables[0].Rows[1][0].ToString() + "') " +
                        //" AND A.ca_id in  (SELECT [ca_id] FROM tbl_career_ability_master where ability1 = '" + smry_bg_top3_ability_ds.Tables[0].Rows[2][0].ToString() + "'  or ability2 = '" + smry_bg_top3_ability_ds.Tables[0].Rows[2][0].ToString() + "' or ability3 = '" + smry_bg_top3_ability_ds.Tables[0].Rows[2][0].ToString() + "') )  AND B.Career_category IS NOT NULL " +
                        //" UNION  (SELECT distinct ca_id As CareerID, Career_category As CareerCategory,Occupational_category As OccupationalCategory,basic_info1 As Career  FROM tbl_career_master where (basic_info4 = '" + smry_ibg_top3_ability_ds.Tables[0].Rows[0][0].ToString() + "' or basic_info5 = '" + smry_ibg_top3_ability_ds.Tables[0].Rows[0][0].ToString() + "')   " +
                        //" AND ca_id in (SELECT distinct ca_id FROM tbl_career_master where basic_info4 = '" + smry_ibg_top3_ability_ds.Tables[0].Rows[1][0].ToString() + "' or basic_info5 = '" + smry_ibg_top3_ability_ds.Tables[0].Rows[1][0].ToString() + "')AND Career_category IS NOT NULL) " +
                        //" UNION (SELECT distinct A.ca_id As CareerID, B.Career_category As CareerCategory,B.Occupational_category As OccupationalCategory,B.basic_info1 As Career FROM tbl_career_personality_master AS A " +
                        //" INNER JOIN tbl_career_master As B    ON A.ca_id = B.ca_id where (personality1='" + smry_pbg_top3_ability_ds.Tables[0].Rows[0][0].ToString() + "' OR personality2='" + smry_pbg_top3_ability_ds.Tables[0].Rows[0][0].ToString() + "' OR personality3='" + smry_pbg_top3_ability_ds.Tables[0].Rows[0][0].ToString() + "')" +
                        //" AND A.ca_id in(SELECT [ca_id] FROM tbl_career_personality_master where  (personality1 = '" + smry_pbg_top3_ability_ds.Tables[0].Rows[1][0].ToString() + "' or personality2 = '" + smry_pbg_top3_ability_ds.Tables[0].Rows[1][0].ToString() + "' or personality3 = '" + smry_pbg_top3_ability_ds.Tables[0].Rows[1][0].ToString() + "'))" +
                        //" AND A.ca_id in  (SELECT [ca_id] FROM tbl_career_personality_master where  (personality1 = '" + smry_pbg_top3_ability_ds.Tables[0].Rows[2][0].ToString() + "' or personality2 = '" + smry_pbg_top3_ability_ds.Tables[0].Rows[2][0].ToString() + "' or personality3 = '" + smry_pbg_top3_ability_ds.Tables[0].Rows[2][0].ToString() + "') )" +
                        //" AND B.Career_category IS NOT NULL))AS G GROUP BY OccupationalCategory ORDER BY CategoryCount DESC";

                        //strcmd = "SELECT Occupational_category, COUNT(Occupational_category) AS CategoryCount, CONVERT(decimal(18, 2), CONVERT(decimal, COUNT(Occupational_category)) / " + career_smry_count + ") * 100 AS Compatibility FROM dbo.tbl_career_master WHERE(ca_id IN (SELECT ca_id  FROM  dbo.tbl_candidate_career WHERE (c_id = '" + c_id.ToString() + "'))) and Occupational_category !='Independence' GROUP BY Occupational_category ORDER BY CategoryCount DESC";
                        strcmd = "SELECT Occupational_category, COUNT(Occupational_category) AS CategoryCount, CONVERT(decimal(18, 2), CONVERT(decimal, COUNT(Occupational_category)) / " + career_smry_count_P_A_I + ") * 100 AS Compatibility FROM tbl_career_master WHERE(ca_id IN (" + careers_By_P_A_I + ")) and Occupational_category !='Independence' GROUP BY Occupational_category ORDER BY CategoryCount DESC";



                        DataSet smry_dsOccupationalCount = clsdal.ExecDataSet(strcmd);

                        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

                        /////// add backgroung to Occupational categories that suit you the best

                        iTextSharp.text.Table secondlastpage = new iTextSharp.text.Table(2);
                        secondlastpage.DefaultCellBorder = 0;
                        secondlastpage.Border = 0;
                        // secondlastpage.Width = 200f;

                        iTextSharp.text.Table secondlastpagee = new iTextSharp.text.Table(1);
                        secondlastpagee.DefaultCellBorder = 0;
                        secondlastpagee.Border = 0;
                        // secondlastpagee.Width = 150f;
                        Cell secondlastpagecell1 = new Cell();
                        secondlastpagecell1.Add(new Paragraph("\n\n\n\n\n\n\n\n\n\n\n\n\n\nOccupational categories that suit you the best..\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                        secondlastpagee.AddCell(secondlastpagecell1);

                        int no_of_catagary = smry_dsOccupationalCount.Tables[0].Rows.Count;
                        //int no_of_catagary_RAPD = smry_dsOccupationalCount_RAPD.Tables[0].Rows.Count;
                        // int no_of_catagary = 1;

                        if (no_of_catagary >= 3)
                        {
                            iTextSharp.text.Image lastthirdbanner = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/lasttra1.png"));
                            lastthirdbanner.ScaleToFit(870f, 870f);
                            lastthirdbanner.SetAbsolutePosition(0, 0);
                            doc.Add(lastthirdbanner);

                            # region threecatagary

                            iTextSharp.text.Table secondlastpageee = new iTextSharp.text.Table(3);

                            //start heading
                            Cell firstheading = new Cell();
                            // firstheading.BackgroundColor = new Color(0, 0, 0);
                            firstheading.BackgroundColor = new Color(45, 136, 204);
                            firstheading.BorderWidth = 5f;

                            firstheading.BorderColor = new Color(255, 255, 255);
                            firstheading.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                            firstheading.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                            // 
                            firstheading.Add(new Paragraph(smry_dsOccupationalCount.Tables[0].Rows[0][0].ToString() + "\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.BOLD, Color.WHITE)));
                            //firstheading.Add(new Paragraph(smry_dsOccupationalCount_RAPD.Tables[0].Rows[0][0].ToString() + "\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.BOLD, Color.WHITE)));
                            //   firstheading.Add(new Paragraph("dfgdfgdf\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.BOLD, Color.WHITE)));
                            secondlastpageee.AddCell(firstheading);

                            Cell secondheading = new Cell();
                            //secondheading.BackgroundColor = new Color(0, 0, 0);
                            secondheading.BackgroundColor = new Color(45, 136, 204);
                            secondheading.BorderWidth = 5f;
                            secondheading.BorderColor = new Color(255, 255, 255);
                            secondheading.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                            secondheading.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                            // 
                            secondheading.Add(new Paragraph(smry_dsOccupationalCount.Tables[0].Rows[1][0].ToString() + "\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.BOLD, Color.WHITE)));
                            //secondheading.Add(new Paragraph(smry_dsOccupationalCount_RAPD.Tables[0].Rows[1][0].ToString() + "\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.BOLD, Color.WHITE)));
                            // secondheading.Add(new Paragraph( "sdfdsfs\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.BOLD, Color.WHITE)));
                            secondlastpageee.AddCell(secondheading);

                            Cell thirdheading = new Cell();
                            // thirdheading.BackgroundColor = new Color(0, 0, 0);
                            thirdheading.BackgroundColor = new Color(45, 136, 204);
                            thirdheading.BorderWidth = 5f;
                            thirdheading.BorderColor = new Color(255, 255, 255);
                            thirdheading.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                            thirdheading.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                            //  
                            thirdheading.Add(new Paragraph(smry_dsOccupationalCount.Tables[0].Rows[2][0].ToString() + "\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.BOLD, Color.WHITE)));
                            //thirdheading.Add(new Paragraph(smry_dsOccupationalCount_RAPD.Tables[0].Rows[2][0].ToString() + "\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.BOLD, Color.WHITE)));
                            // thirdheading.Add(new Paragraph("dsfdsfs\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.BOLD, Color.WHITE)));
                            secondlastpageee.AddCell(thirdheading);

                            //end heading

                            Cell firstrowcell1 = new Cell();

                            //
                            firstrowcell1.Add(new Paragraph(smry_dsOccupationalCount.Tables[0].Rows[0][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                            // firstrowcell1.Add(new Paragraph("60%", FontFactory.GetFont(FontFactory.HELVETICA, 15, Font.BOLD)));

                            firstrowcell1.BorderColor = new Color(255, 255, 255);
                            firstrowcell1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                            secondlastpageee.AddCell(firstrowcell1);
                            Cell firstrowcell2 = new Cell();

                            //
                            firstrowcell2.Add(new Paragraph(smry_dsOccupationalCount.Tables[0].Rows[1][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                            //firstrowcell2.Add(new Paragraph(smry_dsOccupationalCount_RAPD.Tables[0].Rows[1][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                            //firstrowcell2.Add(new Paragraph("40%", FontFactory.GetFont(FontFactory.HELVETICA, 15, Font.BOLD)));
                            firstrowcell2.BorderColor = new Color(255, 255, 255);
                            firstrowcell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                            secondlastpageee.AddCell(firstrowcell2);
                            Cell firstrowcell3 = new Cell();

                            //
                            firstrowcell3.Add(new Paragraph(smry_dsOccupationalCount.Tables[0].Rows[2][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                            //firstrowcell3.Add(new Paragraph(smry_dsOccupationalCount_RAPD.Tables[0].Rows[2][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                            // firstrowcell3.Add(new Paragraph("20%", FontFactory.GetFont(FontFactory.HELVETICA, 15, Font.BOLD)));
                            firstrowcell3.BorderColor = new Color(255, 255, 255);
                            firstrowcell3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                            secondlastpageee.AddCell(firstrowcell3);

                            ///secondrow

                            String catagary11 = smry_dsOccupationalCount.Tables[0].Rows[0][0].ToString();
                            String catagary22 = smry_dsOccupationalCount.Tables[0].Rows[1][0].ToString();
                            String catagary33 = smry_dsOccupationalCount.Tables[0].Rows[2][0].ToString();
                            //String catagary11 = smry_dsOccupationalCount_RAPD.Tables[0].Rows[0][0].ToString();
                            //String catagary22 = smry_dsOccupationalCount_RAPD.Tables[0].Rows[1][0].ToString();
                            //String catagary33 = smry_dsOccupationalCount_RAPD.Tables[0].Rows[2][0].ToString();

                            Cell secondrowcell1 = new Cell();

                            DataSet catdisss = new DataSet();
                            String catdissss = "select * from tblCareerCatagotyDiscription where careercat_name = '" + catagary11 + "' ";
                            catdisss = clsdal.ExecDataSet(catdissss);
                            String catdiscription1 = catdisss.Tables[0].Rows[0].ItemArray[3].ToString();

                            //secondrowcell1.Add(new Paragraph("A Health and Medicine Includes Occupational Therapists, Paramedical Science, and Ophthalmologists etc. career choices are included", FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.BOLD)));
                            secondrowcell1.Add(new Paragraph(catdiscription1, FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.COURIER)));
                            //secondrowcell1.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                            secondrowcell1.BorderColor = new Color(255, 255, 255);
                            secondrowcell1.BorderWidth = 5f;
                            secondrowcell1.BorderColor = new Color(255, 255, 255);
                            secondlastpageee.AddCell(secondrowcell1);

                            Cell secondrowcell2 = new Cell();

                            catdissss = "select * from tblCareerCatagotyDiscription where careercat_name = '" + catagary22 + "' ";
                            catdisss = clsdal.ExecDataSet(catdissss);
                            String catdiscription2 = catdisss.Tables[0].Rows[0].ItemArray[3].ToString();

                            //A social science includes Medical Transcriptionists, Hospital Management, etc. career choices are included.A social science includes Medical Transcriptionists, Hospital Management, etc. career choices are included.
                            secondrowcell2.Add(new Paragraph(catdiscription2, FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.COURIER)));
                            secondrowcell2.BorderColor = new Color(255, 255, 255);
                            //secondrowcell2.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                            secondrowcell2.BorderWidth = 5f;
                            secondrowcell2.BorderColor = new Color(255, 255, 255);
                            secondlastpageee.AddCell(secondrowcell2);

                            Cell secondrowcell3 = new Cell();

                            catdissss = "select * from tblCareerCatagotyDiscription where careercat_name = '" + catagary33 + "' ";
                            catdisss = clsdal.ExecDataSet(catdissss);
                            String catdiscription3 = catdisss.Tables[0].Rows[0].ItemArray[3].ToString();

                            //Engineering includes Social Engineering, Electrical Engineering, etc. choices are included.
                            secondrowcell3.Add(new Paragraph(catdiscription3, FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.COURIER)));
                            secondrowcell3.BorderColor = new Color(255, 255, 255);
                            //secondrowcell3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                            secondrowcell3.BorderWidth = 5f;
                            secondrowcell3.BorderColor = new Color(255, 255, 255);
                            secondlastpageee.AddCell(secondrowcell3);



                            Cell secondlastpageceell2 = new Cell();
                            secondlastpageee.Width = secondlastpageee.Width = 120f;
                            secondlastpageceell2.Add(secondlastpageee);

                            # endregion

                            secondlastpagee.AddCell(secondlastpageceell2);

                        }
                        else if (no_of_catagary == 2)
                        {
                            iTextSharp.text.Image lastthirdbanner = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/lasttra1.png"));
                            lastthirdbanner.ScaleToFit(870f, 870f);
                            lastthirdbanner.SetAbsolutePosition(0, 0);
                            doc.Add(lastthirdbanner);

                            # region two catagary

                            iTextSharp.text.Table secondlastpageee = new iTextSharp.text.Table(2);

                            //start heading
                            Cell firstheading = new Cell();
                            // firstheading.BackgroundColor = new Color(0, 0, 0);
                            firstheading.BackgroundColor = new Color(45, 136, 204);
                            firstheading.BorderWidth = 5f;

                            firstheading.BorderColor = new Color(255, 255, 255);
                            firstheading.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                            firstheading.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                            // 
                            firstheading.Add(new Paragraph(smry_dsOccupationalCount.Tables[0].Rows[0][0].ToString() + "\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                            //firstheading.Add(new Paragraph(smry_dsOccupationalCount_RAPD.Tables[0].Rows[0][0].ToString() + "\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                            //firstheading.Add(new Paragraph("dfgdfgdf\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.BOLD, Color.WHITE)));
                            secondlastpageee.AddCell(firstheading);

                            Cell secondheading = new Cell();
                            //secondheading.BackgroundColor = new Color(0, 0, 0);
                            secondheading.BackgroundColor = new Color(45, 136, 204);
                            secondheading.BorderWidth = 5f;
                            secondheading.BorderColor = new Color(255, 255, 255);
                            secondheading.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                            secondheading.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                            // 
                            secondheading.Add(new Paragraph(smry_dsOccupationalCount.Tables[0].Rows[1][0].ToString() + "\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                            //secondheading.Add(new Paragraph(smry_dsOccupationalCount_RAPD.Tables[0].Rows[1][0].ToString() + "\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                            // secondheading.Add(new Paragraph( "sdfdsfs\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.BOLD, Color.WHITE)));
                            secondlastpageee.AddCell(secondheading);

                            //end heading

                            Cell firstrowcell1 = new Cell();

                            //
                            firstrowcell1.Add(new Paragraph(smry_dsOccupationalCount.Tables[0].Rows[0][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                            //firstrowcell1.Add(new Paragraph(smry_dsOccupationalCount_RAPD.Tables[0].Rows[0][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                            // firstrowcell1.Add(new Paragraph("60%", FontFactory.GetFont(FontFactory.HELVETICA, 15, Font.BOLD)));

                            firstrowcell1.BorderColor = new Color(255, 255, 255);
                            firstrowcell1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                            secondlastpageee.AddCell(firstrowcell1);
                            Cell firstrowcell2 = new Cell();

                            //
                            firstrowcell2.Add(new Paragraph(smry_dsOccupationalCount.Tables[0].Rows[1][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                            //firstrowcell2.Add(new Paragraph(smry_dsOccupationalCount_RAPD.Tables[0].Rows[1][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                            //firstrowcell2.Add(new Paragraph("40%", FontFactory.GetFont(FontFactory.HELVETICA, 15, Font.BOLD)));
                            firstrowcell2.BorderColor = new Color(255, 255, 255);
                            firstrowcell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                            secondlastpageee.AddCell(firstrowcell2);
                            Cell firstrowcell3 = new Cell();

                            //

                            ///secondrow

                            String catagary11 = smry_dsOccupationalCount.Tables[0].Rows[0][0].ToString();
                            String catagary22 = smry_dsOccupationalCount.Tables[0].Rows[1][0].ToString();
                            //String catagary11 = smry_dsOccupationalCount_RAPD.Tables[0].Rows[0][0].ToString();
                            //String catagary22 = smry_dsOccupationalCount_RAPD.Tables[0].Rows[1][0].ToString();


                            Cell secondrowcell1 = new Cell();

                            DataSet catdisss = new DataSet();
                            String catdissss = "select * from tblCareerCatagotyDiscription where careercat_name = '" + catagary11 + "' ";
                            catdisss = clsdal.ExecDataSet(catdissss);
                            String catdiscription1 = catdisss.Tables[0].Rows[0].ItemArray[3].ToString();

                            //secondrowcell1.Add(new Paragraph("A Health and Medicine Includes Occupational Therapists, Paramedical Science, and Ophthalmologists etc. career choices are included", FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.BOLD)));
                            secondrowcell1.Add(new Paragraph(catdiscription1, FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.COURIER)));
                            //secondrowcell1.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                            secondrowcell1.BorderColor = new Color(255, 255, 255);
                            secondrowcell1.BorderWidth = 5f;
                            secondrowcell1.BorderColor = new Color(255, 255, 255);
                            secondlastpageee.AddCell(secondrowcell1);

                            Cell secondrowcell2 = new Cell();

                            catdissss = "select * from tblCareerCatagotyDiscription where careercat_name = '" + catagary22 + "' ";
                            catdisss = clsdal.ExecDataSet(catdissss);
                            String catdiscription2 = catdisss.Tables[0].Rows[0].ItemArray[3].ToString();

                            //A social science includes Medical Transcriptionists, Hospital Management, etc. career choices are included.A social science includes Medical Transcriptionists, Hospital Management, etc. career choices are included.
                            secondrowcell2.Add(new Paragraph(catdiscription2, FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.COURIER)));
                            secondrowcell2.BorderColor = new Color(255, 255, 255);
                            //secondrowcell2.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                            secondrowcell2.BorderWidth = 5f;
                            secondrowcell2.BorderColor = new Color(255, 255, 255);
                            secondlastpageee.AddCell(secondrowcell2);


                            Cell secondlastpageceell2 = new Cell();
                            secondlastpageee.Width = secondlastpageee.Width = 120f;
                            secondlastpageceell2.Add(secondlastpageee);


                            # endregion

                            secondlastpagee.AddCell(secondlastpageceell2);
                        }
                        else if (no_of_catagary == 1)
                        {

                            iTextSharp.text.Image lastthirdbanner = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/lasttra2.png"));
                            lastthirdbanner.ScaleToFit(870f, 870f);
                            lastthirdbanner.SetAbsolutePosition(0, 0);
                            doc.Add(lastthirdbanner);

                            # region one catagary

                            iTextSharp.text.Table secondlastpageee = new iTextSharp.text.Table(1);

                            //start heading
                            Cell firstheading = new Cell();
                            // firstheading.BackgroundColor = new Color(0, 0, 0);
                            firstheading.BackgroundColor = new Color(45, 136, 204);
                            firstheading.BorderWidth = 5f;

                            firstheading.BorderColor = new Color(255, 255, 255);
                            firstheading.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                            firstheading.VerticalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                            // 
                            firstheading.Add(new Paragraph(smry_dsOccupationalCount.Tables[0].Rows[0][0].ToString() + "\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                            //firstheading.Add(new Paragraph(smry_dsOccupationalCount_RAPD.Tables[0].Rows[0][0].ToString() + "\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD, Color.WHITE)));
                            //   firstheading.Add(new Paragraph("dfgdfgdf\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.BOLD, Color.WHITE)));
                            secondlastpageee.AddCell(firstheading);



                            //end heading

                            Cell firstrowcell1 = new Cell();

                            //
                            //firstrowcell1.Add(new Paragraph(smry_dsOccupationalCount.Tables[0].Rows[0][2].ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                            firstrowcell1.Add(new Paragraph("100 %", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD)));
                            // firstrowcell1.Add(new Paragraph("60%", FontFactory.GetFont(FontFactory.HELVETICA, 15, Font.BOLD)));

                            firstrowcell1.BorderColor = new Color(255, 255, 255);
                            firstrowcell1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_CENTER;
                            secondlastpageee.AddCell(firstrowcell1);

                            //

                            //

                            ///secondrow

                            String catagary11 = smry_dsOccupationalCount.Tables[0].Rows[0][0].ToString();
                            //String catagary11 = smry_dsOccupationalCount_RAPD.Tables[0].Rows[0][0].ToString();


                            Cell secondrowcell1 = new Cell();

                            DataSet catdisss = new DataSet();
                            String catdissss = "select * from tblCareerCatagotyDiscription where careercat_name = '" + catagary11 + "' ";
                            catdisss = clsdal.ExecDataSet(catdissss);
                            String catdiscription1 = catdisss.Tables[0].Rows[0].ItemArray[3].ToString();

                            //secondrowcell1.Add(new Paragraph("A Health and Medicine Includes Occupational Therapists, Paramedical Science, and Ophthalmologists etc. career choices are included", FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.BOLD)));
                            secondrowcell1.Add(new Paragraph(catdiscription1, FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.COURIER)));
                            //secondrowcell1.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                            secondrowcell1.BorderColor = new Color(255, 255, 255);
                            secondrowcell1.BorderWidth = 5f;
                            secondrowcell1.BorderColor = new Color(255, 255, 255);
                            secondlastpageee.AddCell(secondrowcell1);

                            Cell secondlastpageceell2 = new Cell();
                            secondlastpageee.Width = secondlastpageee.Width = 120f;
                            secondlastpageceell2.Add(secondlastpageee);

                            # endregion

                            secondlastpagee.AddCell(secondlastpageceell2);

                        }



                        Cell secondlastpagecell1112 = new Cell();
                        secondlastpagecell1112.SetWidth("1000");
                        secondlastpagecell1112.Add(secondlastpagee);
                        Cell secondlastpagecell2 = new Cell();

                        secondlastpagecell2.Add(new Paragraph("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe world of work is divided into economic sectors; further economic sectors are divided into industries. Industries are run by people who perform their role in order to earn their living. These roles have certain similarities in their demands towards abilities, education, knowledge, behavior and other performance expectation.With our research we have clubbed careers that have more or less similar demands into categories. For example a product designer , a performing artist and a cartoonist would all fall into “CREATIVE”category of careers.", FontFactory.GetFont(FontFactory.HELVETICA, 10, iTextSharp.text.Font.BOLD)));
                        secondlastpagecell2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        secondlastpage.AddCell(secondlastpagecell1112);
                        secondlastpage.AddCell(secondlastpagecell2);
                        int[] columnWidths = { 10, 4 }; // percentage 
                        secondlastpage.SetWidths(columnWidths);
                        secondlastpage.Width = 110f;
                        doc.Add(secondlastpage);






                        //////////////////////////////////////////////////////////////////////////////////////////



                        doc.Add(dheyalogo);
                        doc.NewPage();
                        #region catdiscription



                        ///////////////////////////catagary discription  
                        iTextSharp.text.Image catbriffdec = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/brifdestencat.png"));
                        catbriffdec.ScaleToFit(870f, 870f);
                        catbriffdec.SetAbsolutePosition(0, 790);
                        doc.Add(catbriffdec);


                        iTextSharp.text.Table cat_dis = new iTextSharp.text.Table(1);
                        cat_dis.DefaultCellBorder = 0;
                        cat_dis.Border = 0;
                        cat_dis.Width = 100;

                        String catagary1 = smry_dsOccupationalCount.Tables[0].Rows[0][0].ToString();
                        //String catagary1 = smry_dsOccupationalCount_P_A_I.Tables[0].Rows[0][0].ToString();
                        //String catagary1 = smry_dsOccupationalCount_RAPD.Tables[0].Rows[0][0].ToString();


                        DataSet catdiss = new DataSet();




                        ///first catagary discription
                        String catdis = "select * from tblCareerCatagotyDiscription where careercat_name = '" + catagary1 + "' ";
                        catdiss = clsdal.ExecDataSet(catdis);
                        String catname = catdiss.Tables[0].Rows[0].ItemArray[1].ToString();
                        String catdiscription = catdiss.Tables[0].Rows[0].ItemArray[2].ToString();

                        if (no_of_catagary >= 1)
                        {
                            Cell cat_dis1 = new Cell();
                            cat_dis1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                            Paragraph dispar = new Paragraph();
                            Phrase cat1name = new Phrase(18, new Chunk("\n" + catname, FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                            Phrase cat1dis = new Phrase(18, new Chunk(" " + catdiscription, FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                            dispar.Add(cat1name);
                            dispar.Add(cat1dis);
                            dispar.Add(limage);
                            cat_dis1.Add(dispar);
                            cat_dis.AddCell(cat_dis1);
                        }

                        if (no_of_catagary >= 2)
                        {
                            String catagary2 = smry_dsOccupationalCount.Tables[0].Rows[1][0].ToString();
                            //String catagary2 = smry_dsOccupationalCount_RAPD.Tables[0].Rows[1][0].ToString();

                            //secind catagary discription
                            catdis = "select * from tblCareerCatagotyDiscription where careercat_name = '" + catagary2 + "' ";
                            catdiss = clsdal.ExecDataSet(catdis);
                            catname = catdiss.Tables[0].Rows[0].ItemArray[1].ToString();
                            catdiscription = catdiss.Tables[0].Rows[0].ItemArray[2].ToString();

                            Cell cat_dis2 = new Cell();
                            cat_dis2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                            Paragraph dispar1 = new Paragraph();
                            Phrase cat1name1 = new Phrase(18, new Chunk("\n" + catname, FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                            Phrase cat1dis1 = new Phrase(18, new Chunk(" " + catdiscription, FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                            dispar1.Add(cat1name1);
                            dispar1.Add(cat1dis1);
                            dispar1.Add(limage);
                            cat_dis2.Add(dispar1);
                            cat_dis.AddCell(cat_dis2);
                        }

                        //secind catagary discription

                        if (no_of_catagary >= 3)
                        {
                            String catagary3 = smry_dsOccupationalCount.Tables[0].Rows[2][0].ToString();
                            //String catagary3 = smry_dsOccupationalCount_RAPD.Tables[0].Rows[2][0].ToString();
                            catdis = "select * from tblCareerCatagotyDiscription where careercat_name = '" + catagary3 + "' ";
                            catdiss = clsdal.ExecDataSet(catdis);
                            catname = catdiss.Tables[0].Rows[0].ItemArray[1].ToString();
                            catdiscription = catdiss.Tables[0].Rows[0].ItemArray[2].ToString();

                            Cell cat_dis3 = new Cell();
                            cat_dis3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                            Paragraph dispar2 = new Paragraph();
                            Phrase cat1name2 = new Phrase(18, new Chunk("\n" + catname, FontFactory.GetFont("Open Sans", 8, Font.BOLD, new Color(0, 0, 0))));
                            Phrase cat1dis2 = new Phrase(18, new Chunk(" " + catdiscription, FontFactory.GetFont("Arial", 8, iTextSharp.text.Font.COURIER, new Color(104, 108, 114))));
                            dispar2.Add(cat1name2);
                            dispar2.Add(cat1dis2);
                            dispar2.Add(limage);
                            cat_dis3.Add(dispar2);
                            cat_dis.AddCell(cat_dis3);
                        }
                        doc.Add(cat_dis);
                        #endregion





                        ////////////////////////////second last page 

                        doc.Add(dheyalogo);
                        doc.NewPage();
                        iTextSharp.text.Image jpeg19 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/secondlast1.png"));
                        //jpeg.ScalePercent(35f);
                        jpeg19.ScaleToFit(600f, 600f);
                        jpeg19.SetAbsolutePosition(0, 400);
                        // jpeg.SpacingAfter = -50f;
                        doc.Add(jpeg19);

                        iTextSharp.text.Table ad = new iTextSharp.text.Table(1);
                        ad.DefaultCellBorder = 0;
                        ad.Border = 0;
                        Cell ad1 = new Cell();
                        ad1.Add(new Paragraph("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD, new Color(104, 108, 114))));
                        ad.AddCell(ad1);
                        doc.Add(ad);

                        iTextSharp.text.Table PDTopTable8 = new iTextSharp.text.Table(3);
                        PDTopTable8.Alignment = 0;
                        PDTopTable8.Width = 100;
                        // PDTopTable3.BackgroundColor = new iTextSharp.text.Color(226, 226, 226);
                        PDTopTable8.DefaultCellBorder = 0;
                        PDTopTable8.Border = 0;

                        Cell PDTopCell21 = new Cell();
                        PDTopCell21.Add(new Paragraph("There are three major components for building career success. The major effort goes in understanding the three factors namely, your Individuality, the occupations and the aspirations you hold. Aligning the three is the most critical part of the career guidance and planning process. Once these factors get aligned there is a strong motivational effect and clarity of purpose for each activity you do. It is not just about choosing an education course; it is about choosing an occupation that suits you and aligning academic efforts towards that.", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.COURIER, new Color(104, 108, 114))));
                        PDTopCell21.Width = 80;
                        PDTopCell21.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        PDTopTable8.AddCell(PDTopCell21);

                        Cell PDTopCell211 = new Cell();
                        PDTopCell211.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                        PDTopCell211.Width = 80;
                        PDTopTable8.AddCell(PDTopCell211);

                        Cell PDTopCell22 = new Cell();
                        PDTopCell22.Add(new Paragraph("\n\nWhat is Career Planning?", FontFactory.GetFont(FontFactory.HELVETICA, 18, Font.BOLD)));
                        PDTopCell22.Add(new Paragraph("\nCareer Planning is about making career choices and decisions and planning the future considering the challenges and opportunities. It concerns the career management tasks of individuals such as decisionmaking, life-stage transitions, dealing with stress etc. It is also about taking control of one’s employability. It involves guidance and counseling for setting a timeline based fail-proof career plan.", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
                        PDTopCell22.Width = 80;
                        PDTopCell22.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        int[] columnWidths1 = { 4, 1, 4 }; // percentage 
                        PDTopTable8.SetWidths(columnWidths1);
                        PDTopTable8.AddCell(PDTopCell22);


                        doc.Add(PDTopTable8);

                        ////////////////////////////last page 



                        doc.Add(dheyalogo);
                        doc.NewPage();
                        // iTextSharp.text.Image jpeg16 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/gry.png"));
                        iTextSharp.text.Image jpeg16 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/gry.jpg"));
                        //jpeg.ScalePercent(35f);
                        jpeg16.ScaleToFit(870f, 870f);
                        jpeg16.SetAbsolutePosition(-1, -2);
                        // jpeg.SpacingAfter = -50f;
                        doc.Add(jpeg16);



                        iTextSharp.text.Image jpeg17 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/lastpage2.png"));
                        //jpeg.ScalePercent(35f);
                        jpeg17.ScaleToFit(550f, 500f);
                        // jpeg.SpacingAfter = -50f;
                        //doc.Add(jpeg17);


                        iTextSharp.text.Image jpeg18 = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/lastpage3.png"));
                        //jpeg.ScalePercent(35f);
                        jpeg18.ScaleToFit(550f, 500f);
                        // jpeg.SpacingAfter = -50f;
                        // doc.Add(jpeg18);

                        //////////////////////////////////
                        doc.Add(dheyalogo);
                        doc.NewPage();

                        //////////////////////

                        #region Radar Chart

                        //AbilityBarChart.Visible = false;

                        //String StrSql = "SELECT ability_code, P_rating FROM (select distinct c_id,test_id,ability_code,P_rating,rating from tbl_candidate_test_results where c_id = '" + c_id + "') as x where c_id = '" + c_id + "'order by test_id";
                        //DataSet dsChart = clsdb_Xaction.ExecDataSet(StrSql);
                        //// Populate series data
                        ////double[] yValues = { Convert.ToDouble(dsChart.Tables[0].Rows[0][1].ToString()), Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString()), Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString()), Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString()), Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString()), Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString()), Convert.ToDouble(dsChart.Tables[0].Rows[6][1].ToString()) };
                        ////string[] xValues = { "NA", "AR", "SVA", "CF", "OST", "SA", "MR" };
                        //double[] yValues = { Convert.ToDouble(dsChart.Tables[0].Rows[0][1].ToString()), 100- Convert.ToDouble(dsChart.Tables[0].Rows[0][1].ToString())};
                        //string[] xValues = { "NA",""};
                        //AbilityBarChart.Series["Series1"].Points.DataBindXY(xValues, yValues);



                        //// Set radar chart type
                        //AbilityBarChart.Series["Series1"].ChartType = System.Web.UI.DataVisualization.Charting.SeriesChartType.Doughnut;
                        //AbilityBarChart.Series[0]["PieLabelStyle"] = "Outside";
                        //// Set radar chart style (Area, Line or Marker)
                        //AbilityBarChart.Series["Series1"]["RadarDrawingStyle"] = "Area";

                        //// Set circular area drawing style (Circle or Polygon)
                        //AbilityBarChart.Series["Series1"]["AreaDrawingStyle"] = "Circle";

                        //// Set labels style (Auto, Horizontal, Circular or Radial)
                        //AbilityBarChart.Series["Series1"]["CircularLabelsStyle"] = "Horizontal";

                        //// Show as 3D
                        ////AbilityBarChart.ChartAreas["ChartArea1"].Area3DStyle.Enable3D = true;

                        //AbilityBarChart.Width = 500;
                        //AbilityBarChart.Height = 250;

                        ////for saving image
                        //AbilityBarChart.SaveImage(Server.MapPath("./Reports_graph/" + candidate_name + "ab1.png"), System.Web.UI.DataVisualization.Charting.ChartImageFormat.Png);


                        ////// ability chart layer 2



                        //double[] yValues1 = { Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString()), 100 - Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString()) };

                        //string[] xValues1 = { "AR", "" };
                        //AbilityBarChart.Series["Series1"].Points.DataBindXY(xValues, yValues);



                        //// Set radar chart type
                        //AbilityBarChart.Series["Series1"].ChartType = System.Web.UI.DataVisualization.Charting.SeriesChartType.Doughnut;
                        //AbilityBarChart.Series[0]["PieLabelStyle"] = "Outside";
                        //// Set radar chart style (Area, Line or Marker)
                        //AbilityBarChart.Series["Series1"]["RadarDrawingStyle"] = "Area";

                        //// Set circular area drawing style (Circle or Polygon)
                        //AbilityBarChart.Series["Series1"]["AreaDrawingStyle"] = "Circle";

                        //// Set labels style (Auto, Horizontal, Circular or Radial)
                        //AbilityBarChart.Series["Series1"]["CircularLabelsStyle"] = "Horizontal";

                        //// Show as 3D
                        ////AbilityBarChart.ChartAreas["ChartArea1"].Area3DStyle.Enable3D = true;

                        //AbilityBarChart.Width = 700;
                        //AbilityBarChart.Height = 350;

                        ////for saving image
                        //AbilityBarChart.SaveImage(Server.MapPath("./Reports_graph/" + candidate_name + "ab2.png"), System.Web.UI.DataVisualization.Charting.ChartImageFormat.Png);



                        # endregion

                        /////////////////vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv



                        ///////////////////////////////////////////////////



                        doc.Close();
                    }
                    catch (System.Threading.ThreadAbortException tae)
                    {
                    }
                    catch (IOException ioe)
                    {
                        doc.Close();
                    }

                    // DownloadFile("Report_" + c_name + ".pdf", true);
                }
                else
                {
                    Response.Write(@"<SCRIPT LANGUAGE=""JavaScript"">alert('You do not have completed all tests! So you should complete the all test.')</SCRIPT>");
                    //Response.Redirect("preview_Candidates.aspx");
                } // report rating. (Result)
                #endregion
            }
            else
            {
                Response.Write(@"<SCRIPT LANGUAGE=""JavaScript"">alert('You do not have completed all tests! So you should complete the all test.')</SCRIPT>");
                //Response.Redirect("preview_Candidates.aspx");
            } // word test status. (10 th test)
            #endregion
        }
        else
        {
            Response.Write(@"<SCRIPT LANGUAGE=""JavaScript"">alert('You do not have completed all tests! So you should complete the all test.')</SCRIPT>");
            //Response.Redirect("preview_Candidates.aspx");
        } // brows report

    }

    private void DownloadFile(string fname, bool forceDownload)
    {     
        string path = Server.MapPath("./Reports_pdf/" + fname);
        string name = Path.GetFileName(path);
        string ext = Path.GetExtension(path);
        string type = "";
        // set known types based on file extension  
        if (ext != null)
        {
            switch (ext.ToLower())
            {
                case ".htm":
                case ".html":
                    type = "text/HTML";
                    break;

                case ".txt":
                    type = "text/plain";
                    break;

                case ".doc":
                case ".rtf":
                    type = "Application/msword";
                    break;

                case ".pdf":
                    type = "Application/pdf";
                    break;
            }
        }
        if (forceDownload)
        {
            //int index = name.IndexOf(".");
            //string res = name.Substring(0, index);  
            Response.AppendHeader("content-disposition",
                  " inline; attachment; filename=" + name + ".pdf");

        }
        if (type != "")
        Response.ContentType = type;
      
        Response.WriteFile(path);        
        Response.End();
    }
    protected void Button1_Click(object sender, EventArgs e)
    {
        load_rpt();
        DownloadFile("Report_" + c_name + ".pdf", true);
    }

    private void profile_conditions_pdf()
    {
        // Different Patterns for Graph 3 
        doc.Add(new Paragraph("\n Profile Analysis", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
        iTextSharp.text.Image endblock = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/endblockh.png"));
        endblock.ScaleToFit(5f, 5f);
        Chunk imageChunk1 = new Chunk(endblock, 0, 0);
        Phrase limage = new Phrase();
        limage.Add(imageChunk1);

        // 1. D is greater than all and in positive region
        #region High-D
        if ((DiffB <= 10 & DiffB > -1) && (DiffR <= -1 && DiffBl <= -1 && DiffG <= -1))
        {
            //doc.Add(new Paragraph("\t Direct, decisive, problem solver, risk taker and self starter are the few characteristics that describe you as a person. For these basic characteristics, you are often portrayed as an 'Autocrat Manager', who is great in crisis.  You are extremely ambitious and that makes you a highly goal oriented person. You are straightforward, dominating and forceful and overbearing at times. You are a bottom-line organizer, have the knack to challenge the status quo and innovative by nature. You basically possess the leadership skills in you.\n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are not very sociable type. You focus on achievement and success and believe in individual accomplishments, and hence not a team player. You have an argumentative attitude and tend to overstep authority. Sometimes you tend to maintain relations with people around you to just to fulfill your personal goals. You relate to people who are submissive and only till your goal is met. You neither care people’s emotions or feelings and nor care your own. You are not very friendlier or approachable. Others sometimes find it difficult to break through this naturally suspicious, skeptical shell of yours.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are self-reliant, innovative in getting results, and maintain focus on goals. You have the ability to overcome obstacles, provide direction and leadership and offer innovative and progressive systems and ideas. You can push group toward decisions and willing to speak out. Generally optimistic, you welcome challenges without fear. You accept risks and have the ability to see the big picture. You can handle multiple projects and function well with heavy work loads and cope well in stressful situations. You like to be in charge and solve problems. You set lofty goals and sometimes attempt too much at once.  You lose focus on problems sometimes.  While analyzing information, you ignore potential risks and do not weigh the pros and cons and do not consider others' opinions also.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You love challenge and autonomy. You need freedom and you want prestige. You need opportunity for advancement and like projects that produce tangible results.  You prefer personal evaluation based on results, and not methods. You are motivated by new challenges, power and authority to take risks and make decisions, freedom from routine and mundane tasks and changing environments in which to work and play.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Efficiency, Self-motivation and Independence."));

            #region getting_high-D_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-D-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
                else
                {
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
            }
            #endregion

            return;
        }
        #endregion
        // 2. I is Greater than all and in positive region
        #region High-I
        if ((DiffB <= -1) && (DiffR <= 10 && DiffR > -1) && (DiffBl <= -1) && (DiffG <= -1))
        {
            //doc.Add(new Paragraph("\t Enthusiastic, trusting, optimistic, persuasive, talkative, impulsive and emotional are the characteristics that describe you as a person. Communication is the key factor in you, where you communicate easily with the people around you and have a friendly, influential and persuasive style while dealing with them.\n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have a natural talent to connect to people. You are extremely networked and connected to every person heart to heart.  You build a favorable, friendly environment around you. You have a genuine interest in the ideas and feelings of other people. Your enthusiasm and charming nature along with your high level of confidence create a positive aura around you. You are open to others and confident in your own social abilities, and interact positively in almost any situation. You have the ability to motivate people in a team environment. You create an influencing circle or group, where your actions revolve around building and maintaining relationships, sometimes, even to the extent of alienating people who are not part of the circle.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Your distinct abilities lie in the area of communication and relationship building. You are not only a strong communicator, but also you have the ability to verbalize about ideas, people and their intuition. You can express ideas well and perceive the nuances and adapt well in any situations. You make a good spokesperson. In a team environment, you are a great encourager, creative problem solver, peace maker and a good conflict negotiator. You respond well to the unexpected. You create an atmosphere of well being, provide direction and leadership, work well with other people, will offer opinions, and have a positive attitude. You accomplish goals through people, have good sense of humor and strong in brainstorming sessions. On a weaker side, you are more concerned with popularity than tangible results. You are inattentive to detail, sometimes overuse gestures and facial expression and you tend to listen only when it's convenient.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\tYou are motivated by flattery, praise, popularity, and acceptance. A friendly environment, freedom from many rules and regulations, a forum to express ideas, group activities in professional and social environments make you feel happy and contented. Having other people available to handle details further gives you a boost.  Social esteem and acceptance, and recognition for abilities, praise and approval make a strong impression on you. Further, opportunity to motivate and influence others and positive working conditions gives you satisfaction. Specifically, you need to feel accepted by those around you, and you are bothered about people’s opinion about you more than anything else. You tend to get offensive if you find yourselves rejected or disliked.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Friendliness, Enthusiasm and Self-confidence."));

            #region getting_high-I_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-I-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
                else
                {
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
            }
            #endregion

            return;
        }
        #endregion
        // 3. S is Greater than all and in positive region
        #region High-S
        if ((DiffB <= -1) && (DiffR <= -1) && (DiffBl <= 10 && DiffBl > -1) && (DiffG <= -1))
        {
            //doc.Add(new Paragraph("\tGood listener, team player, possessive, steady, predictable, understanding and friendly is the quality that characterizes you as a person. You show high degree of patience, calmness and gentle openness, and sympathetic to others' points of view, and value positive interaction with others.  You are generally amiable and warm-hearted but you are not outgoing by nature and tend to depend on more assertive type of people to take the lead. You are relaxed type of person, happy go lucky type, where you don’t want to rock the boat. You are easily adaptable, having a ‘flow with the wind’ kind of personality. \n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are basically reliable and dependable. You are a loyal team worker. You are compliant towards authority. You are patient and empathetic listener and that helps you to reconcile conflicts. You are generally not that type who will go and build relations upfront, but you are good in maintaining and sustaining a fruitful interpersonal relation. For this reason you are often found with a small, closely knit friend circle. In team environment you are ‘instinctive relater’, a participative manager, who accomplishes goals through personal relationships.  You have the ability to make others feel like they belong.  You are focused and intuitive about people and relationships. You buy into team goals and can identify strongly with the team.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are simply 'supportive'. You demonstrate dependable, sincere and loyal type of personality. You are also extremely persistent in approach, having the patience and restraint to work steadily at a task until it is achieved. This makes you unusually capable of dealing with laborious repetitive tasks that others might find hard to accomplish.  You can see an easier way of doing things. You are usually full of common sense. You are a thinker; focus on one thing at a time. You provide stability to any situation, where you are realistic, practical and even-tempered. However, while analyzing information, you are openly agreeable but inwardly unyielding. You tend to internalize your concerns and doubts. You tend to hesitate to share feedback during presentation. You normally resist change and take a long time to adjust to change. You hold a grudge and sensitive to criticism. Sometimes you have difficulty establishing priorities.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are motivated by recognition for loyalty and dependability. Safety and security with no sudden changes in procedure or lifestyle stimulate you. You prefer to maintain the status quo whenever possible. You need time to adjust to changes. You prefer activities that can be started and finished. Interruptions or discontinuity or changes unsettles you. Further you prefer limited territory of responsibility. You love routine and repeated work pattern. Patience is the root source of motivation in you. You need to feel that you have the support, co-operation and sincere appreciation of those around you. You like team atmosphere. You dislike conflicts and arguments.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Patience, Thoughtfulness and Persistence."));

            #region getting_high-S_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-S-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
                else
                {
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
            }
            #endregion

            return;
        }
        #endregion
        // 4. C is Greater than all and in positive region
        #region High-C
        if ((DiffB <= -1) && (DiffR <= -1) && (DiffBl <= -1) && (DiffG <= 10 && DiffG > -1))
        {

            //doc.Add(new Paragraph("\t Accurate, analytical, conscientious, careful, fact-finder, precise, high standards and systematic are the characteristics that describe you as a person. You are normally passive by nature, which stems from your controlled behaviour and that give the impression of you being distant, reserved, aloof and disinterested. You generally don’t reveal information, or your feelings and emotions, only share when utmost necessary.  You are the 'anchor of reality' and even-tempered. Though you are highly ambitious, you are not that assertive to achieve it always. Rather you attain your goals by remaining within a certain framework and set rules. You are a calculated risk taker. You offer conservative approaches and emphasize quality and you are thorough to all activities. You are also diplomatic.\n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are very formal in relationships, the ability to relate easily to other people is generally lacking in you. You find difficult to adjust to informal atmosphere. Being suspicious and critical, you generally don’t have close relationships, particularly in business sense. Your friendships are not based on emotions but instead common interest or similarities in ideas and values helps to build that bond.  You prefer not to verbalize feelings; Will give in rather than argue.  You strive for a logical, consistent environment. You tend to control the details. You evaluate the team's progress, ask important questions and maintain focus on tasks and analyze obstacles. You will share risks and responsibilities, work systematically and will strive for consensus.  You tend to follow rules, authority and logical argument to influence the actions of others\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are an instinctive organizer, a 'Do it yourself' manager who create and maintain systems. You think logically. You are usually very self-reliant although this fact is often difficult to perceive. You have structured ways of thinking, and often show particular strengths when it comes to organizing facts or working with precise detail or sophisticated systems. You are a quick-thinker and can provide valuable inputs, but only share it when asked for. You tend to define situations, gather, criticize and test information. While analyzing information, you become overly cautious and conservative; Get too bogged down in details. You tend to avoid or postpone decisions, especially if you perceive a risk; However, you are an effective trouble shooter.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Standards of high quality, limited social interaction, and detailed tasks, logical organization of information and clear-cut boundaries for actions/relationships motivates you. Autonomy and independence, controlled work environment, reassurance, precise expectations and goals, exact job descriptions, planned changes inspire you. You need to feel completely sure of your position, and of others' expectations of you, before you are able to proceed. Because of this, you have a very strong aversion to risk, and will rarely take any action unless you can feel absolutely sure about its consequences. You feel comfortable in environment where tasks and projects can be followed through to completion. You prefer specialized or technical tasks, where there exist practical work procedures and routines; and you have instructions and reassurance that you are doing what is expected of you and where there are few conflicts and arguments.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Cooperativeness, Accuracy and Sensitivity."));
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            #region getting_high-C_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-C-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);

            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
                else
                {
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
            }
            #endregion

            return;
        }
        #endregion
        // 5. D is Lower than all and in negative region
        #region Low-D
        if ((DiffB <= -1) && (DiffR <= 10 && DiffR > -1) && (DiffBl <= 10 && DiffBl > -1) && (DiffG <= 10 && DiffG > -1))
        {
            //doc.Add(new Paragraph("\t You are generally conservative, low keyed, agreeable and undemanding. You are a good team worker and ready to accept others' ideas. You are not competitive in nature, not that ambitious type, and you tend to avoid conflicting situations. You like to develop warm and friendly relations with people around you. You want to do more research before committing to a decision. You are cooperative, mild, cautious and peaceful and hence, will try to achieve your goals based on your convincing and coherent communication and friendly relations.\n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have adequate communicating skills and have relatively good networking skills. But you are not particularly assertive, and hence, in confrontational or pressurized situations you tend to falter. Being co-operative, patient and good listener, you are a team person, and able to work for the group rather than focusing on your own needs.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are an active listener. You are attentive to other team members' ideas until everyone reaches a consensus. You adopt a great appreciation for the opinions, feelings, and desires of others. You are friendly, outgoing and approachable. Further, you put energy into personal relationships and show your support for other team members and that make you strong in relationship management.\n "));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Positive and friendly interactions motivate you. Since you are not ambitious person, goals or challenges don’t excite you. Simple happiness, positive environment, warmth, and friendly terms with people give you immense satisfaction.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Friendliness, Patience and Cooperativeness."));

            #region getting_Low-D_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Low-D-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
                else
                {
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
            }
            #endregion

            return;
        }
        #endregion
        // 6. I is lower than all and in negative region
        #region Low-I
        if ((DiffB <= 10 && DiffB > -1) && (DiffR <= -1) && (DiffBl <= 10 && DiffBl > -1) && (DiffG <= 10 && DiffG > -1))
        {
            //doc.Add(new Paragraph("\t The striking feature in you is you are shy and introvert, and you go by facts and data and not by feelings. In any typical situation or event you rely more on logic and rationale than on emotions. You are basically reflective, factual, calculative, logical, and critical. At the same time very suspicious and skeptical and tend to keep your thoughts, ideas within yourselves and will share only when asked for. You are basically relaxed and calm but in hostile or demanding situations, your assertiveness and dominance often get prominence. \n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are often direct and assertive but you seldom have interest on personal matters. You are rarely communicative and interact and communicate only when needed purely on a practical basis, rather than on a personal level. You have a passive approach. You are generally a good listener and you respond to comments and ideas when sought for rather than put forward your views voluntarily.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You believe in accuracy and efficiency. But being highly analytical and cautious, you weigh the pros and cons in depth and often hold back from action, and prefer not to behave impulsively and land up into adverse situations. Though you are result oriented, you tend to take risk only when utmost necessary. You value result and productivity. Your approach to work or life is systematic and factual and you focus on details and facts. You are also cautious in communication where you reveal only when necessary and that to in a succinct manner.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Structured and risk free environment motivates you. Achieving results and getting opportunity to work systematically with complete understanding of the subject encourages you. Getting adequate time to cope up with changes helps you to perform better.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Efficiency, Thoughtfulness and Accuracy."));

            #region getting_Low-I_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Low-I-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
                else
                {
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
            }
            #endregion

            return;
        }
        #endregion
        // 7. S is lower than all and in negative region
        #region Low-S
        if ((DiffB <= 10 && DiffB > -1) && (DiffR <= 10 && DiffR > -1) && (DiffBl <= -1) && (DiffG <= 10 && DiffG > -1))
        {
            //doc.Add(new Paragraph("\t Speed is the crucial feature in you. You have high sense of urgency and fast pace. You are basically impatient and restless in nature and so possess high speed of response. Further, you are ambitious and assertive but at the same time sensitive in your approach. Your ambitions do get a primary focus  but if need be you definitely care for the people around you; Before accomplishing your goal, you tend to make sure that your team’s need or the need of the organization is taken care off. In informal situations, you often display good social skills.\n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are extremely aware of your environment and take notice of the changes that takes place within it. You are sharp to catch the things that are unspoken. In informal situation you display enthusiastic and open approach where else in structured or formal environment, your assertive and controlled behavior come to the fore. \n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Depending on the situation you have the ability to modulate your behavior which helps you to adapt to the situation in an effective way. In friendly environment you are enthusiastic and open and in formal settings, you get direct, blunt and straightforward. You also have the ability to deal with confrontation and stress effectively and you tend to be a quick thinker.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Personal achievement and success motivates you but at the same time your sensitivity makes you lean towards people, whereby their acceptance and approval gives you a kick.\n "));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Self--motivation, Enthusiasm and Sensitivity."));

            #region getting_Low-S_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Low-S-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
                else
                {
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
            }
            #endregion

            return;
        }
        #endregion
        // 8. C is lower than all and in negative region
        #region Low-C
        if ((DiffB <= 10 && DiffB > -1) && (DiffR <= 10 && DiffR > -1) && (DiffBl <= 10 && DiffBl > -1) && (DiffG <= -1))
        {
            //doc.Add(new Paragraph("\t You have high sense of independence, which characterizes you. Your ambitions in life are unambiguous and at the same time you possess a strong will power to fulfill these aspirations. You have unusual calmness and stability that gives you perseverance and determination to achieve your goals. You are socially motivated, but basically being independent in nature and having a strong sense of diligence and pushiness, your openness and friendly nature takes a backseat in tough and challenging situations. \n"));
            //doc.Add(new Paragraph("\nConnecting to people - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Being independent natured, you have a convincing and powerful style while dealing with people and you always strive to protect and defend your stance and often try to maintain your sense of identity. Further having high self confidence, social networking skill is good in you where you simply mingle deftly with other people or with strangers, and handle well in unusual situations.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are self-willed and stubborn, with strong social skills and strong sense of personal responsibility that helps you to take initiative and become a good facilitator. You are also unsystematic, arbitrary, and unconcerned with details. You being patient, tenacious, and assertive, you tend to weigh the pros and cons of any situation and then arrive at a concluding decision.\n "));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Achieving your goals and having a control over the situation motivates you. You value success and achievement a lot but at the same time, maintaining positive relationships are important to you also. Hence, under certain conflicting circumstances you won’t compromise on relationships to achieve your goal, but will see to it that things are resolved amicably before achieving the desired result.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Independence, Self-confidence and Persistence. "));

            #region getting_Low-C_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Low-C-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
                else
                {
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
            }
            #endregion

            return;
        }
        #endregion
        // 9. D and I in positive region and I > D
        #region Positive-DI_I>D
        //if ((DiffB > -1 && DiffR > -1) && (DiffBl < -1 && DiffG < -1) && (DiffB < DiffR))
        if ((DiffB > -1 && DiffR > -1) && (DiffBl <= -1 && DiffG <= -1))
        {
            //doc.Add(new Paragraph("\t Demanding, assertive, optimistic, enthusiastic, magnetic, and ambitious are the characteristics that define your personality. You maintain focus on your goals and have determination to achieve it. You accept risks and welcome challenges without fear. You are forceful and direct, but at the same time you are emotional too.  \n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are assertive and confident and at the same time you have strong social skills. You have charisma and magnetism but you tend to show domineering and forceful behaviour particularly under stressed situation. These qualities help you deal with any situations directly and fearlessly. If the situation demands you are capable to adopt a confrontational position. Though you display authority and domination, you feel the need to be liked by the people around you on sincere terms, in addition of being respected by them. Independence and self confidence being your key characteristics, you have a powerful and persuasive approach to every circumstance.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are driven and forceful. You love challenges. Being self reliant, you are capable of taking personal responsibility for your actions. You are ambitious and love to take risk. You are self starter and problem solver.  You have the ability to think outside the box. You dislike routine and sometimes attempt too much at once. At work, your assertiveness and persuasion helps you to motivate others to accept your idea and concept. On a weaker side, you are not a good listener and tend to listen only when it is convenient or appropriate. You are inattentive to details.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            ////doc.Add(new Paragraph("\t Challenge is a keyword for you where you thrive in situations that others would find impossibly stressful and difficult to deal with. Your need for achievement means that you are willing to undertake almost any task to achieve success or recognition, and this driving, motivated approach lends them an urgency and energy rarely seen in others.You are the classic ideal for direct sales work. This type of occupation characterizes you for having the ability to think and react quickly, adapt to challenging situations and use powers of both assertiveness and persuasion to motivate others to accept your own proposals."));
            //doc.Add(new Paragraph("\t Challenge is the driving force for you. New challenges, changing environment along with freedom from mundane tasks and routine, motivates you. In challenging environment you tend to enjoy a lot where others would get stressed out in the similar situation. Success and achievement drives you all the time and the will to succeed gives you an unmatched energy and enthusiasm.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Self-motivation, Independence, Enthusiasm and Self-confidence."));

            #region getting_Positive-DI_I>D_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-DI-profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
                else
                {
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
            }
            #endregion

            return;
        }
        #endregion
        // 10. D and S in positive region and D > S
        #region Positive-DS_D>S
        //if ((DiffB < 10 && DiffB > -1) && (DiffR < -1 && DiffG < -1) && (DiffBl < 10 && DiffBl > -1) && (DiffB > DiffBl))
        if ((DiffB <= 10 && DiffB > -1) && (DiffR <= -1 && DiffG <= -1) && (DiffBl <= 10 && DiffBl > -1))
        {
            //doc.Add(new Paragraph("\t You exhibit a paradoxical behaviour. By nature you are assertive and persuasive, yet at the same time you are relaxed and show stability in your approach. \n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You assume two different approaches while relating to people. If you are confident about the person or people around you or if you have developed a trust factor already, then you have a trusting and friendlier approach. Or else you remain skeptical and you hardly open up or reveal information or share your ideas with others.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t With regards to achieving your goals, you display a focused and practical approach and follow it till the end. Your patience, consistency and determination help you to tie all the loose ends and meet your targets within the stipulated timelines. You like to plan your work before commencing. Under steady situation you generally show caution and consideration but under pressure, you exhibit a demanding approach that helps you attain your goal effectively.\n "));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\tYou need control of own activities and at the same time you require long term affiliation and stable work environment. Consequently, you try to preserve the status quo and avoid sudden change using your authority.\n "));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are persistence, efficiency, independence and thoughtfulness. "));

            #region getting_Positive-DS_D>S_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-DS-profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
                else
                {
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
            }
            #endregion

            return;
        }
        #endregion
        // 11. D and C in positive region and D < C
        #region Positive-DC_D>C
        //if ((DiffB < 10 && DiffB > -1) && (DiffR < -1) && (DiffBl < -1) && (DiffG < 10 && DiffG > -1) && (DiffB < DiffG))
        if ((DiffB <= 10 && DiffB > -1) && (DiffR <= -1) && (DiffBl <= -1) && (DiffG <= 10 && DiffG > -1))
        {
            //doc.Add(new Paragraph("\t You are basically a very reserved kind of person and show a controlled and organized approach in life.  You have a no nonsense approach. You believe in accuracy and always strive for perfection. You are direct in your manner and often voice your opinion strongly. You are basically an efficient person but you have very little interest in personal matters. You are analytical in nature and prefer not to take unwarranted risk.\n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t As you are basically reserved type of a person, you generally don’t communicate on a personal level. Further your communication remains to the point, crisp and normally remains on a practical level. Emotions generally don’t play a major role in your life. You are not that trusting kind who will share everything with people around you, rather your skepticism makes you keep the facts with yourself and you tend to share it only when utmost necessary. Further your need to be active all the time makes you impatient with those you can’t keep up with your pace.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Achievement and efficiency combined with perfection and precision drives you. Your assertive, self reliant and reserved nature helps you to attain your goals relentlessly and also makes you capable to take responsibility for your action. Though you like to see immediate results but you also believe in proper planning and execution. Further, you generally can manage stress and conflicts in life effectively.  The assertiveness and accuracy in everything sometimes goes to such an extreme that you expect the same from others and you also pinpoint their mistakes  if they have gone wrong somewhere, though for them it might be an insignificant or petty issue.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Achievement and success in your work inspires you. While driving towards success, you also complete the task with accuracy and precision and that gives you immense satisfaction. However, it is difficult to predict if anything motivates you at all, as you tend to remain bit aloof and distant and keep your emotions under control.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Efficiency, Self-motivation , Accuracy and Sensitivity "));

            #region getting_Positive-DC_D>C_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-DC-profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
                else
                {
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
            }
            #endregion

            return;
        }
        #endregion
        // 12. I and S in positive region and I > S
        #region Positive-IS_I>S
        //if ((DiffB < -1 && DiffG < -1) && (DiffR < 10 && DiffR > -1) && (DiffBl < 10 && DiffBl > -1) && (DiffR > DiffBl))
        if ((DiffB <= -1 && DiffG <= -1) && (DiffR <= 10 && DiffR > -1) && (DiffBl <= 10 && DiffBl > -1))
        {
            //doc.Add(new Paragraph("\tYou are friendly, emotional and empathetic by nature. You are basically inclined to relationships, personal issues and networking. You generally don’t give importance to life’s hard realities. You like to get involved in people’s problems and tend to give a helping hand whenever possible. People like you become great counselors. \n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You can easily connect to people and mingle with them. You don’t get perturbed by strangers at all. Your confidence and socializing nature makes you receptive to people’s ideas and feelings. In any demanding situations, your persuasive approach helps you to adopt yourself well, but at the same time you also show patience while dealing with others. You generally develop a warm and friendly relation with those around you. You are genuinely interested in people.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have an open and outgoing personality. You have a strong ability to communicate and you possess a deep understanding of people and situation. This helps you to adapt to new situations effectively. You’re being influential and charming helps you to function effectively in any situations. But being less assertive, it sometimes gets difficult for you to deal in confrontational situations. You are persistent by nature and this helps you to finish the work that you have embarked on.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Positive and friendly atmosphere motivate you. You generally avoid conflicting situations.  You always like to be appreciated and respected by the people around you. You always have the need to be accepted by others and you desire that they are sympathetic and attentive towards you.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Friendliness, Self-confidence, Patience and Persistence."));

            #region getting_Positive-IS_I>S_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-IS-profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
                else
                {
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
            }
            #endregion

            return;
        }
        #endregion
        // 13. I and C in positive region and I > C
        #region Positive-IC_I>C
        //if ((DiffB <= -1 && DiffBl <= -1) && (DiffR < 10 && DiffR > -1) && (DiffG < 10 && DiffG > -1) && (DiffR > DiffG))
        if ((DiffB <= -1 && DiffBl <= -1) && (DiffR <= 10 && DiffR > -1) && (DiffG <= 10 && DiffG > -1))
        {

            //doc.Add(new Paragraph("\t You are basically open and friendly type of person with an organized and structured approach to situation and people around you. In relaxed and comfortable environment, you show enthusiasm and excitement whereas in more structured and formal situations, you are meticulous and display a process oriented approach. \n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t The way you relate to people actually depends on the situation that you are in. In casual environment you display confidence and openness and have an outgoing behaviour; but in formal situation where you are not so comfortable, you tend to be compliant along with your diminished confidence level. In such situations, you are generally not expressive about your feelings and emotions and rarely make direct criticism or enter into arguments; rather you are concerned about what others have opinion about you.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Depending on the situation, you can be friendly and charming or direct and forthright, or aloof and guarded. Basically you are a confident and enthusiastic person. You understand the nuances in any sort of communication which are generally overlooked or remain undetected by others. But sometimes you do get over-sensitive to other’s opinion, when actually nothing exists to react that way. Nevertheless, you tend to be a good team-worker. Your organized structured approach acts as strength in any group situations. Rather than focusing on your specific needs, you tend to focus on group’s needs.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Being friendly and charming, you have the need for others approval and interest, but being compliant, you generally don’t show this openly, rather you are more restrained.  A sense of sureness about your position especially in social terms motivates you. Your motivation stems from the achievement of personal ambition, social acceptance and social recognition, and certainty of your position.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Friendliness, Enthusiasm, Co-cooperativeness and Sensitivity."));

            #region getting_Positive-IC_I>C_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-IC-profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
                else
                {
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
            }
            #endregion

            return;

        }
        #endregion
        // 14. S and C High
        #region High-SC
        //if ((DiffB <= -1 && DiffR <= -1) && (DiffG < 10 && DiffG > -1) && (DiffBl < 10 && DiffBl > -1))
        if ((DiffB <= -1 && DiffR <= -1) && (DiffG <= 10 && DiffG > -1) && (DiffBl <= 10 && DiffBl > -1))
        {
            //doc.Add(new Paragraph("\t You are intellectually very sound and tend to focus on perfection and accuracy. As a person you are passive by nature, meticulous, reserved and a systematic thinker. A perfectionist by nature, you set high standards of quality and accuracy and strive to achieve them. A process oriented individual, who prefers to design processes and set the rules and follow them too. You speak only if necessary and only when it forms a part of your core interest of expertise.  You are amazingly ambitious and have high goals and you tend to use existing structures and rules to accomplish your aims. You are also extremely logical, structured and systematic in your approach towards work.\n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t You prefer to relate to individuals on a one on one basis rather than connecting with them in a group. In unfamiliar settings, you normally find difficulty to connect to people. Though you value relationships, you generally don’t display it openly. You depend on assertive and outgoing people around you to initiate the interpersonal issues rather than you taking the lead. You have sound knowledge and intellect and many a times finds yourself in a situation where your intellect is higher than the group.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Your strengths can be summarized as ‘diligent’, perfectionist and self reliant. You are persistent in approach, having the patience and precision, you work steadily at a task until it is achieved. You don’t like to be rushed in any activity or situation, and sudden unplanned change demotivates you. You are very self-reliant, with your structured way of thinking you often show your strength when it comes to organizing facts or working with precise detail or sophisticated systems. Your potential generally lies in technical work.  At times due to the need to be precise and detail oriented you would be seen as slow paced, however your thoughtful nature and diligence improves the quality of decisions you make.  You have a disciplined, purposeful approach, where actions are carefully planned with caution and care.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Self reliant and perfectionism is the root source of motivation in you. You are detailed oriented, and plan with extreme details; however you believe that the goal is met if the process is adhered to. You have the need for time to plan and execute your work carefully and thereby delivering high quality job gives you immense satisfaction.  You prefer to get enough time to adapt to changing situations as you normally have affinity towards stable and familiar environment. You also have a subtle need to be accepted and acknowledged by people.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Persistence, Thoughtfulness and Accuracy."));

            #region getting_High-SC_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-SC-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
                else
                {
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
            }
            #endregion

            return;
        }
        #endregion
        //HD,HS,HC high DSC
        #region High-DSC
        if ((DiffB <= 10 & DiffB > -1) && (DiffBl <= 10 && DiffBl > -1) && (DiffG <= 10 && DiffG > -1) && (DiffR <= -1))
        {
            //doc.Add(new Paragraph("\t As a person you are highly analytical and relatively uncommunicative. You are basically practical in nature and rational in your thought process. Emotions don’t bother you much. You are generally secretive by nature and cautious in communication, rarely revealing much about yourselves than a bare minimum. In challenging and stressful situations, you display an assertive and forceful behaviour, whereas in easy environment you are much relaxed. \n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Your inclination to relate to people in general is usually found low. You have a passive approach towards reacting to others’ comments or ideas. You prefer not to provide any direct inputs to others unless you are asked for. When you are in certain difficult or demanding situations your willingness to communicate do increase significantly, but to communicate on a personal level is normally low. Being yourself precise and accurate, you tend to demand similar kind of behaviour from people around you.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t You never act on impulse and take unnecessary risks. You put extreme emphasis on results and productivity, leading to a disciplined purposeful approach, where actions are carefully planned with caution and care. You are comfortable with complex systems and processes and work well with facts. You emphasize on efficiency and effectiveness, and that is reflected in both your professional and personal front. If you start something, you like to carry it through the end.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t You like to solve your problems in your own way and achievement of results motivates you. You need opportunity to prove yourself. You prefer to get enough time to adapt to changing situations as you normally have affinity towards stable and familiar environment.  You have the need for time to plan and execute your work carefully and thereby delivering high quality job gives you immense satisfaction. You need full understandings of facts and specific knowledge of the job and tend to seek freedom from risk.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are accuracy, efficiency and thoughtfulness."));

            #region getting_High-DSC_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-DSC-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
                else
                {
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
            }
            #endregion

            return;
        }
        #endregion
        //HI,HD,HC high DCI
        #region High-DCI
        if ((DiffB <= 10 & DiffB > -1) && (DiffG <= 10 && DiffG > -1) && (DiffR <= 10 && DiffR > -1) && (DiffBl <= -1))
        {
            //doc.Add(new Paragraph("\t You are basically fast paced and have high sense of urgency. You are impatient with routines and love variety. You are self-confident and have challenging and competitive approach and at the same time you are socially poised and very outgoing by nature. Though you are extremely assertive and have high need to achieve success, you work in consensus and exhibit caution in dealing with situations. You normally do not show unpredictability in your approach.\n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t You display effective social abilities, particularly evident in any informal open situations, where you exhibit a friendly, open and enthusiastic approach. In formal environment, however, you have self-controlled, driving attitude and display a less sociable style.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Depending on situations, you can be charming and enthusiastic, or direct and forthright. You are socially aware, and able to detect nuances in communication. In demanding situation, you display usual outgoing and expressive behaviour, but is bolstered by a more assertive approach.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Your motivation stems from the achievement of personal ambition, recognition for own ideas, social acceptance and social recognition, and certainty of your position.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are enthusiasm, self-motivation and sensitivity."));

            #region getting_High-DCI_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-DCI-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
                else
                {
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
            }
            #endregion

            return;
        }
        #endregion
        //HI,HD,HS high DSI
        #region High-DSI
        if ((DiffB <= 10 & DiffB > -1) && (DiffBl <= 10 && DiffBl > -1) && (DiffR <= 10 && DiffR > -1) && (DiffG <= -1))
        {
            //doc.Add(new Paragraph("\tAs a person you are dynamic and direct and have an independent behavioral style. You have a clear idea about your goals in life and you equally have the strength to achieve it. You have a more single-minded and stubborn approach to situations. Your remarkable tenacity and determination help you to attain your goal in life. Though you mix easily with strangers, and are unafraid to initiate social contact, you have a powerful, persuasive, confident behavioral style. This helps you to deal directly and fearlessly with most situations. While you will typically prefer to keep matters on an open and friendly level, you are quite capable of adopting a more determined and confrontational stance where a situation calls for.\n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t You interact easily and skillfully with people around you, and rarely experience self-doubt, and you feel at ease in almost any social situations. You are unafraid to initiate social contact however you have a strong sense of independence and tend to maintain your own sense of identity, and tend to protect and defend your own viewpoint.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t : You exhibit dependency and at the same time have strong social abilities. This helps you to take initiative in every activity with great confidence and assertiveness. Your self- reliance style with a strong sense of personal responsibility makes you an effective facilitator. Being patient and persistent along with assertiveness helps you to achieve the results. Further, you also consider and weigh the options before arriving at a definite conclusion.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t You like to have control over your own state of affairs, and being persistent and assertive, like to do things in your own way. While success and achievements are important to you, you also value positive and friendly relationships with other people. Thereby, under certain situation you might even delay achieving your goals, if there is some sort of conflict existing with others' needs.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are independence, self-confidence and persistence."));

            #region getting_High-DSI_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-DSI-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
                else
                {
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
            }
            #endregion

            return;
        }
        #endregion
        //HI,HS,HC high ISC
        #region High-ISC
        if ((DiffG <= 10 & DiffG > -1) && (DiffBl <= 10 && DiffBl > -1) && (DiffR <= 10 && DiffR > -1) && (DiffB <= -1))
        {
            //doc.Add(new Paragraph("\tYou are basically warm, friendly and outgoing by nature. You are patient and generally a good listener. You work cooperatively with others and you love team oriented environment. You tend to avoid individual risk and tend to accept others’ ideas. You are normally not very assertive and dominant type and thereby you prefer to achieve your ends through communication, using your persuasive abilities and rationality. You usually distribute responsibility and tend to concentrate particularly on the details of a task. You are not very ambitious kind and are happy in building strong social relationships.\n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t You work harmoniously with the group. Your outgoing friendly style along with your patience and accommodative nature makes you a good listener. Your strong analytical rationale helps you to present your ideas and arguments in convincing and logical manner.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Your warm friendly, extroverted easy going nature helps you to be a good team player.  You usually entertain ideas from your team. You are receptive to other people and sympathetic to their point of view. With your patience and steadiness, you have high tolerance to repetitive work.  Your confidence helps you to maintain a proactive approach to the situation, though it generally lacks effectiveness due to your low assertiveness.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Warm, friendly, extroverted environment makes you happy and content. You are not ambitious kind but supportive ‘family-like’ work team motivates you. You need time to adapt to new situations or changes and prefer a stable work environment. A sense of sureness about your position especially in social terms motivates you.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are cooperativeness, friendliness and patience."));

            #region getting_High-ISC_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-ISC-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
                else
                {
                    Paragraph p = new Paragraph(dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    p.SetAlignment("justify");
                    doc.Add(p);
                }
            }
            #endregion

            return;
        }
        #endregion

        //From here discription not aviable in DB.

        // Basic Profiles
        // flick - up (from here to Very-High I all discription is similer.) 
        #region Flick-up
        if (T1 == true || T2 == true || T3 == true)
        {

            doc.Add(new Paragraph("\t Communication is the key factor in you. You can communicate easily and fluently with others. You are often referred to as 'Communicator' profiles – you are confident, outgoing and gregarious individual who value contact with other people and the development of positive relations.\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are best in Connecting to People. You are open to others and confident in your own social abilities, and interact positively in almost any situation. Your strong and evident confidence, coupled with your genuine interest in the ideas and especially feelings of other people, are often found charming by those around you. Your actions will often be designed to improve and extend relations, even to the extent of alienating people who are not part of your circle. \n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You distinct abilities lie in the area of communication and relationship building. You are not only a strong communicator, possessing the assertiveness to drive home a point of view, but also have the intuitive qualities to understand others' perspectives and adapt others to meet new situations. \n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have a natural talent to connect to people. You have no inhibitions in getting connected to different type of people. This also stems from the fact that you have an inner confidence to build a long term relation. Specifically, you need to feel accepted by those around you, and react badly if you perceive yourselves to be rejected or disliked. Praise and approval make a strong impression on you, and you will sometimes go to great lengths to achieve this kind of reaction from other people.Especially important to you are the opinions and reactions of your particularly close circle. You believe in creating a positive environment that enhances the well being of people around you.\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub--traits of this type are Friendliness , Enthusiasm and Self--confidence", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            return;
        }
        #endregion
        // flick - down
        #region flick-down
        if (TD1 == true || TD2 == true || TD3 == true)
        {
            doc.Add(new Paragraph("\t Communication is the key factor in you. You can communicate easily and fluently with others. You are often referred to as 'Communicator' profiles – you are confident, outgoing and gregarious individual who value contact with other people and the development of positive relations.\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are best in Connecting to People. You are open to others and confident in your own social abilities, and interact positively in almost any situation. Your strong and evident confidence, coupled with your genuine interest in the ideas and especially feelings of other people, are often found charming by those around you. Your actions will often be designed to improve and extend relations, even to the extent of alienating people who are not part of your circle.\n ", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You distinct abilities lie in the area of communication and relationship building. You are not only a strong communicator, possessing the assertiveness to drive home a point of view, but also have the intuitive qualities to understand others' perspectives and adapt others to meet new situations. \n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have a natural talent to connect to people. You have no inhibitions in getting connected to different type of people. This also stems from the fact that you have an inner confidence to build a long term relation. Specifically, you need to feel accepted by those around you, and react badly if you perceive yourselves to be rejected or disliked. Praise and approval make a strong impression on you, and you will sometimes go to great lengths to achieve this kind of reaction from other people.Especially important to you are the opinions and reactions of your particularly close circle. You believe in creating a positive environment that enhances the well being of people around you.\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub--traits of this type are Friendliness , Enthusiasm and Self--confidence", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            return;
        }
        #endregion
        // sweep - down
        #region sweep-down
        if ((DiffB < 10 && DiffB >= -1) && (DiffR < 10 && DiffR >= -1) && (DiffBl > -11 && DiffBl <= -1) && (DiffG > -11 && DiffG <= -1))
        {
            if ((DiffB < DiffR) && (DiffBl - DiffG > 4))
            {
                doc.Add(new Paragraph("\t Communication is the key factor in you. You can communicate easily and fluently with others. You are often referred to as 'Communicator' profiles – you are confident, outgoing and gregarious individual who value contact with other people and the development of positive relations.\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You are best in Connecting to People. You are open to others and confident in your own social abilities, and interact positively in almost any situation. Your strong and evident confidence, coupled with your genuine interest in the ideas and especially feelings of other people, are often found charming by those around you. Your actions will often be designed to improve and extend relations, even to the extent of alienating people who are not part of your circle. \n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You distinct abilities lie in the area of communication and relationship building. You are not only a strong communicator, possessing the assertiveness to drive home a point of view, but also have the intuitive qualities to understand others' perspectives and adapt others to meet new situations. \n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You have a natural talent to connect to people. You have no inhibitions in getting connected to different type of people. This also stems from the fact that you have an inner confidence to build a long term relation. Specifically, you need to feel accepted by those around you, and react badly if you perceive yourselves to be rejected or disliked. Praise and approval make a strong impression on you, and you will sometimes go to great lengths to achieve this kind of reaction from other people.Especially important to you are the opinions and reactions of your particularly close circle. You believe in creating a positive environment that enhances the well being of people around you.\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t The sub--traits of this type are Friendliness , Enthusiasm and Self--confidence", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                return;
            }
        }
        #endregion
        // 8-5 Pattern
        #region 8-5_Pattern
        if ((DiffB >= -4 && DiffB <= 2) && (DiffR >= -4 && DiffR <= 2) && (DiffBl >= -4 && DiffBl <= 2) && (DiffG >= -4 && DiffG <= 2))
        {
            if ((DiffB >= -4 || DiffB <= -1) && (DiffR >= -1 && DiffR <= 2) && (DiffBl <= -1 && DiffBl >= -4) && (DiffG >= -1 && DiffG <= 2))
            {
                doc.Add(new Paragraph("\t Communication is the key factor in you. You can communicate easily and fluently with others. You are often referred to as 'Communicator' profiles – you are confident, outgoing and gregarious individual who value contact with other people and the development of positive relations.\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You are best in Connecting to People. You are open to others and confident in your own social abilities, and interact positively in almost any situation. Your strong and evident confidence, coupled with your genuine interest in the ideas and especially feelings of other people, are often found charming by those around you. Your actions will often be designed to improve and extend relations, even to the extent of alienating people who are not part of your circle.\n ", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You distinct abilities lie in the area of communication and relationship building. You are not only a strong communicator, possessing the assertiveness to drive home a point of view, but also have the intuitive qualities to understand others' perspectives and adapt others to meet new situations. \n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You have a natural talent to connect to people. You have no inhibitions in getting connected to different type of people. This also stems from the fact that you have an inner confidence to build a long term relation. Specifically, you need to feel accepted by those around you, and react badly if you perceive yourselves to be rejected or disliked. Praise and approval make a strong impression on you, and you will sometimes go to great lengths to achieve this kind of reaction from other people.Especially important to you are the opinions and reactions of your particularly close circle. You believe in creating a positive environment that enhances the well being of people around you.\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t The sub--traits of this type are Friendliness , Enthusiasm and Self--confidence", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                return;
            }
        }
        #endregion

        // D=C (from here to Very-High D all discription is similer.) 
        #region D=C
        if (DiffB > -1 && DiffR <= -1 && DiffBl <= -1 && DiffG > -1)
        {
            if (DiffB == DiffR)
            {
                doc.Add(new Paragraph("\t You are often described as the 'Autocrat', and for good reason. You display a high level of control and assertiveness, and remarkably domineering, and even overbearing at times.You have a very strong need to achieve, and because of this you are often ambitious and competitive, striving aggressively to achieve your goals. You are dynamic and adaptable, and show decisiveness and a capacity for direct leadership.\n ", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You tend to stress on achievement and success significantly, which affects your relations with other people. In extreme cases, you seem to treat other people simply as a means to an end, or a way of achieving your personal goals. Since you are not emotional, you tend not to place great importance on feelings, either your own or others'. The competitive nature in you leads to see challenges and opposition everywhere, and others sometimes find it difficult to break through this naturally suspicious, skeptical shell of yours.\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You have qualities of command and leadership. It should be noted, however, that these abilities are based on your direct, demanding nature, and are more suited to structured, formal situations than those where close ties are required. You are a competent and confident decision-maker, able to reach a conclusion quickly from minimal information and act accordingly. You are well suited to situations that others would find unbearably stressful, as your desire for challenge and your enjoyment of success against the odds makes you unusually proficient in dealing with such situations. \n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You like to feel that you are in control, and seek opportunities to reinforce and emphasize your personal power. You measure your progress in life by your achievements and successes, and feel the need to maintain a sense of personal momentum. Being impatient and forthright, you intensely dislike situations that you are unable to directly resolve for yourselves - dependence on other people is anathema to you. You find these kinds of situation extremely frustrating, and can be driven to wild, impulsive actions in an attempt to relieve the pressure.\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t The sub-traits of this type are Efficiency, Self-motivation and Independence.", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                return;
            }
        }
        #endregion
        // Overshift
        #region Overshift
        if (DiffB > -1 && DiffR > -1 && DiffBl > -1 && DiffG > -1)
        {
            doc.Add(new Paragraph("\t You are often described as the 'Autocrat', and for good reason. You display a high level of control and assertiveness, and remarkably domineering, and even overbearing at times.You have a very strong need to achieve, and because of this you are often ambitious and competitive, striving aggressively to achieve your goals. You are dynamic and adaptable, and show decisiveness and a capacity for direct leadership.\n ", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You tend to stress on achievement and success significantly, which affects your relations with other people. In extreme cases, you seem to treat other people simply as a means to an end, or a way of achieving your personal goals. Since you are not emotional, you tend not to place great importance on feelings, either your own or others'. The competitive nature in you leads to see challenges and opposition everywhere, and others sometimes find it difficult to break through this naturally suspicious, skeptical shell of yours.\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have qualities of command and leadership. It should be noted, however, that these abilities are based on your direct, demanding nature, and are more suited to structured, formal situations than those where close ties are required. You are a competent and confident decision-maker, able to reach a conclusion quickly from minimal information and act accordingly. You are well suited to situations that others would find unbearably stressful, as your desire for challenge and your enjoyment of success against the odds makes you unusually proficient in dealing with such situations.\n ", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You like to feel that you are in control, and seek opportunities to reinforce and emphasize your personal power. You measure your progress in life by your achievements and successes, and feel the need to maintain a sense of personal momentum. Being impatient and forthright, you intensely dislike situations that you are unable to directly resolve for yourselves - dependence on other people is anathema to you. You find these kinds of situation extremely frustrating, and can be driven to wild, impulsive actions in an attempt to relieve the pressure.\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits of this type are Efficiency, Self-motivation and Independence.", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            return;
        }
        #endregion
        // Undershift
        #region Undershift
        if (DiffB <= -1 && DiffR <= -1 && DiffBl <= -1 && DiffG <= -1)
        {
            doc.Add(new Paragraph("\t You are often described as the 'Autocrat', and for good reason. You display a high level of control and assertiveness, and remarkably domineering, and even overbearing at times.You have a very strong need to achieve, and because of this you are often ambitious and competitive, striving aggressively to achieve your goals. You are dynamic and adaptable, and show decisiveness and a capacity for direct leadership.\n ", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You tend to stress on achievement and success significantly, which affects your relations with other people. In extreme cases, you seem to treat other people simply as a means to an end, or a way of achieving your personal goals. Since you are not emotional, you tend not to place great importance on feelings, either your own or others'. The competitive nature in you leads to see challenges and opposition everywhere, and others sometimes find it difficult to break through this naturally suspicious, skeptical shell of yours.\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have qualities of command and leadership. It should be noted, however, that these abilities are based on your direct, demanding nature, and are more suited to structured, formal situations than those where close ties are required. You are a competent and confident decision-maker, able to reach a conclusion quickly from minimal information and act accordingly. You are well suited to situations that others would find unbearably stressful, as your desire for challenge and your enjoyment of success against the odds makes you unusually proficient in dealing with such situations.\n ", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You like to feel that you are in control, and seek opportunities to reinforce and emphasize your personal power. You measure your progress in life by your achievements and successes, and feel the need to maintain a sense of personal momentum. Being impatient and forthright, you intensely dislike situations that you are unable to directly resolve for yourselves - dependence on other people is anathema to you. You find these kinds of situation extremely frustrating, and can be driven to wild, impulsive actions in an attempt to relieve the pressure.\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits of this type are Efficiency, Self-motivation and Independence.", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            return;
        }
        #endregion
        // in grey zone
        #region Very-High D
        if (DiffB > 10)
        {
            doc.Add(new Paragraph("\t You are often described as the 'Autocrat', and for good reason. You display a high level of control and assertiveness, and remarkably domineering, and even overbearing at times.You have a very strong need to achieve, and because of this you are often ambitious and competitive, striving aggressively to achieve your goals. You are dynamic and adaptable, and show decisiveness and a capacity for direct leadership.\n ", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You tend to stress on achievement and success significantly, which affects your relations with other people. In extreme cases, you seem to treat other people simply as a means to an end, or a way of achieving your personal goals. Since you are not emotional, you tend not to place great importance on feelings, either your own or others'. The competitive nature in you leads to see challenges and opposition everywhere, and others sometimes find it difficult to break through this naturally suspicious, skeptical shell of yours.\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have qualities of command and leadership. It should be noted, however, that these abilities are based on your direct, demanding nature, and are more suited to structured, formal situations than those where close ties are required. You are a competent and confident decision-maker, able to reach a conclusion quickly from minimal information and act accordingly. You are well suited to situations that others would find unbearably stressful, as your desire for challenge and your enjoyment of success against the odds makes you unusually proficient in dealing with such situations.\n ", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You like to feel that you are in control, and seek opportunities to reinforce and emphasize your personal power. You measure your progress in life by your achievements and successes, and feel the need to maintain a sense of personal momentum. Being impatient and forthright, you intensely dislike situations that you are unable to directly resolve for yourselves - dependence on other people is anathema to you. You find these kinds of situation extremely frustrating, and can be driven to wild, impulsive actions in an attempt to relieve the pressure.\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits of this type are Efficiency, Self-motivation and Independence.", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            return;
        }
        #endregion

        //(discription is quite similer to Basic Profile)
        #region Very-High I
        if (DiffR > 10)
        {
            doc.Add(new Paragraph("\t Communication is the key factor in you. You can communicate easily and fluently with others. You are often referred to as 'Communicator' profiles – you are confident, outgoing and gregarious individual who value contact with other people and the development of positive relations.\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are best in Connecting to People. You are open to others and confident in your own social abilities, and interact positively in almost any situation. Your strong and evident confidence, coupled with your genuine interest in the ideas and especially feelings of other people, are often found charming by those around you. Your actions will often be designed to improve and extend relations, even to the extent of alienating people who are not part of your circle.\n ", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You distinct abilities lie in the area of communication and relationship building. You are not only a strong communicator, possessing the assertiveness to drive home a point of view, but also have the intuitive qualities to understand others' perspectives and adapt others to meet new situations.\n ", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have a natural talent to connect to people. You have no inhibitions in getting connected to different type of people. This also stems from the fact that you have an inner confidence to build a long term relation. Specifically, you need to feel accepted by those around you, and react badly if you perceive yourselves to be rejected or disliked. Praise and approval make a strong impression on you, and you will sometimes go to great lengths to achieve this kind of reaction from other people.Especially important to you are the opinions and reactions of your particularly close circle. You believe in creating a positive environment that enhances the well being of people around you.\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub--traits of this type are Friendliness , Enthusiasm and Self--confidence", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            return;
        }
        #endregion

        //(discription is independent.)
        #region Very-High S
        if (DiffBl > 10)
        {
            doc.Add(new Paragraph("\t You show high degree of patience, calmness and gentle openness. You are generally amiable and warm-hearted, being sympathetic to others' points of view, and valuing positive interaction with others. You are not outgoing by nature; however, rely on other, more assertive, people to take the lead.\n ", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t As in your general lifestyle, you initiate relationships of any kind – yours solid, dependable outlook makes you far more suited to the maintenance of interpersonal relations than making initial contact. For this reason, your circle of friends and close acquaintances is often small but tightly-knit.\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are simply 'supportive'. You are dependable and loyal, this combines with an emotional literacy to make you particularly effective listeners and counselors. You are also unusually persistent in approach, having the patience and restraint to work steadily at a task until it is achieved. This makes you unusually capable of dealing with laborious tasks that many other styles would simply not have the patience to complete.\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Patience is the root source of motivation in you. You need to feel that you have the support of those around you and, more importantly, time to adapt to new situations. You have an inherent dislike of change, and will prefer to maintain the status quo whenever possible; sudden alterations in your circumstances can be very difficult for you to deal with. Once embarked on a task, you will wish to concentrate closely on it and see it through. Interruptions and distractions of any kind can be particularly demotivating in these situations. \n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits of this type are Patience , Thoughtfulness and Persistence.", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            return;
        }
        #endregion
        //(discription is independent.)
        #region Very-High C
        if (DiffG > 10)
        {
            doc.Add(new Paragraph("\t Passive by nature, often reticent and aloof, you often tend to give an impression of coldness or disinterest. Much of this impassive style stems from your controlled nature, however, which makes you reluctant to reveal information about yourselves or your ideas unless absolutely necessary. In fact, you are often ambitious and have lofty goals, but your innate lack of assertiveness and unwillingness to become involved in confrontational situations makes it difficult for you to achieve these goals directly. Instead, you will tend to use existing structures and rules to accomplish your aims. You tend to follow rules, authority and logical argument to influence the actions of others. \n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have much strength, but the ability to relate easily to other people is rarely in you. The combination of a passive social style with a certain innate suspiciousness makes it difficult for you to form or maintain close relationships, and this is especially true in a business sense. Your friendship or close acquaintances will normally be based on mutual interests or common aims, rather than emotional considerations. \n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are generally very self-reliant although this fact is often difficult to perceive. You have structured ways of thinking, and often show particular strengths when it comes to organizing facts or working with precise detail or sophisticated systems. You have a quick-thinking individual who will often have useful input, but your natural reticence means that you will rarely offer an opinion unless asked directly for your thoughts.\n ", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You need to feel completely sure of your position, and of others' expectations of you, before you are able to proceed. Because of this, you have a very strong aversion to risk, and will rarely take any action unless you can feel absolutely sure about its consequences.\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits of this type are Cooperativeness, Accuracy and Sensitivity. ",FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
            return;
        }
        #endregion
    }
    private void profile_conditions_pdf_2()
    {

        iTextSharp.text.Image endblock = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/endblock.png"));
        endblock.ScaleToFit(5f, 5f);
        //endblock.SetAbsolutePosition(0,0);

        Chunk imageChunk1 = new Chunk(endblock, 0, 0);
        Phrase limage = new Phrase();
        limage.Add(imageChunk1);


        iTextSharp.text.Table behavioural_profile = new iTextSharp.text.Table(1);
        behavioural_profile.DefaultCellBorder = 0;
        behavioural_profile.Border = 0;
        behavioural_profile.DefaultHorizontalAlignment = 0;

        //behavioural_profile.Padding = 2;
        //behavioural_profile.Spacing = 5;
        //behavioural_profile.BorderWidthLeft = 0;
        //behavioural_profile.BorderWidthRight = 0;
        //behavioural_profile.BorderWidthTop = 0;
        //behavioural_profile.BorderWidthBottom = 0;
        //behavioural_profile.Widths = new float[] { 50, 50 };
        // behavioural_profile.Width = 100;

        //Paragraph pa = new Paragraph("\n\n\n\nProfile Analysis", FontFactory.GetFont(FontFactory.HELVETICA, 16, Font.BOLD));
        //pa.SetAlignment("center");
        //doc.Add(pa);

        // ............Paragraph pdq_1 = new Paragraph("How Do you relate to others ?", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD));
        doc.Add(new Paragraph("\nHow Do You Relate To Others ?", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD)));
        //        ............ pdq_1.SetAlignment("left");
        //doc.Add(pdq_1);

        //............ Cell be_column_1 = new Cell(pdq_1);
        //............ be_column_1.HorizontalAlignment = iTextSharp .text.Element.ALIGN_LEFT;
        //be_column_1.VerticalAlignment = Element.ALIGN_CENTER;
        //  be_column_1.BackgroundColor = new Color(204, 229, 255);
        //be_column_1.BorderWidthLeft = 1;
        // be_column_1.BorderWidthRight = 1;
        //  be_column_1.BorderWidthTop = 1;
        // be_column_1.BorderWidthBottom = 1;
        //...................  behavioural_profile.AddCell(be_column_1);

        // Different Patterns for Graph 3 
        //doc.Add(new Paragraph("\n Profile Analysis", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
        // 1. D is greater than all and in positive region
        #region High-D
        if ((DiffB <= 10 & DiffB > -1) && (DiffR <= -1 && DiffBl <= -1 && DiffG <= -1))
        {
            //doc.Add(new Paragraph("\t Direct, decisive, problem solver, risk taker and self starter are the few characteristics that describe you as a person. For these basic characteristics, you are often portrayed as an 'Autocrat Manager', who is great in crisis.  You are extremely ambitious and that makes you a highly goal oriented person. You are straightforward, dominating and forceful and overbearing at times. You are a bottom-line organizer, have the knack to challenge the status quo and innovative by nature. You basically possess the leadership skills in you.\n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are not very sociable type. You focus on achievement and success and believe in individual accomplishments, and hence not a team player. You have an argumentative attitude and tend to overstep authority. Sometimes you tend to maintain relations with people around you to just to fulfill your personal goals. You relate to people who are submissive and only till your goal is met. You neither care people’s emotions or feelings and nor care your own. You are not very friendlier or approachable. Others sometimes find it difficult to break through this naturally suspicious, skeptical shell of yours.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are self-reliant, innovative in getting results, and maintain focus on goals. You have the ability to overcome obstacles, provide direction and leadership and offer innovative and progressive systems and ideas. You can push group toward decisions and willing to speak out. Generally optimistic, you welcome challenges without fear. You accept risks and have the ability to see the big picture. You can handle multiple projects and function well with heavy work loads and cope well in stressful situations. You like to be in charge and solve problems. You set lofty goals and sometimes attempt too much at once.  You lose focus on problems sometimes.  While analyzing information, you ignore potential risks and do not weigh the pros and cons and do not consider others' opinions also.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You love challenge and autonomy. You need freedom and you want prestige. You need opportunity for advancement and like projects that produce tangible results.  You prefer personal evaluation based on results, and not methods. You are motivated by new challenges, power and authority to take risks and make decisions, freedom from routine and mundane tasks and changing environments in which to work and play.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Efficiency, Self-motivation and Independence."));

            #region getting_high-D_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_2 FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-D-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //..  Cell be_column_3 = new Cell(p);
                    //  be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    // doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    //doc.Add(limage);
                    //.. behavioural_profile.AddCell(be_column_3);

                    doc.Add(p);
                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //..  Cell be_column_3 = new Cell(p);
                    // be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;

                    // doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));

                    // doc.Add(limage);
                    //..  behavioural_profile.AddCell(be_column_3);
                    // doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    doc.Add(p);
                }
            }
            #endregion
            behavioural_profile.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 2. I is Greater than all and in positive region
        #region High-I
        if ((DiffB <= -1) && (DiffR <= 10 && DiffR > -1) && (DiffBl <= -1) && (DiffG <= -1))
        {
            //doc.Add(new Paragraph("\t Enthusiastic, trusting, optimistic, persuasive, talkative, impulsive and emotional are the characteristics that describe you as a person. Communication is the key factor in you, where you communicate easily with the people around you and have a friendly, influential and persuasive style while dealing with them.\n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have a natural talent to connect to people. You are extremely networked and connected to every person heart to heart.  You build a favorable, friendly environment around you. You have a genuine interest in the ideas and feelings of other people. Your enthusiasm and charming nature along with your high level of confidence create a positive aura around you. You are open to others and confident in your own social abilities, and interact positively in almost any situation. You have the ability to motivate people in a team environment. You create an influencing circle or group, where your actions revolve around building and maintaining relationships, sometimes, even to the extent of alienating people who are not part of the circle.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Your distinct abilities lie in the area of communication and relationship building. You are not only a strong communicator, but also you have the ability to verbalize about ideas, people and their intuition. You can express ideas well and perceive the nuances and adapt well in any situations. You make a good spokesperson. In a team environment, you are a great encourager, creative problem solver, peace maker and a good conflict negotiator. You respond well to the unexpected. You create an atmosphere of well being, provide direction and leadership, work well with other people, will offer opinions, and have a positive attitude. You accomplish goals through people, have good sense of humor and strong in brainstorming sessions. On a weaker side, you are more concerned with popularity than tangible results. You are inattentive to detail, sometimes overuse gestures and facial expression and you tend to listen only when it's convenient.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\tYou are motivated by flattery, praise, popularity, and acceptance. A friendly environment, freedom from many rules and regulations, a forum to express ideas, group activities in professional and social environments make you feel happy and contented. Having other people available to handle details further gives you a boost.  Social esteem and acceptance, and recognition for abilities, praise and approval make a strong impression on you. Further, opportunity to motivate and influence others and positive working conditions gives you satisfaction. Specifically, you need to feel accepted by those around you, and you are bothered about people’s opinion about you more than anything else. You tend to get offensive if you find yourselves rejected or disliked.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Friendliness, Enthusiasm and Self-confidence."));

            #region getting_high-I_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_2 FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-I-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //..  Cell be_column_3 = new Cell(p);
                    // be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    //doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    // doc.Add(limage);
                    //..  behavioural_profile.AddCell(be_column_3);
                    //p.SetAlignment("justify");
                    doc.Add(p);
                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //.. Cell be_column_3 = new Cell(p);
                    // be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    // doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    //doc.Add(limage);
                    //..  behavioural_profile.AddCell(be_column_3);
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    doc.Add(p);
                }
            }
            #endregion
            behavioural_profile.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 3. S is Greater than all and in positive region
        #region High-S
        if ((DiffB <= -1) && (DiffR <= -1) && (DiffBl <= 10 && DiffBl > -1) && (DiffG <= -1))
        {
            //doc.Add(new Paragraph("\tGood listener, team player, possessive, steady, predictable, understanding and friendly is the quality that characterizes you as a person. You show high degree of patience, calmness and gentle openness, and sympathetic to others' points of view, and value positive interaction with others.  You are generally amiable and warm-hearted but you are not outgoing by nature and tend to depend on more assertive type of people to take the lead. You are relaxed type of person, happy go lucky type, where you don’t want to rock the boat. You are easily adaptable, having a ‘flow with the wind’ kind of personality. \n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are basically reliable and dependable. You are a loyal team worker. You are compliant towards authority. You are patient and empathetic listener and that helps you to reconcile conflicts. You are generally not that type who will go and build relations upfront, but you are good in maintaining and sustaining a fruitful interpersonal relation. For this reason you are often found with a small, closely knit friend circle. In team environment you are ‘instinctive relater’, a participative manager, who accomplishes goals through personal relationships.  You have the ability to make others feel like they belong.  You are focused and intuitive about people and relationships. You buy into team goals and can identify strongly with the team.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are simply 'supportive'. You demonstrate dependable, sincere and loyal type of personality. You are also extremely persistent in approach, having the patience and restraint to work steadily at a task until it is achieved. This makes you unusually capable of dealing with laborious repetitive tasks that others might find hard to accomplish.  You can see an easier way of doing things. You are usually full of common sense. You are a thinker; focus on one thing at a time. You provide stability to any situation, where you are realistic, practical and even-tempered. However, while analyzing information, you are openly agreeable but inwardly unyielding. You tend to internalize your concerns and doubts. You tend to hesitate to share feedback during presentation. You normally resist change and take a long time to adjust to change. You hold a grudge and sensitive to criticism. Sometimes you have difficulty establishing priorities.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are motivated by recognition for loyalty and dependability. Safety and security with no sudden changes in procedure or lifestyle stimulate you. You prefer to maintain the status quo whenever possible. You need time to adjust to changes. You prefer activities that can be started and finished. Interruptions or discontinuity or changes unsettles you. Further you prefer limited territory of responsibility. You love routine and repeated work pattern. Patience is the root source of motivation in you. You need to feel that you have the support, co-operation and sincere appreciation of those around you. You like team atmosphere. You dislike conflicts and arguments.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Patience, Thoughtfulness and Persistence."));

            #region getting_high-S_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_2 FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-S-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());

                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //..     Cell be_column_3 = new Cell(p);
                    // be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    // doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    // doc.Add(limage);
                    //..   behavioural_profile.AddCell(be_column_3);
                    //p.SetAlignment("justify");
                    doc.Add(p);
                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //..  Cell be_column_3 = new Cell(p);
                    // be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    // doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    //doc.Add(limage);
                    //..   behavioural_profile.AddCell(be_column_3);

                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    doc.Add(p);
                }
            }
            #endregion
            //..  behavioural_profile.DefaultHorizontalAlignment = iTextSharp .text.Element.ALIGN_LEFT;
            //.. doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 4. C is Greater than all and in positive region
        #region High-C
        if ((DiffB <= -1) && (DiffR <= -1) && (DiffBl <= -1) && (DiffG <= 10 && DiffG > -1))
        {

            //doc.Add(new Paragraph("\t Accurate, analytical, conscientious, careful, fact-finder, precise, high standards and systematic are the characteristics that describe you as a person. You are normally passive by nature, which stems from your controlled behaviour and that give the impression of you being distant, reserved, aloof and disinterested. You generally don’t reveal information, or your feelings and emotions, only share when utmost necessary.  You are the 'anchor of reality' and even-tempered. Though you are highly ambitious, you are not that assertive to achieve it always. Rather you attain your goals by remaining within a certain framework and set rules. You are a calculated risk taker. You offer conservative approaches and emphasize quality and you are thorough to all activities. You are also diplomatic.\n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are very formal in relationships, the ability to relate easily to other people is generally lacking in you. You find difficult to adjust to informal atmosphere. Being suspicious and critical, you generally don’t have close relationships, particularly in business sense. Your friendships are not based on emotions but instead common interest or similarities in ideas and values helps to build that bond.  You prefer not to verbalize feelings; Will give in rather than argue.  You strive for a logical, consistent environment. You tend to control the details. You evaluate the team's progress, ask important questions and maintain focus on tasks and analyze obstacles. You will share risks and responsibilities, work systematically and will strive for consensus.  You tend to follow rules, authority and logical argument to influence the actions of others\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are an instinctive organizer, a 'Do it yourself' manager who create and maintain systems. You think logically. You are usually very self-reliant although this fact is often difficult to perceive. You have structured ways of thinking, and often show particular strengths when it comes to organizing facts or working with precise detail or sophisticated systems. You are a quick-thinker and can provide valuable inputs, but only share it when asked for. You tend to define situations, gather, criticize and test information. While analyzing information, you become overly cautious and conservative; Get too bogged down in details. You tend to avoid or postpone decisions, especially if you perceive a risk; However, you are an effective trouble shooter.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Standards of high quality, limited social interaction, and detailed tasks, logical organization of information and clear-cut boundaries for actions/relationships motivates you. Autonomy and independence, controlled work environment, reassurance, precise expectations and goals, exact job descriptions, planned changes inspire you. You need to feel completely sure of your position, and of others' expectations of you, before you are able to proceed. Because of this, you have a very strong aversion to risk, and will rarely take any action unless you can feel absolutely sure about its consequences. You feel comfortable in environment where tasks and projects can be followed through to completion. You prefer specialized or technical tasks, where there exist practical work procedures and routines; and you have instructions and reassurance that you are doing what is expected of you and where there are few conflicts and arguments.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Cooperativeness, Accuracy and Sensitivity."));
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            #region getting_high-C_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_2 FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-C-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);

            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);

                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //..  Cell be_column_3 = new Cell(p);
                    // be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    // doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    // doc.Add(limage);
                    //.. behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);

                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //..   Cell be_column_3 = new Cell(p);
                    //..    be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    // doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    // doc.Add(limage);
                    //..  behavioural_profile.AddCell(be_column_3);
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    doc.Add(p);
                }
            }
            #endregion
            //..  behavioural_profile.DefaultHorizontalAlignment = iTextSharp .text.Element.ALIGN_LEFT;
            //..  doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 5. D is Lower than all and in negative region
        #region Low-D
        if ((DiffB <= -1) && (DiffR <= 10 && DiffR > -1) && (DiffBl <= 10 && DiffBl > -1) && (DiffG <= 10 && DiffG > -1))
        {
            //doc.Add(new Paragraph("\t You are generally conservative, low keyed, agreeable and undemanding. You are a good team worker and ready to accept others' ideas. You are not competitive in nature, not that ambitious type, and you tend to avoid conflicting situations. You like to develop warm and friendly relations with people around you. You want to do more research before committing to a decision. You are cooperative, mild, cautious and peaceful and hence, will try to achieve your goals based on your convincing and coherent communication and friendly relations.\n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have adequate communicating skills and have relatively good networking skills. But you are not particularly assertive, and hence, in confrontational or pressurized situations you tend to falter. Being co-operative, patient and good listener, you are a team person, and able to work for the group rather than focusing on your own needs.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are an active listener. You are attentive to other team members' ideas until everyone reaches a consensus. You adopt a great appreciation for the opinions, feelings, and desires of others. You are friendly, outgoing and approachable. Further, you put energy into personal relationships and show your support for other team members and that make you strong in relationship management.\n "));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Positive and friendly interactions motivate you. Since you are not ambitious person, goals or challenges don’t excite you. Simple happiness, positive environment, warmth, and friendly terms with people give you immense satisfaction.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Friendliness, Patience and Cooperativeness."));

            #region getting_Low-D_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_2 FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Low-D-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);

                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //.. Cell be_column_3 = new Cell(p);
                    // be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    // doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    // doc.Add(limage);
                    //.. behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);
                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //..   Cell be_column_3 = new Cell(p);
                    //..   be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    // doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    // doc.Add(limage);
                    //..   behavioural_profile.AddCell(be_column_3);
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    doc.Add(p);
                }
            }
            #endregion
            //..  behavioural_profile.DefaultHorizontalAlignment = iTextSharp .text.Element.ALIGN_LEFT;
            //..  doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 6. I is lower than all and in negative region
        #region Low-I
        if ((DiffB <= 10 && DiffB > -1) && (DiffR <= -1) && (DiffBl <= 10 && DiffBl > -1) && (DiffG <= 10 && DiffG > -1))
        {
            //doc.Add(new Paragraph("\t The striking feature in you is you are shy and introvert, and you go by facts and data and not by feelings. In any typical situation or event you rely more on logic and rationale than on emotions. You are basically reflective, factual, calculative, logical, and critical. At the same time very suspicious and skeptical and tend to keep your thoughts, ideas within yourselves and will share only when asked for. You are basically relaxed and calm but in hostile or demanding situations, your assertiveness and dominance often get prominence. \n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are often direct and assertive but you seldom have interest on personal matters. You are rarely communicative and interact and communicate only when needed purely on a practical basis, rather than on a personal level. You have a passive approach. You are generally a good listener and you respond to comments and ideas when sought for rather than put forward your views voluntarily.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You believe in accuracy and efficiency. But being highly analytical and cautious, you weigh the pros and cons in depth and often hold back from action, and prefer not to behave impulsively and land up into adverse situations. Though you are result oriented, you tend to take risk only when utmost necessary. You value result and productivity. Your approach to work or life is systematic and factual and you focus on details and facts. You are also cautious in communication where you reveal only when necessary and that to in a succinct manner.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Structured and risk free environment motivates you. Achieving results and getting opportunity to work systematically with complete understanding of the subject encourages you. Getting adequate time to cope up with changes helps you to perform better.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Efficiency, Thoughtfulness and Accuracy."));

            #region getting_Low-I_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_2 FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Low-I-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);

                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //..   Cell be_column_3 = new Cell(p);
                    // be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    //  doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    // doc.Add(limage);
                    //..   behavioural_profile.AddCell(be_column_3);

                    doc.Add(p);

                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //.. Cell be_column_3 = new Cell(p);
                    // be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    // doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    //doc.Add(limage);
                    //.. behavioural_profile.AddCell(be_column_3);
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    doc.Add(p);
                }
            }
            #endregion
            behavioural_profile.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 7. S is lower than all and in negative region
        #region Low-S
        if ((DiffB <= 10 && DiffB > -1) && (DiffR <= 10 && DiffR > -1) && (DiffBl <= -1) && (DiffG <= 10 && DiffG > -1))
        {
            //doc.Add(new Paragraph("\t Speed is the crucial feature in you. You have high sense of urgency and fast pace. You are basically impatient and restless in nature and so possess high speed of response. Further, you are ambitious and assertive but at the same time sensitive in your approach. Your ambitions do get a primary focus  but if need be you definitely care for the people around you; Before accomplishing your goal, you tend to make sure that your team’s need or the need of the organization is taken care off. In informal situations, you often display good social skills.\n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are extremely aware of your environment and take notice of the changes that takes place within it. You are sharp to catch the things that are unspoken. In informal situation you display enthusiastic and open approach where else in structured or formal environment, your assertive and controlled behaviour come to the fore. \n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Depending on the situation you have the ability to modulate your behaviour which helps you to adapt to the situation in an effective way. In friendly environment you are enthusiastic and open and in formal settings, you get direct, blunt and straightforward. You also have the ability to deal with confrontation and stress effectively and you tend to be a quick thinker.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Personal achievement and success motivates you but at the same time your sensitivity makes you lean towards people, whereby their acceptance and approval gives you a kick.\n "));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Self--motivation, Enthusiasm and Sensitivity."));

            #region getting_Low-S_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_2 FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Low-S-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);

                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);

                    //..  Cell be_column_3 = new Cell(p);
                    //  be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 0;
                    //be_column_3.BorderWidthRight = 0;
                    //be_column_3.BorderWidthTop = 0;
                    //be_column_3.BorderWidthBottom = 0;
                    // doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    // doc.Add(limage);
                    //..  behavioural_profile.AddCell(be_column_3);

                    doc.Add(p);
                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //..  Cell be_column_3 = new Cell(p);
                    //  be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 0;
                    //be_column_3.BorderWidthRight = 0;
                    //be_column_3.BorderWidthTop = 0;
                    //be_column_3.BorderWidthBottom = 0;
                    //  doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    // doc.Add(limage);
                    //..  behavioural_profile.AddCell(be_column_3);
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    doc.Add(p);
                }
            }
            #endregion
            //.. behavioural_profile.DefaultHorizontalAlignment = iTextSharp .text.Element.ALIGN_LEFT;
            //..  doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 8. C is lower than all and in negative region
        #region Low-C
        if ((DiffB <= 10 && DiffB > -1) && (DiffR <= 10 && DiffR > -1) && (DiffBl <= 10 && DiffBl > -1) && (DiffG <= -1))
        {
            //doc.Add(new Paragraph("\t You have high sense of independence, which characterizes you. Your ambitions in life are unambiguous and at the same time you possess a strong will power to fulfill these aspirations. You have unusual calmness and stability that gives you perseverance and determination to achieve your goals. You are socially motivated, but basically being independent in nature and having a strong sense of diligence and pushiness, your openness and friendly nature takes a backseat in tough and challenging situations. \n"));
            //doc.Add(new Paragraph("\nConnecting to people - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Being independent natured, you have a convincing and powerful style while dealing with people and you always strive to protect and defend your stance and often try to maintain your sense of identity. Further having high self confidence, social networking skill is good in you where you simply mingle deftly with other people or with strangers, and handle well in unusual situations.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are self-willed and stubborn, with strong social skills and strong sense of personal responsibility that helps you to take initiative and become a good facilitator. You are also unsystematic, arbitrary, and unconcerned with details. You being patient, tenacious, and assertive, you tend to weigh the pros and cons of any situation and then arrive at a concluding decision.\n "));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Achieving your goals and having a control over the situation motivates you. You value success and achievement a lot but at the same time, maintaining positive relationships are important to you also. Hence, under certain conflicting circumstances you won’t compromise on relationships to achieve your goal, but will see to it that things are resolved amicably before achieving the desired result.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Independence, Self-confidence and Persistence. "));

            #region getting_Low-C_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_2 FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Low-C-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //..Cell be_column_3 = new Cell(p);
                    //   be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    // doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    //  doc.Add(limage);
                    //.. behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);

                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //..  Cell be_column_3 = new Cell(p);
                    //  be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    // doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    //  doc.Add(limage);
                    //.. behavioural_profile.AddCell(be_column_3);
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    doc.Add(p);
                }
            }
            #endregion
            //..  behavioural_profile.DefaultHorizontalAlignment = iTextSharp .text.Element.ALIGN_LEFT;
            //..  doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 9. D and I in positive region and I > D
        #region Positive-DI_I>D
        //if ((DiffB > -1 && DiffR > -1) && (DiffBl < -1 && DiffG < -1) && (DiffB < DiffR))
        if ((DiffB > -1 && DiffR > -1) && (DiffBl <= -1 && DiffG <= -1))
        {
            //doc.Add(new Paragraph("\t Demanding, assertive, optimistic, enthusiastic, magnetic, and ambitious are the characteristics that define your personality. You maintain focus on your goals and have determination to achieve it. You accept risks and welcome challenges without fear. You are forceful and direct, but at the same time you are emotional too.  \n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are assertive and confident and at the same time you have strong social skills. You have charisma and magnetism but you tend to show domineering and forceful behaviour particularly under stressed situation. These qualities help you deal with any situations directly and fearlessly. If the situation demands you are capable to adopt a confrontational position. Though you display authority and domination, you feel the need to be liked by the people around you on sincere terms, in addition of being respected by them. Independence and self confidence being your key characteristics, you have a powerful and persuasive approach to every circumstance.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are driven and forceful. You love challenges. Being self reliant, you are capable of taking personal responsibility for your actions. You are ambitious and love to take risk. You are self starter and problem solver.  You have the ability to think outside the box. You dislike routine and sometimes attempt too much at once. At work, your assertiveness and persuasion helps you to motivate others to accept your idea and concept. On a weaker side, you are not a good listener and tend to listen only when it is convenient or appropriate. You are inattentive to details.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            ////doc.Add(new Paragraph("\t Challenge is a keyword for you where you thrive in situations that others would find impossibly stressful and difficult to deal with. Your need for achievement means that you are willing to undertake almost any task to achieve success or recognition, and this driving, motivated approach lends them an urgency and energy rarely seen in others.You are the classic ideal for direct sales work. This type of occupation characterizes you for having the ability to think and react quickly, adapt to challenging situations and use powers of both assertiveness and persuasion to motivate others to accept your own proposals."));
            //doc.Add(new Paragraph("\t Challenge is the driving force for you. New challenges, changing environment along with freedom from mundane tasks and routine, motivates you. In challenging environment you tend to enjoy a lot where others would get stressed out in the similar situation. Success and achievement drives you all the time and the will to succeed gives you an unmatched energy and enthusiasm.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Self-motivation, Independence, Enthusiasm and Self-confidence."));

            #region getting_Positive-DI_I>D_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_2 FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-DI-profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //..   Cell be_column_3 = new Cell(p);
                    //  be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    //  doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    //doc.Add(limage);
                    //..  behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);
                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //..   Cell be_column_3 = new Cell(p);
                    // be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    // doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    // doc.Add(limage);
                    //..   behavioural_profile.AddCell(be_column_3);

                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    doc.Add(p);
                }
            }
            #endregion
            //..   behavioural_profile.DefaultHorizontalAlignment = iTextSharp .text.Element.ALIGN_LEFT;
            //..  doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 10. D and S in positive region and D > S
        #region Positive-DS_D>S
        //if ((DiffB < 10 && DiffB > -1) && (DiffR < -1 && DiffG < -1) && (DiffBl < 10 && DiffBl > -1) && (DiffB > DiffBl))
        if ((DiffB <= 10 && DiffB > -1) && (DiffR <= -1 && DiffG <= -1) && (DiffBl <= 10 && DiffBl > -1))
        {
            //doc.Add(new Paragraph("\t You exhibit a paradoxical behaviour. By nature you are assertive and persuasive, yet at the same time you are relaxed and show stability in your approach. \n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You assume two different approaches while relating to people. If you are confident about the person or people around you or if you have developed a trust factor already, then you have a trusting and friendlier approach. Or else you remain skeptical and you hardly open up or reveal information or share your ideas with others.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t With regards to achieving your goals, you display a focused and practical approach and follow it till the end. Your patience, consistency and determination help you to tie all the loose ends and meet your targets within the stipulated timelines. You like to plan your work before commencing. Under steady situation you generally show caution and consideration but under pressure, you exhibit a demanding approach that helps you attain your goal effectively.\n "));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\tYou need control of own activities and at the same time you require long term affiliation and stable work environment. Consequently, you try to preserve the status quo and avoid sudden change using your authority.\n "));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are persistence, efficiency, independence and thoughtfulness. "));

            #region getting_Positive-DS_D>S_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_2 FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-DS-profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //..   Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    // doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    //doc.Add(limage);
                    //..  behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);
                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //..  Cell be_column_3 = new Cell(p);
                    //   be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    //doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    //doc.Add(limage);
                    //..  behavioural_profile.AddCell(be_column_3);
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    doc.Add(p);
                }
            }
            #endregion
            //..     behavioural_profile.DefaultHorizontalAlignment = iTextSharp .text.Element.ALIGN_LEFT;
            //..     doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 11. D and C in positive region and D < C
        #region Positive-DC_D>C
        //if ((DiffB < 10 && DiffB > -1) && (DiffR < -1) && (DiffBl < -1) && (DiffG < 10 && DiffG > -1) && (DiffB < DiffG))
        if ((DiffB <= 10 && DiffB > -1) && (DiffR <= -1) && (DiffBl <= -1) && (DiffG <= 10 && DiffG > -1))
        {
            //doc.Add(new Paragraph("\t You are basically a very reserved kind of person and show a controlled and organized approach in life.  You have a no nonsense approach. You believe in accuracy and always strive for perfection. You are direct in your manner and often voice your opinion strongly. You are basically an efficient person but you have very little interest in personal matters. You are analytical in nature and prefer not to take unwarranted risk.\n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t As you are basically reserved type of a person, you generally don’t communicate on a personal level. Further your communication remains to the point, crisp and normally remains on a practical level. Emotions generally don’t play a major role in your life. You are not that trusting kind who will share everything with people around you, rather your skepticism makes you keep the facts with yourself and you tend to share it only when utmost necessary. Further your need to be active all the time makes you impatient with those you can’t keep up with your pace.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Achievement and efficiency combined with perfection and precision drives you. Your assertive, self reliant and reserved nature helps you to attain your goals relentlessly and also makes you capable to take responsibility for your action. Though you like to see immediate results but you also believe in proper planning and execution. Further, you generally can manage stress and conflicts in life effectively.  The assertiveness and accuracy in everything sometimes goes to such an extreme that you expect the same from others and you also pinpoint their mistakes  if they have gone wrong somewhere, though for them it might be an insignificant or petty issue.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Achievement and success in your work inspires you. While driving towards success, you also complete the task with accuracy and precision and that gives you immense satisfaction. However, it is difficult to predict if anything motivates you at all, as you tend to remain bit aloof and distant and keep your emotions under control.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Efficiency, Self-motivation , Accuracy and Sensitivity "));

            #region getting_Positive-DC_D>C_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_2 FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-DC-profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);

                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //.. Cell be_column_3 = new Cell(p);
                    //  be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    // doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    // doc.Add(limage);
                    //..    behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);
                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));

                    //..   Cell be_column_3 = new Cell(p);
                    //..    be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    //  doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    // doc.Add(limage);
                    //..      behavioural_profile.AddCell(be_column_3);
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    doc.Add(p);
                }
            }
            #endregion
            //..  behavioural_profile.DefaultHorizontalAlignment = iTextSharp .text.Element.ALIGN_LEFT;
            //..  doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 12. I and S in positive region and I > S
        #region Positive-IS_I>S
        //if ((DiffB < -1 && DiffG < -1) && (DiffR < 10 && DiffR > -1) && (DiffBl < 10 && DiffBl > -1) && (DiffR > DiffBl))
        if ((DiffB <= -1 && DiffG <= -1) && (DiffR <= 10 && DiffR > -1) && (DiffBl <= 10 && DiffBl > -1))
        {
            //doc.Add(new Paragraph("\tYou are friendly, emotional and empathetic by nature. You are basically inclined to relationships, personal issues and networking. You generally don’t give importance to life’s hard realities. You like to get involved in people’s problems and tend to give a helping hand whenever possible. People like you become great counselors. \n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You can easily connect to people and mingle with them. You don’t get perturbed by strangers at all. Your confidence and socializing nature makes you receptive to people’s ideas and feelings. In any demanding situations, your persuasive approach helps you to adopt yourself well, but at the same time you also show patience while dealing with others. You generally develop a warm and friendly relation with those around you. You are genuinely interested in people.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have an open and outgoing personality. You have a strong ability to communicate and you possess a deep understanding of people and situation. This helps you to adapt to new situations effectively. You’re being influential and charming helps you to function effectively in any situations. But being less assertive, it sometimes gets difficult for you to deal in confrontational situations. You are persistent by nature and this helps you to finish the work that you have embarked on.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Positive and friendly atmosphere motivate you. You generally avoid conflicting situations.  You always like to be appreciated and respected by the people around you. You always have the need to be accepted by others and you desire that they are sympathetic and attentive towards you.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Friendliness, Self-confidence, Patience and Persistence."));

            #region getting_Positive-IS_I>S_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_2 FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-IS-profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);

                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //.. Cell be_column_3 = new Cell(p);
                    // be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    // doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    // doc.Add(limage);
                    //..  behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);
                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //..                    Cell be_column_3 = new Cell(p);
                    // be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    //doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    //doc.Add(limage);
                    //..                behavioural_profile.AddCell(be_column_3);
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    doc.Add(p);
                }
            }
            #endregion
            //..  behavioural_profile.DefaultHorizontalAlignment = iTextSharp .text.Element.ALIGN_LEFT;
            //..  doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 13. I and C in positive region and I > C
        #region Positive-IC_I>C
        //if ((DiffB <= -1 && DiffBl <= -1) && (DiffR < 10 && DiffR > -1) && (DiffG < 10 && DiffG > -1) && (DiffR > DiffG))
        if ((DiffB <= -1 && DiffBl <= -1) && (DiffR <= 10 && DiffR > -1) && (DiffG <= 10 && DiffG > -1))
        {

            //doc.Add(new Paragraph("\t You are basically open and friendly type of person with an organized and structured approach to situation and people around you. In relaxed and comfortable environment, you show enthusiasm and excitement whereas in more structured and formal situations, you are meticulous and display a process oriented approach. \n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t The way you relate to people actually depends on the situation that you are in. In casual environment you display confidence and openness and have an outgoing behaviour; but in formal situation where you are not so comfortable, you tend to be compliant along with your diminished confidence level. In such situations, you are generally not expressive about your feelings and emotions and rarely make direct criticism or enter into arguments; rather you are concerned about what others have opinion about you.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Depending on the situation, you can be friendly and charming or direct and forthright, or aloof and guarded. Basically you are a confident and enthusiastic person. You understand the nuances in any sort of communication which are generally overlooked or remain undetected by others. But sometimes you do get over-sensitive to other’s opinion, when actually nothing exists to react that way. Nevertheless, you tend to be a good team-worker. Your organized structured approach acts as strength in any group situations. Rather than focusing on your specific needs, you tend to focus on group’s needs.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Being friendly and charming, you have the need for others approval and interest, but being compliant, you generally don’t show this openly, rather you are more restrained.  A sense of sureness about your position especially in social terms motivates you. Your motivation stems from the achievement of personal ambition, social acceptance and social recognition, and certainty of your position.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Friendliness, Enthusiasm, Co-cooperativeness and Sensitivity."));

            #region getting_Positive-IC_I>C_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_2 FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-IC-profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //.. Cell be_column_3 = new Cell(p);
                    //  be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    //doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    // doc.Add(limage);
                    //..  behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //..Cell be_column_3 = new Cell(p);
                    //  be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    //doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    //  doc.Add(limage);
                    //..behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);
                }
            }
            #endregion
            //..   behavioural_profile.DefaultHorizontalAlignment = iTextSharp .text.Element.ALIGN_LEFT;
            //..  doc.Add(behavioural_profile);
            return;

        }
        #endregion
        // 14. S and C High
        #region High-SC
        //if ((DiffB <= -1 && DiffR <= -1) && (DiffG < 10 && DiffG > -1) && (DiffBl < 10 && DiffBl > -1))
        if ((DiffB <= -1 && DiffR <= -1) && (DiffG <= 10 && DiffG > -1) && (DiffBl <= 10 && DiffBl > -1))
        {
            //doc.Add(new Paragraph("\t You are intellectually very sound and tend to focus on perfection and accuracy. As a person you are passive by nature, meticulous, reserved and a systematic thinker. A perfectionist by nature, you set high standards of quality and accuracy and strive to achieve them. A process oriented individual, who prefers to design processes and set the rules and follow them too. You speak only if necessary and only when it forms a part of your core interest of expertise.  You are amazingly ambitious and have high goals and you tend to use existing structures and rules to accomplish your aims. You are also extremely logical, structured and systematic in your approach towards work.\n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t You prefer to relate to individuals on a one on one basis rather than connecting with them in a group. In unfamiliar settings, you normally find difficulty to connect to people. Though you value relationships, you generally don’t display it openly. You depend on assertive and outgoing people around you to initiate the interpersonal issues rather than you taking the lead. You have sound knowledge and intellect and many a times finds yourself in a situation where your intellect is higher than the group.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Your strengths can be summarized as ‘diligent’, perfectionist and self reliant. You are persistent in approach, having the patience and precision, you work steadily at a task until it is achieved. You don’t like to be rushed in any activity or situation, and sudden unplanned change demotivates you. You are very self-reliant, with your structured way of thinking you often show your strength when it comes to organizing facts or working with precise detail or sophisticated systems. Your potential generally lies in technical work.  At times due to the need to be precise and detail oriented you would be seen as slow paced, however your thoughtful nature and diligence improves the quality of decisions you make.  You have a disciplined, purposeful approach, where actions are carefully planned with caution and care.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Self reliant and perfectionism is the root source of motivation in you. You are detailed oriented, and plan with extreme details; however you believe that the goal is met if the process is adhered to. You have the need for time to plan and execute your work carefully and thereby delivering high quality job gives you immense satisfaction.  You prefer to get enough time to adapt to changing situations as you normally have affinity towards stable and familiar environment. You also have a subtle need to be accepted and acknowledged by people.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Persistence, Thoughtfulness and Accuracy."));

            #region getting_High-SC_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_2 FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-SC-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //.. Cell be_column_3 = new Cell(p);
                    // be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    //doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    // doc.Add(limage);
                    //.. behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //.. Cell be_column_3 = new Cell(p);
                    //  be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    //doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    //doc.Add(limage);
                    //.. behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);
                }
            }
            #endregion
            behavioural_profile.DefaultHorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        //HD,HS,HC high DSC
        #region High-DSC
        if ((DiffB <= 10 & DiffB > -1) && (DiffBl <= 10 && DiffBl > -1) && (DiffG <= 10 && DiffG > -1) && (DiffR <= -1))
        {
            //doc.Add(new Paragraph("\t As a person you are highly analytical and relatively uncommunicative. You are basically practical in nature and rational in your thought process. Emotions don’t bother you much. You are generally secretive by nature and cautious in communication, rarely revealing much about yourselves than a bare minimum. In challenging and stressful situations, you display an assertive and forceful behaviour, whereas in easy environment you are much relaxed. \n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Your inclination to relate to people in general is usually found low. You have a passive approach towards reacting to others’ comments or ideas. You prefer not to provide any direct inputs to others unless you are asked for. When you are in certain difficult or demanding situations your willingness to communicate do increase significantly, but to communicate on a personal level is normally low. Being yourself precise and accurate, you tend to demand similar kind of behaviour from people around you.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t You never act on impulse and take unnecessary risks. You put extreme emphasis on results and productivity, leading to a disciplined purposeful approach, where actions are carefully planned with caution and care. You are comfortable with complex systems and processes and work well with facts. You emphasize on efficiency and effectiveness, and that is reflected in both your professional and personal front. If you start something, you like to carry it through the end.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t You like to solve your problems in your own way and achievement of results motivates you. You need opportunity to prove yourself. You prefer to get enough time to adapt to changing situations as you normally have affinity towards stable and familiar environment.  You have the need for time to plan and execute your work carefully and thereby delivering high quality job gives you immense satisfaction. You need full understandings of facts and specific knowledge of the job and tend to seek freedom from risk.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are accuracy, efficiency and thoughtfulness."));

            #region getting_High-DSC_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_2 FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-DSC-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //..Cell be_column_3 = new Cell(p);
                    // be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    // doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    // doc.Add(limage);
                    //.. behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    // Cell be_column_3 = new Cell(p);
                    // be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    // doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    //doc.Add(limage);
                    // behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);
                }
            }
            #endregion
            //..  behavioural_profile.DefaultHorizontalAlignment = iTextSharp .text.Element.ALIGN_LEFT;
            //..  doc.Add(behavioural_profile);
            return;
        }
        #endregion
        //HI,HD,HC high DCI
        #region High-DCI
        if ((DiffB <= 10 & DiffB > -1) && (DiffG <= 10 && DiffG > -1) && (DiffR <= 10 && DiffR > -1) && (DiffBl <= -1))
        {
            //doc.Add(new Paragraph("\t You are basically fast paced and have high sense of urgency. You are impatient with routines and love variety. You are self-confident and have challenging and competitive approach and at the same time you are socially poised and very outgoing by nature. Though you are extremely assertive and have high need to achieve success, you work in consensus and exhibit caution in dealing with situations. You normally do not show unpredictability in your approach.\n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t You display effective social abilities, particularly evident in any informal open situations, where you exhibit a friendly, open and enthusiastic approach. In formal environment, however, you have self-controlled, driving attitude and display a less sociable style.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Depending on situations, you can be charming and enthusiastic, or direct and forthright. You are socially aware, and able to detect nuances in communication. In demanding situation, you display usual outgoing and expressive behaviour, but is bolstered by a more assertive approach.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Your motivation stems from the achievement of personal ambition, recognition for own ideas, social acceptance and social recognition, and certainty of your position.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are enthusiasm, self-motivation and sensitivity."));

            #region getting_High-DCI_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_2 FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-DCI-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //.. Cell be_column_3 = new Cell(p);
                    // be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    // doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    // doc.Add(limage);
                    //.. behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //..Cell be_column_3 = new Cell(p);
                    // be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    //doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    // doc.Add(limage);
                    //.. behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);
                }
            }
            #endregion
            //..  behavioural_profile.DefaultHorizontalAlignment = iTextSharp .text.Element.ALIGN_LEFT;
            //..  doc.Add(behavioural_profile);
            return;
        }
        #endregion
        //HI,HD,HS high DSI
        #region High-DSI
        if ((DiffB <= 10 & DiffB > -1) && (DiffBl <= 10 && DiffBl > -1) && (DiffR <= 10 && DiffR > -1) && (DiffG <= -1))
        {
            //doc.Add(new Paragraph("\tAs a person you are dynamic and direct and have an independent behavioral style. You have a clear idea about your goals in life and you equally have the strength to achieve it. You have a more single-minded and stubborn approach to situations. Your remarkable tenacity and determination help you to attain your goal in life. Though you mix easily with strangers, and are unafraid to initiate social contact, you have a powerful, persuasive, confident behavioral style. This helps you to deal directly and fearlessly with most situations. While you will typically prefer to keep matters on an open and friendly level, you are quite capable of adopting a more determined and confrontational stance where a situation calls for.\n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t You interact easily and skillfully with people around you, and rarely experience self-doubt, and you feel at ease in almost any social situations. You are unafraid to initiate social contact however you have a strong sense of independence and tend to maintain your own sense of identity, and tend to protect and defend your own viewpoint.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t : You exhibit dependency and at the same time have strong social abilities. This helps you to take initiative in every activity with great confidence and assertiveness. Your self- reliance style with a strong sense of personal responsibility makes you an effective facilitator. Being patient and persistent along with assertiveness helps you to achieve the results. Further, you also consider and weigh the options before arriving at a definite conclusion.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t You like to have control over your own state of affairs, and being persistent and assertive, like to do things in your own way. While success and achievements are important to you, you also value positive and friendly relationships with other people. Thereby, under certain situation you might even delay achieving your goals, if there is some sort of conflict existing with others' needs.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are independence, self-confidence and persistence."));

            #region getting_High-DSI_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_2 FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-DSI-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //..Cell be_column_3 = new Cell(p);
                    // be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    //doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    //doc.Add(limage);
                    //..behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //..Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    // doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    //doc.Add(limage);
                    //.. behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);
                }
            }
            #endregion
            //.. behavioural_profile.DefaultHorizontalAlignment = iTextSharp .text.Element.ALIGN_LEFT;
            //.. doc.Add(behavioural_profile);
            return;
        }
        #endregion
        //HI,HS,HC high ISC
        #region High-ISC
        if ((DiffG <= 10 & DiffG > -1) && (DiffBl <= 10 && DiffBl > -1) && (DiffR <= 10 && DiffR > -1) && (DiffB <= -1))
        {
            //doc.Add(new Paragraph("\tYou are basically warm, friendly and outgoing by nature. You are patient and generally a good listener. You work cooperatively with others and you love team oriented environment. You tend to avoid individual risk and tend to accept others’ ideas. You are normally not very assertive and dominant type and thereby you prefer to achieve your ends through communication, using your persuasive abilities and rationality. You usually distribute responsibility and tend to concentrate particularly on the details of a task. You are not very ambitious kind and are happy in building strong social relationships.\n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t You work harmoniously with the group. Your outgoing friendly style along with your patience and accommodative nature makes you a good listener. Your strong analytical rationale helps you to present your ideas and arguments in convincing and logical manner.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Your warm friendly, extroverted easy going nature helps you to be a good team player.  You usually entertain ideas from your team. You are receptive to other people and sympathetic to their point of view. With your patience and steadiness, you have high tolerance to repetitive work.  Your confidence helps you to maintain a proactive approach to the situation, though it generally lacks effectiveness due to your low assertiveness.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Warm, friendly, extroverted environment makes you happy and content. You are not ambitious kind but supportive ‘family-like’ work team motivates you. You need time to adapt to new situations or changes and prefer a stable work environment. A sense of sureness about your position especially in social terms motivates you.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are cooperativeness, friendliness and patience."));

            #region getting_High-ISC_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_2 FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-ISC-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //..  Cell be_column_3 = new Cell(p);
                    // be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    //   doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    //  doc.Add(limage);
                    //..  behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //..Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    //  doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    // doc.Add(limage);
                    //..behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);
                }
            }
            #endregion
            //.. behavioural_profile.DefaultHorizontalAlignment = iTextSharp .text.Element.ALIGN_LEFT;
            //.. doc.Add(behavioural_profile);
            return;
        }
        #endregion

        //From here discription not aviable in DB.

        // Basic Profiles
        // flick - up (from here to Very-High I all discription is similer.) 
        #region Flick-up
        if (T1 == true || T2 == true || T3 == true)
        {

            //doc.Add(new Paragraph("\t Communication is the key factor in you. You can communicate easily and fluently with others. You are often referred to as 'Communicator' profiles – you are confident, outgoing and gregarious individual who value contact with other people and the development of positive relations.\n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are best in Connecting to People. You are open to others and confident in your own social abilities, and interact positively in almost any situation. Your strong and evident confidence, coupled with your genuine interest in the ideas and especially feelings of other people, are often found charming by those around you. Your actions will often be designed to improve and extend relations, even to the extent of alienating people who are not part of your circle. \n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You distinct abilities lie in the area of communication and relationship building. You are not only a strong communicator, possessing the assertiveness to drive home a point of view, but also have the intuitive qualities to understand others' perspectives and adapt others to meet new situations. \n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have a natural talent to connect to people. You have no inhibitions in getting connected to different type of people. This also stems from the fact that you have an inner confidence to build a long term relation. Specifically, you need to feel accepted by those around you, and react badly if you perceive yourselves to be rejected or disliked. Praise and approval make a strong impression on you, and you will sometimes go to great lengths to achieve this kind of reaction from other people.Especially important to you are the opinions and reactions of your particularly close circle. You believe in creating a positive environment that enhances the well being of people around you.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub--traits of this type are Friendliness , Enthusiasm and Self--confidence"));
            //return;

            #region getting_Flick-Up_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_2 FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Flick-Up-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //..Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    //doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    // doc.Add(limage);
                    //..behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //..Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    // doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    //doc.Add(limage);
                    //..behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);
                }
            }
            #endregion
            //..behavioural_profile.DefaultHorizontalAlignment = iTextSharp .text.Element.ALIGN_LEFT;
            //..doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // flick - down
        #region flick-down
        if (TD1 == true || TD2 == true || TD3 == true)
        {
            //doc.Add(new Paragraph("\t Communication is the key factor in you. You can communicate easily and fluently with others. You are often referred to as 'Communicator' profiles – you are confident, outgoing and gregarious individual who value contact with other people and the development of positive relations.\n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are best in Connecting to People. You are open to others and confident in your own social abilities, and interact positively in almost any situation. Your strong and evident confidence, coupled with your genuine interest in the ideas and especially feelings of other people, are often found charming by those around you. Your actions will often be designed to improve and extend relations, even to the extent of alienating people who are not part of your circle.\n "));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You distinct abilities lie in the area of communication and relationship building. You are not only a strong communicator, possessing the assertiveness to drive home a point of view, but also have the intuitive qualities to understand others' perspectives and adapt others to meet new situations. \n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have a natural talent to connect to people. You have no inhibitions in getting connected to different type of people. This also stems from the fact that you have an inner confidence to build a long term relation. Specifically, you need to feel accepted by those around you, and react badly if you perceive yourselves to be rejected or disliked. Praise and approval make a strong impression on you, and you will sometimes go to great lengths to achieve this kind of reaction from other people.Especially important to you are the opinions and reactions of your particularly close circle. You believe in creating a positive environment that enhances the well being of people around you.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub--traits of this type are Friendliness , Enthusiasm and Self--confidence"));

            #region getting_Flick-Down_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_2 FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Flick-Down-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //..Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    //doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    // doc.Add(limage);
                    //.. behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //..Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    // doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    // doc.Add(limage);
                    //..behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);
                }
            }
            #endregion
            //..  behavioural_profile.DefaultHorizontalAlignment = iTextSharp .text.Element.ALIGN_LEFT;
            //.. doc.Add(behavioural_profile);

            return;
        }
        #endregion
        // sweep - down
        #region sweep-down
        if ((DiffB < 10 && DiffB >= -1) && (DiffR < 10 && DiffR >= -1) && (DiffBl > -11 && DiffBl <= -1) && (DiffG > -11 && DiffG <= -1))
        {
            if ((DiffB < DiffR) && (DiffBl - DiffG > 4))
            {
                //doc.Add(new Paragraph("\t Communication is the key factor in you. You can communicate easily and fluently with others. You are often referred to as 'Communicator' profiles – you are confident, outgoing and gregarious individual who value contact with other people and the development of positive relations.\n"));
                //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You are best in Connecting to People. You are open to others and confident in your own social abilities, and interact positively in almost any situation. Your strong and evident confidence, coupled with your genuine interest in the ideas and especially feelings of other people, are often found charming by those around you. Your actions will often be designed to improve and extend relations, even to the extent of alienating people who are not part of your circle. \n"));
                //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You distinct abilities lie in the area of communication and relationship building. You are not only a strong communicator, possessing the assertiveness to drive home a point of view, but also have the intuitive qualities to understand others' perspectives and adapt others to meet new situations. \n"));
                //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You have a natural talent to connect to people. You have no inhibitions in getting connected to different type of people. This also stems from the fact that you have an inner confidence to build a long term relation. Specifically, you need to feel accepted by those around you, and react badly if you perceive yourselves to be rejected or disliked. Praise and approval make a strong impression on you, and you will sometimes go to great lengths to achieve this kind of reaction from other people.Especially important to you are the opinions and reactions of your particularly close circle. You believe in creating a positive environment that enhances the well being of people around you.\n"));
                //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t The sub--traits of this type are Friendliness , Enthusiasm and Self--confidence"));

                #region getting_Sweep-Down_from_DB
                strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_2 FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Sweep-Down-Profile-analysis'";
                DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
                //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
                dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
                int length = dis.Length;
                for (int i = 0; i < length; i++)
                {
                    if (i % 2 == 0)
                    {
                        //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                        //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                        //p.SetAlignment("justify");
                        //doc.Add(p);
                        Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                        p.Add(limage);
                        //.. Cell be_column_3 = new Cell(p);
                        //be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                        //be_column_3.BorderWidthLeft = 1;
                        //be_column_3.BorderWidthRight = 1;
                        //be_column_3.BorderWidthTop = 1;
                        //be_column_3.BorderWidthBottom = 1;
                        // doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                        //  doc.Add(limage);
                        //.. behavioural_profile.AddCell(be_column_3);
                        doc.Add(p);
                    }
                    else
                    {
                        //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                        Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                        p.Add(limage);
                        //.. Cell be_column_3 = new Cell(p);
                        //be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                        //be_column_3.BorderWidthLeft = 1;
                        //be_column_3.BorderWidthRight = 1;
                        //be_column_3.BorderWidthTop = 1;
                        //be_column_3.BorderWidthBottom = 1;
                        // doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                        // doc.Add(limage);
                        //..     behavioural_profile.AddCell(be_column_3);
                        doc.Add(p);
                    }
                }
                #endregion
                //..  behavioural_profile.DefaultHorizontalAlignment = iTextSharp .text.Element.ALIGN_LEFT;
                //.. doc.Add(behavioural_profile);


                return;
            }
        }
        #endregion
        // 8-5 Pattern
        #region 8-5_Pattern
        if ((DiffB >= -4 && DiffB <= 2) && (DiffR >= -4 && DiffR <= 2) && (DiffBl >= -4 && DiffBl <= 2) && (DiffG >= -4 && DiffG <= 2))
        {
            if ((DiffB >= -4 || DiffB <= -1) && (DiffR >= -1 && DiffR <= 2) && (DiffBl <= -1 && DiffBl >= -4) && (DiffG >= -1 && DiffG <= 2))
            {
                //doc.Add(new Paragraph("\t Communication is the key factor in you. You can communicate easily and fluently with others. You are often referred to as 'Communicator' profiles – you are confident, outgoing and gregarious individual who value contact with other people and the development of positive relations.\n"));
                //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You are best in Connecting to People. You are open to others and confident in your own social abilities, and interact positively in almost any situation. Your strong and evident confidence, coupled with your genuine interest in the ideas and especially feelings of other people, are often found charming by those around you. Your actions will often be designed to improve and extend relations, even to the extent of alienating people who are not part of your circle.\n "));
                //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You distinct abilities lie in the area of communication and relationship building. You are not only a strong communicator, possessing the assertiveness to drive home a point of view, but also have the intuitive qualities to understand others' perspectives and adapt others to meet new situations. \n"));
                //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You have a natural talent to connect to people. You have no inhibitions in getting connected to different type of people. This also stems from the fact that you have an inner confidence to build a long term relation. Specifically, you need to feel accepted by those around you, and react badly if you perceive yourselves to be rejected or disliked. Praise and approval make a strong impression on you, and you will sometimes go to great lengths to achieve this kind of reaction from other people.Especially important to you are the opinions and reactions of your particularly close circle. You believe in creating a positive environment that enhances the well being of people around you.\n"));
                //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t The sub--traits of this type are Friendliness , Enthusiasm and Self--confidence"));

                #region getting_Sweep-Down_from_DB
                strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_2 FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = '8-5_Pattern-Profile-analysis'";
                DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
                //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
                dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
                int length = dis.Length;
                for (int i = 0; i < length; i++)
                {
                    if (i % 2 == 0)
                    {
                        //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                        //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                        //p.SetAlignment("justify");
                        //doc.Add(p);
                        Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                        p.Add(limage);
                        //..Cell be_column_3 = new Cell(p);
                        //be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                        //be_column_3.BorderWidthLeft = 1;
                        //be_column_3.BorderWidthRight = 1;
                        //be_column_3.BorderWidthTop = 1;
                        //be_column_3.BorderWidthBottom = 1;
                        //doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                        // doc.Add(limage);
                        //..behavioural_profile.AddCell(be_column_3);
                        doc.Add(p);
                    }
                    else
                    {
                        //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                        Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                        p.Add(limage);
                        //..Cell be_column_3 = new Cell(p);
                        //be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                        //be_column_3.BorderWidthLeft = 1;
                        //be_column_3.BorderWidthRight = 1;
                        //be_column_3.BorderWidthTop = 1;
                        //be_column_3.BorderWidthBottom = 1;
                        //doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                        // doc.Add(limage);
                        //.. behavioural_profile.AddCell(be_column_3);
                        doc.Add(p);
                    }
                }
                #endregion
                //..behavioural_profile.DefaultHorizontalAlignment = iTextSharp .text.Element.ALIGN_LEFT;
                //..doc.Add(behavioural_profile);

                return;
            }
        }
        #endregion

        // D=C (from here to Very-High D all discription is similer.) 
        #region D=C
        if (DiffB > -1 && DiffR <= -1 && DiffBl <= -1 && DiffG > -1)
        {
            if (DiffB == DiffR)
            {
                //doc.Add(new Paragraph("\t You are often described as the 'Autocrat', and for good reason. You display a high level of control and assertiveness, and remarkably domineering, and even overbearing at times.You have a very strong need to achieve, and because of this you are often ambitious and competitive, striving aggressively to achieve your goals. You are dynamic and adaptable, and show decisiveness and a capacity for direct leadership.\n "));
                //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You tend to stress on achievement and success significantly, which affects your relations with other people. In extreme cases, you seem to treat other people simply as a means to an end, or a way of achieving your personal goals. Since you are not emotional, you tend not to place great importance on feelings, either your own or others'. The competitive nature in you leads to see challenges and opposition everywhere, and others sometimes find it difficult to break through this naturally suspicious, skeptical shell of yours.\n"));
                //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You have qualities of command and leadership. It should be noted, however, that these abilities are based on your direct, demanding nature, and are more suited to structured, formal situations than those where close ties are required. You are a competent and confident decision-maker, able to reach a conclusion quickly from minimal information and act accordingly. You are well suited to situations that others would find unbearably stressful, as your desire for challenge and your enjoyment of success against the odds makes you unusually proficient in dealing with such situations. \n"));
                //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You like to feel that you are in control, and seek opportunities to reinforce and emphasize your personal power. You measure your progress in life by your achievements and successes, and feel the need to maintain a sense of personal momentum. Being impatient and forthright, you intensely dislike situations that you are unable to directly resolve for yourselves - dependence on other people is anathema to you. You find these kinds of situation extremely frustrating, and can be driven to wild, impulsive actions in an attempt to relieve the pressure.\n"));
                //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t The sub-traits of this type are Efficiency, Self-motivation and Independence."));

                #region getting_D=C_from_DB
                strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_2 FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'D=C-Profile-analysis'";
                DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
                //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
                dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
                int length = dis.Length;
                for (int i = 0; i < length; i++)
                {
                    if (i % 2 == 0)
                    {
                        //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                        //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                        //p.SetAlignment("justify");
                        //doc.Add(p);
                        Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                        p.Add(limage);
                        //.. Cell be_column_3 = new Cell(p);
                        //be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                        //be_column_3.BorderWidthLeft = 1;
                        //be_column_3.BorderWidthRight = 1;
                        //be_column_3.BorderWidthTop = 1;
                        //be_column_3.BorderWidthBottom = 1;
                        //  doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                        //doc.Add(limage);
                        //..  behavioural_profile.AddCell(be_column_3);
                        doc.Add(p);
                    }
                    else
                    {
                        //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                        Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                        p.Add(limage);
                        //.. Cell be_column_3 = new Cell(p);
                        //be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                        //be_column_3.BorderWidthLeft = 1;
                        //be_column_3.BorderWidthRight = 1;
                        //be_column_3.BorderWidthTop = 1;
                        //be_column_3.BorderWidthBottom = 1;
                        // doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                        //doc.Add(limage);
                        //..behavioural_profile.AddCell(be_column_3);
                        doc.Add(p);
                    }
                }
                #endregion
                //..  behavioural_profile.DefaultHorizontalAlignment = iTextSharp .text.Element.ALIGN_LEFT;
                //.. doc.Add(behavioural_profile);

                return;
            }
        }
        #endregion
        // Overshift
        #region Overshift
        if (DiffB > -1 && DiffR > -1 && DiffBl > -1 && DiffG > -1)
        {
            //doc.Add(new Paragraph("\t You are often described as the 'Autocrat', and for good reason. You display a high level of control and assertiveness, and remarkably domineering, and even overbearing at times.You have a very strong need to achieve, and because of this you are often ambitious and competitive, striving aggressively to achieve your goals. You are dynamic and adaptable, and show decisiveness and a capacity for direct leadership.\n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You tend to stress on achievement and success significantly, which affects your relations with other people. In extreme cases, you seem to treat other people simply as a means to an end, or a way of achieving your personal goals. Since you are not emotional, you tend not to place great importance on feelings, either your own or others'. The competitive nature in you leads to see challenges and opposition everywhere, and others sometimes find it difficult to break through this naturally suspicious, skeptical shell of yours.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have qualities of command and leadership. It should be noted, however, that these abilities are based on your direct, demanding nature, and are more suited to structured, formal situations than those where close ties are required. You are a competent and confident decision-maker, able to reach a conclusion quickly from minimal information and act accordingly. You are well suited to situations that others would find unbearably stressful, as your desire for challenge and your enjoyment of success against the odds makes you unusually proficient in dealing with such situations.\n "));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You like to feel that you are in control, and seek opportunities to reinforce and emphasize your personal power. You measure your progress in life by your achievements and successes, and feel the need to maintain a sense of personal momentum. Being impatient and forthright, you intensely dislike situations that you are unable to directly resolve for yourselves - dependence on other people is anathema to you. You find these kinds of situation extremely frustrating, and can be driven to wild, impulsive actions in an attempt to relieve the pressure.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits of this type are Efficiency, Self-motivation and Independence."));

            #region getting_Overshift_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_2 FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Overshift-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //..Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    // doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    //doc.Add(limage);
                    //..behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //doc.Add(limage);

                    // Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    //behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);
                }
            }
            #endregion
            //.. behavioural_profile.DefaultHorizontalAlignment = iTextSharp .text.Element.ALIGN_LEFT;
            //.. doc.Add(behavioural_profile);

            return;
        }
        #endregion
        // Undershift
        #region Undershift
        if (DiffB <= -1 && DiffR <= -1 && DiffBl <= -1 && DiffG <= -1)
        {
            //doc.Add(new Paragraph("\t You are often described as the 'Autocrat', and for good reason. You display a high level of control and assertiveness, and remarkably domineering, and even overbearing at times.You have a very strong need to achieve, and because of this you are often ambitious and competitive, striving aggressively to achieve your goals. You are dynamic and adaptable, and show decisiveness and a capacity for direct leadership.\n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You tend to stress on achievement and success significantly, which affects your relations with other people. In extreme cases, you seem to treat other people simply as a means to an end, or a way of achieving your personal goals. Since you are not emotional, you tend not to place great importance on feelings, either your own or others'. The competitive nature in you leads to see challenges and opposition everywhere, and others sometimes find it difficult to break through this naturally suspicious, skeptical shell of yours.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have qualities of command and leadership. It should be noted, however, that these abilities are based on your direct, demanding nature, and are more suited to structured, formal situations than those where close ties are required. You are a competent and confident decision-maker, able to reach a conclusion quickly from minimal information and act accordingly. You are well suited to situations that others would find unbearably stressful, as your desire for challenge and your enjoyment of success against the odds makes you unusually proficient in dealing with such situations.\n "));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You like to feel that you are in control, and seek opportunities to reinforce and emphasize your personal power. You measure your progress in life by your achievements and successes, and feel the need to maintain a sense of personal momentum. Being impatient and forthright, you intensely dislike situations that you are unable to directly resolve for yourselves - dependence on other people is anathema to you. You find these kinds of situation extremely frustrating, and can be driven to wild, impulsive actions in an attempt to relieve the pressure.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits of this type are Efficiency, Self-motivation and Independence."));

            #region getting_Undershift_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_2 FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Undershift-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //.. Cell be_column_3 = new Cell(p);

                    //be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    // doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    //doc.Add(limage);
                    //..behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //..Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    //  doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    // doc.Add(limage);

                    //..behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);
                }
            }
            #endregion
            //.. behavioural_profile.DefaultHorizontalAlignment = iTextSharp .text.Element.ALIGN_LEFT;
            //.. doc.Add(behavioural_profile);


            return;
        }
        #endregion
        // in grey zone
        #region Very-High D
        if (DiffB > 10)
        {
            //doc.Add(new Paragraph("\t You are often described as the 'Autocrat', and for good reason. You display a high level of control and assertiveness, and remarkably domineering, and even overbearing at times.You have a very strong need to achieve, and because of this you are often ambitious and competitive, striving aggressively to achieve your goals. You are dynamic and adaptable, and show decisiveness and a capacity for direct leadership.\n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You tend to stress on achievement and success significantly, which affects your relations with other people. In extreme cases, you seem to treat other people simply as a means to an end, or a way of achieving your personal goals. Since you are not emotional, you tend not to place great importance on feelings, either your own or others'. The competitive nature in you leads to see challenges and opposition everywhere, and others sometimes find it difficult to break through this naturally suspicious, skeptical shell of yours.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have qualities of command and leadership. It should be noted, however, that these abilities are based on your direct, demanding nature, and are more suited to structured, formal situations than those where close ties are required. You are a competent and confident decision-maker, able to reach a conclusion quickly from minimal information and act accordingly. You are well suited to situations that others would find unbearably stressful, as your desire for challenge and your enjoyment of success against the odds makes you unusually proficient in dealing with such situations.\n "));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You like to feel that you are in control, and seek opportunities to reinforce and emphasize your personal power. You measure your progress in life by your achievements and successes, and feel the need to maintain a sense of personal momentum. Being impatient and forthright, you intensely dislike situations that you are unable to directly resolve for yourselves - dependence on other people is anathema to you. You find these kinds of situation extremely frustrating, and can be driven to wild, impulsive actions in an attempt to relieve the pressure.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits of this type are Efficiency, Self-motivation and Independence."));

            #region getting_Very-High_D_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_2 FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Very-High_D-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //.. Cell be_column_3 = new Cell(p);
                    // be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    //doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    // doc.Add(limage);
                    //..behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //.. Cell be_column_3 = new Cell(p);
                    // be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    //doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    //doc.Add(limage);
                    //..  behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);
                }
            }
            #endregion

            //..  behavioural_profile.DefaultHorizontalAlignment = iTextSharp .text.Element.ALIGN_LEFT;
            //.. doc.Add(behavioural_profile);

            return;
        }
        #endregion

        //(discription is quite similer to Basic Profile)
        #region Very-High I
        if (DiffR > 10)
        {
            //doc.Add(new Paragraph("\t Communication is the key factor in you. You can communicate easily and fluently with others. You are often referred to as 'Communicator' profiles – you are confident, outgoing and gregarious individual who value contact with other people and the development of positive relations.\n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are best in Connecting to People. You are open to others and confident in your own social abilities, and interact positively in almost any situation. Your strong and evident confidence, coupled with your genuine interest in the ideas and especially feelings of other people, are often found charming by those around you. Your actions will often be designed to improve and extend relations, even to the extent of alienating people who are not part of your circle.\n "));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You distinct abilities lie in the area of communication and relationship building. You are not only a strong communicator, possessing the assertiveness to drive home a point of view, but also have the intuitive qualities to understand others' perspectives and adapt others to meet new situations.\n "));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have a natural talent to connect to people. You have no inhibitions in getting connected to different type of people. This also stems from the fact that you have an inner confidence to build a long term relation. Specifically, you need to feel accepted by those around you, and react badly if you perceive yourselves to be rejected or disliked. Praise and approval make a strong impression on you, and you will sometimes go to great lengths to achieve this kind of reaction from other people.Especially important to you are the opinions and reactions of your particularly close circle. You believe in creating a positive environment that enhances the well being of people around you.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub--traits of this type are Friendliness , Enthusiasm and Self--confidence"));

            #region getting_Very-High_I_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_2 FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Very-High_I-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //.. Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    // doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    //doc.Add(limage);
                    //..behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //.. Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    //doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    //doc.Add(limage);
                    //..behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);
                }
            }
            #endregion
            //.. behavioural_profile.DefaultHorizontalAlignment = iTextSharp .text.Element.ALIGN_LEFT;
            //.. doc.Add(behavioural_profile);

            return;
        }
        #endregion

        //(discription is independent.)
        #region Very-High S
        if (DiffBl > 10)
        {
            //doc.Add(new Paragraph("\t You show high degree of patience, calmness and gentle openness. You are generally amiable and warm-hearted, being sympathetic to others' points of view, and valuing positive interaction with others. You are not outgoing by nature; however, rely on other, more assertive, people to take the lead.\n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t As in your general lifestyle, you initiate relationships of any kind – yours solid, dependable outlook makes you far more suited to the maintenance of interpersonal relations than making initial contact. For this reason, your circle of friends and close acquaintances is often small but tightly-knit.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are simply 'supportive'. You are dependable and loyal, this combines with an emotional literacy to make you particularly effective listeners and counselors. You are also unusually persistent in approach, having the patience and restraint to work steadily at a task until it is achieved. This makes you unusually capable of dealing with laborious tasks that many other styles would simply not have the patience to complete.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Patience is the root source of motivation in you. You need to feel that you have the support of those around you and, more importantly, time to adapt to new situations. You have an inherent dislike of change, and will prefer to maintain the status quo whenever possible; sudden alterations in your circumstances can be very difficult for you to deal with. Once embarked on a task, you will wish to concentrate closely on it and see it through. Interruptions and distractions of any kind can be particularly demotivating in these situations. \n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits of this type are Patience , Thoughtfulness and Persistence."));

            #region getting_Very-High_S_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_2 FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Very-High_S-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //.. Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    //doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    // doc.Add(limage);
                    //.. behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));

                    //...  Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    // doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    // doc.Add(limage);
                    //..    behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);
                }
            }
            #endregion
            //.. behavioural_profile.DefaultHorizontalAlignment = iTextSharp .text.Element.ALIGN_LEFT;
            //..doc.Add(behavioural_profile);

            return;
        }
        #endregion
        //(discription is independent.)
        #region Very-High C
        if (DiffG > 10)
        {
            //doc.Add(new Paragraph("\t Passive by nature, often reticent and aloof, you often tend to give an impression of coldness or disinterest. Much of this impassive style stems from your controlled nature, however, which makes you reluctant to reveal information about yourselves or your ideas unless absolutely necessary. In fact, you are often ambitious and have lofty goals, but your innate lack of assertiveness and unwillingness to become involved in confrontational situations makes it difficult for you to achieve these goals directly. Instead, you will tend to use existing structures and rules to accomplish your aims. You tend to follow rules, authority and logical argument to influence the actions of others. \n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have much strength, but the ability to relate easily to other people is rarely in you. The combination of a passive social style with a certain innate suspiciousness makes it difficult for you to form or maintain close relationships, and this is especially true in a business sense. Your friendship or close acquaintances will normally be based on mutual interests or common aims, rather than emotional considerations. \n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are generally very self-reliant although this fact is often difficult to perceive. You have structured ways of thinking, and often show particular strengths when it comes to organizing facts or working with precise detail or sophisticated systems. You have a quick-thinking individual who will often have useful input, but your natural reticence means that you will rarely offer an opinion unless asked directly for your thoughts.\n "));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You need to feel completely sure of your position, and of others' expectations of you, before you are able to proceed. Because of this, you have a very strong aversion to risk, and will rarely take any action unless you can feel absolutely sure about its consequences.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits of this type are Cooperativeness, Accuracy and Sensitivity. "));

            #region getting_Very-High_C_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_2 FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Very-High_C-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //.. Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    //  doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    // doc.Add(limage);
                    //.. behavioural_profile.AddCell(be_column_3);
                    doc.Add(p);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    //.. Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    //..  behavioural_profile.AddCell(be_column_3);


                    // doc.Add(new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114))));
                    // doc.Add(limage);
                    doc.Add(p);
                }
            }
            #endregion
            //... behavioural_profile.DefaultHorizontalAlignment = iTextSharp .text.Element.ALIGN_LEFT;
            // ... doc.Add(behavioural_profile);

            return;
        }
        #endregion

        //doc.Add(behavioural_profile);
    }
    private void profile_conditions_pdf_3()
    {
        iTextSharp.text.Image endblock = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/endblock.png"));
        endblock.ScaleToFit(5f, 5f);
        Chunk imageChunk1 = new Chunk(endblock, 0, 0);
        Phrase limage = new Phrase();
        limage.Add(imageChunk1);



        iTextSharp.text.Table behavioural_profile = new iTextSharp.text.Table(1);
        behavioural_profile.DefaultCellBorder = 0;
        behavioural_profile.Border = 0;
        //behavioural_profile.Padding = 2;
        //behavioural_profile.Spacing = 5;
        //behavioural_profile.BorderWidthLeft = 0;
        //behavioural_profile.BorderWidthRight = 0;
        //behavioural_profile.BorderWidthTop = 0;
        //behavioural_profile.BorderWidthBottom = 0;
        behavioural_profile.Width = 100;

        //Anchor Profile = new Anchor("Profile Analysis\n", FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD));
        //Profile.Name = "targetYourBehaviouralProfile";
        //Paragraph pa = new Paragraph("");
        //pa.Add(Profile);

        //Paragraph pa = new Paragraph("\nProfile Analysis\n", FontFactory.GetFont(FontFactory.HELVETICA, 16, Font.BOLD));
        //pa.SetAlignment("center");
        //doc.Add(pa);

        Paragraph pdq_1 = new Paragraph("Your General Areas of Strengths", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD));
        pdq_1.SetAlignment("left");
        //doc.Add(pdq_1);

        Cell be_column_1 = new Cell(pdq_1);
        be_column_1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
        // be_column_1.VerticalAlignment = Element.ALIGN_CENTER;
        //be_column_1.BackgroundColor = new Color(204, 229, 255);
        //be_column_1.BorderWidthLeft = 1;
        //be_column_1.BorderWidthRight = 1;
        //be_column_1.BorderWidthTop = 1;
        //be_column_1.BorderWidthBottom = 1;
        behavioural_profile.AddCell(be_column_1);

        //Cell be_column_2 = new Cell("");
        //be_column_2.HorizontalAlignment = iTextSharp .text.Element.ALIGN_LEFT;
        //be_column_2.BorderWidthLeft = 0;
        //be_column_2.BorderWidthRight = 0;
        //be_column_2.BorderWidthTop = 0;
        //be_column_2.BorderWidthBottom = 0;
        //behavioural_profile.AddCell(be_column_2);

        // Different Patterns for Graph 3 
        //doc.Add(new Paragraph("\n Profile Analysis", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
        // 1. D is greater than all and in positive region
        #region High-D
        if ((DiffB <= 10 & DiffB > -1) && (DiffR <= -1 && DiffBl <= -1 && DiffG <= -1))
        {
            //doc.Add(new Paragraph("\t Direct, decisive, problem solver, risk taker and self starter are the few characteristics that describe you as a person. For these basic characteristics, you are often portrayed as an 'Autocrat Manager', who is great in crisis.  You are extremely ambitious and that makes you a highly goal oriented person. You are straightforward, dominating and forceful and overbearing at times. You are a bottom-line organizer, have the knack to challenge the status quo and innovative by nature. You basically possess the leadership skills in you.\n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are not very sociable type. You focus on achievement and success and believe in individual accomplishments, and hence not a team player. You have an argumentative attitude and tend to overstep authority. Sometimes you tend to maintain relations with people around you to just to fulfill your personal goals. You relate to people who are submissive and only till your goal is met. You neither care people’s emotions or feelings and nor care your own. You are not very friendlier or approachable. Others sometimes find it difficult to break through this naturally suspicious, skeptical shell of yours.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are self-reliant, innovative in getting results, and maintain focus on goals. You have the ability to overcome obstacles, provide direction and leadership and offer innovative and progressive systems and ideas. You can push group toward decisions and willing to speak out. Generally optimistic, you welcome challenges without fear. You accept risks and have the ability to see the big picture. You can handle multiple projects and function well with heavy work loads and cope well in stressful situations. You like to be in charge and solve problems. You set lofty goals and sometimes attempt too much at once.  You lose focus on problems sometimes.  While analyzing information, you ignore potential risks and do not weigh the pros and cons and do not consider others' opinions also.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You love challenge and autonomy. You need freedom and you want prestige. You need opportunity for advancement and like projects that produce tangible results.  You prefer personal evaluation based on results, and not methods. You are motivated by new challenges, power and authority to take risks and make decisions, freedom from routine and mundane tasks and changing environments in which to work and play.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Efficiency, Self-motivation and Independence."));

            #region getting_high-D_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_general_faculty FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-D-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);

                    //doc.Add(p);
                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                    // doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 2. I is Greater than all and in positive region
        #region High-I
        if ((DiffB <= -1) && (DiffR <= 10 && DiffR > -1) && (DiffBl <= -1) && (DiffG <= -1))
        {
            //doc.Add(new Paragraph("\t Enthusiastic, trusting, optimistic, persuasive, talkative, impulsive and emotional are the characteristics that describe you as a person. Communication is the key factor in you, where you communicate easily with the people around you and have a friendly, influential and persuasive style while dealing with them.\n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have a natural talent to connect to people. You are extremely networked and connected to every person heart to heart.  You build a favorable, friendly environment around you. You have a genuine interest in the ideas and feelings of other people. Your enthusiasm and charming nature along with your high level of confidence create a positive aura around you. You are open to others and confident in your own social abilities, and interact positively in almost any situation. You have the ability to motivate people in a team environment. You create an influencing circle or group, where your actions revolve around building and maintaining relationships, sometimes, even to the extent of alienating people who are not part of the circle.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Your distinct abilities lie in the area of communication and relationship building. You are not only a strong communicator, but also you have the ability to verbalize about ideas, people and their intuition. You can express ideas well and perceive the nuances and adapt well in any situations. You make a good spokesperson. In a team environment, you are a great encourager, creative problem solver, peace maker and a good conflict negotiator. You respond well to the unexpected. You create an atmosphere of well being, provide direction and leadership, work well with other people, will offer opinions, and have a positive attitude. You accomplish goals through people, have good sense of humor and strong in brainstorming sessions. On a weaker side, you are more concerned with popularity than tangible results. You are inattentive to detail, sometimes overuse gestures and facial expression and you tend to listen only when it's convenient.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\tYou are motivated by flattery, praise, popularity, and acceptance. A friendly environment, freedom from many rules and regulations, a forum to express ideas, group activities in professional and social environments make you feel happy and contented. Having other people available to handle details further gives you a boost.  Social esteem and acceptance, and recognition for abilities, praise and approval make a strong impression on you. Further, opportunity to motivate and influence others and positive working conditions gives you satisfaction. Specifically, you need to feel accepted by those around you, and you are bothered about people’s opinion about you more than anything else. You tend to get offensive if you find yourselves rejected or disliked.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Friendliness, Enthusiasm and Self-confidence."));

            #region getting_high-I_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_general_faculty FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-I-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 3. S is Greater than all and in positive region
        #region High-S
        if ((DiffB <= -1) && (DiffR <= -1) && (DiffBl <= 10 && DiffBl > -1) && (DiffG <= -1))
        {
            //doc.Add(new Paragraph("\tGood listener, team player, possessive, steady, predictable, understanding and friendly is the quality that characterizes you as a person. You show high degree of patience, calmness and gentle openness, and sympathetic to others' points of view, and value positive interaction with others.  You are generally amiable and warm-hearted but you are not outgoing by nature and tend to depend on more assertive type of people to take the lead. You are relaxed type of person, happy go lucky type, where you don’t want to rock the boat. You are easily adaptable, having a ‘flow with the wind’ kind of personality. \n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are basically reliable and dependable. You are a loyal team worker. You are compliant towards authority. You are patient and empathetic listener and that helps you to reconcile conflicts. You are generally not that type who will go and build relations upfront, but you are good in maintaining and sustaining a fruitful interpersonal relation. For this reason you are often found with a small, closely knit friend circle. In team environment you are ‘instinctive relater’, a participative manager, who accomplishes goals through personal relationships.  You have the ability to make others feel like they belong.  You are focused and intuitive about people and relationships. You buy into team goals and can identify strongly with the team.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are simply 'supportive'. You demonstrate dependable, sincere and loyal type of personality. You are also extremely persistent in approach, having the patience and restraint to work steadily at a task until it is achieved. This makes you unusually capable of dealing with laborious repetitive tasks that others might find hard to accomplish.  You can see an easier way of doing things. You are usually full of common sense. You are a thinker; focus on one thing at a time. You provide stability to any situation, where you are realistic, practical and even-tempered. However, while analyzing information, you are openly agreeable but inwardly unyielding. You tend to internalize your concerns and doubts. You tend to hesitate to share feedback during presentation. You normally resist change and take a long time to adjust to change. You hold a grudge and sensitive to criticism. Sometimes you have difficulty establishing priorities.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are motivated by recognition for loyalty and dependability. Safety and security with no sudden changes in procedure or lifestyle stimulate you. You prefer to maintain the status quo whenever possible. You need time to adjust to changes. You prefer activities that can be started and finished. Interruptions or discontinuity or changes unsettles you. Further you prefer limited territory of responsibility. You love routine and repeated work pattern. Patience is the root source of motivation in you. You need to feel that you have the support, co-operation and sincere appreciation of those around you. You like team atmosphere. You dislike conflicts and arguments.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Patience, Thoughtfulness and Persistence."));

            #region getting_high-S_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_general_faculty FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-S-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());

                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);

                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 4. C is Greater than all and in positive region
        #region High-C
        if ((DiffB <= -1) && (DiffR <= -1) && (DiffBl <= -1) && (DiffG <= 10 && DiffG > -1))
        {

            //doc.Add(new Paragraph("\t Accurate, analytical, conscientious, careful, fact-finder, precise, high standards and systematic are the characteristics that describe you as a person. You are normally passive by nature, which stems from your controlled behaviour and that give the impression of you being distant, reserved, aloof and disinterested. You generally don’t reveal information, or your feelings and emotions, only share when utmost necessary.  You are the 'anchor of reality' and even-tempered. Though you are highly ambitious, you are not that assertive to achieve it always. Rather you attain your goals by remaining within a certain framework and set rules. You are a calculated risk taker. You offer conservative approaches and emphasize quality and you are thorough to all activities. You are also diplomatic.\n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are very formal in relationships, the ability to relate easily to other people is generally lacking in you. You find difficult to adjust to informal atmosphere. Being suspicious and critical, you generally don’t have close relationships, particularly in business sense. Your friendships are not based on emotions but instead common interest or similarities in ideas and values helps to build that bond.  You prefer not to verbalize feelings; Will give in rather than argue.  You strive for a logical, consistent environment. You tend to control the details. You evaluate the team's progress, ask important questions and maintain focus on tasks and analyze obstacles. You will share risks and responsibilities, work systematically and will strive for consensus.  You tend to follow rules, authority and logical argument to influence the actions of others\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are an instinctive organizer, a 'Do it yourself' manager who create and maintain systems. You think logically. You are usually very self-reliant although this fact is often difficult to perceive. You have structured ways of thinking, and often show particular strengths when it comes to organizing facts or working with precise detail or sophisticated systems. You are a quick-thinker and can provide valuable inputs, but only share it when asked for. You tend to define situations, gather, criticize and test information. While analyzing information, you become overly cautious and conservative; Get too bogged down in details. You tend to avoid or postpone decisions, especially if you perceive a risk; However, you are an effective trouble shooter.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Standards of high quality, limited social interaction, and detailed tasks, logical organization of information and clear-cut boundaries for actions/relationships motivates you. Autonomy and independence, controlled work environment, reassurance, precise expectations and goals, exact job descriptions, planned changes inspire you. You need to feel completely sure of your position, and of others' expectations of you, before you are able to proceed. Because of this, you have a very strong aversion to risk, and will rarely take any action unless you can feel absolutely sure about its consequences. You feel comfortable in environment where tasks and projects can be followed through to completion. You prefer specialized or technical tasks, where there exist practical work procedures and routines; and you have instructions and reassurance that you are doing what is expected of you and where there are few conflicts and arguments.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Cooperativeness, Accuracy and Sensitivity."));
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            #region getting_high-C_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_general_faculty FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-C-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);

            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);

                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);

                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 5. D is Lower than all and in negative region
        #region Low-D
        if ((DiffB <= -1) && (DiffR <= 10 && DiffR > -1) && (DiffBl <= 10 && DiffBl > -1) && (DiffG <= 10 && DiffG > -1))
        {
            //doc.Add(new Paragraph("\t You are generally conservative, low keyed, agreeable and undemanding. You are a good team worker and ready to accept others' ideas. You are not competitive in nature, not that ambitious type, and you tend to avoid conflicting situations. You like to develop warm and friendly relations with people around you. You want to do more research before committing to a decision. You are cooperative, mild, cautious and peaceful and hence, will try to achieve your goals based on your convincing and coherent communication and friendly relations.\n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have adequate communicating skills and have relatively good networking skills. But you are not particularly assertive, and hence, in confrontational or pressurized situations you tend to falter. Being co-operative, patient and good listener, you are a team person, and able to work for the group rather than focusing on your own needs.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are an active listener. You are attentive to other team members' ideas until everyone reaches a consensus. You adopt a great appreciation for the opinions, feelings, and desires of others. You are friendly, outgoing and approachable. Further, you put energy into personal relationships and show your support for other team members and that make you strong in relationship management.\n "));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Positive and friendly interactions motivate you. Since you are not ambitious person, goals or challenges don’t excite you. Simple happiness, positive environment, warmth, and friendly terms with people give you immense satisfaction.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Friendliness, Patience and Cooperativeness."));

            #region getting_Low-D_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_general_faculty FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Low-D-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);

                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);

                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 6. I is lower than all and in negative region
        #region Low-I
        if ((DiffB <= 10 && DiffB > -1) && (DiffR <= -1) && (DiffBl <= 10 && DiffBl > -1) && (DiffG <= 10 && DiffG > -1))
        {
            //doc.Add(new Paragraph("\t The striking feature in you is you are shy and introvert, and you go by facts and data and not by feelings. In any typical situation or event you rely more on logic and rationale than on emotions. You are basically reflective, factual, calculative, logical, and critical. At the same time very suspicious and skeptical and tend to keep your thoughts, ideas within yourselves and will share only when asked for. You are basically relaxed and calm but in hostile or demanding situations, your assertiveness and dominance often get prominence. \n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are often direct and assertive but you seldom have interest on personal matters. You are rarely communicative and interact and communicate only when needed purely on a practical basis, rather than on a personal level. You have a passive approach. You are generally a good listener and you respond to comments and ideas when sought for rather than put forward your views voluntarily.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You believe in accuracy and efficiency. But being highly analytical and cautious, you weigh the pros and cons in depth and often hold back from action, and prefer not to behave impulsively and land up into adverse situations. Though you are result oriented, you tend to take risk only when utmost necessary. You value result and productivity. Your approach to work or life is systematic and factual and you focus on details and facts. You are also cautious in communication where you reveal only when necessary and that to in a succinct manner.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Structured and risk free environment motivates you. Achieving results and getting opportunity to work systematically with complete understanding of the subject encourages you. Getting adequate time to cope up with changes helps you to perform better.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Efficiency, Thoughtfulness and Accuracy."));

            #region getting_Low-I_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_general_faculty FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Low-I-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);

                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);

                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 7. S is lower than all and in negative region
        #region Low-S
        if ((DiffB <= 10 && DiffB > -1) && (DiffR <= 10 && DiffR > -1) && (DiffBl <= -1) && (DiffG <= 10 && DiffG > -1))
        {
            //doc.Add(new Paragraph("\t Speed is the crucial feature in you. You have high sense of urgency and fast pace. You are basically impatient and restless in nature and so possess high speed of response. Further, you are ambitious and assertive but at the same time sensitive in your approach. Your ambitions do get a primary focus  but if need be you definitely care for the people around you; Before accomplishing your goal, you tend to make sure that your team’s need or the need of the organization is taken care off. In informal situations, you often display good social skills.\n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are extremely aware of your environment and take notice of the changes that takes place within it. You are sharp to catch the things that are unspoken. In informal situation you display enthusiastic and open approach where else in structured or formal environment, your assertive and controlled behaviour come to the fore. \n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Depending on the situation you have the ability to modulate your behaviour which helps you to adapt to the situation in an effective way. In friendly environment you are enthusiastic and open and in formal settings, you get direct, blunt and straightforward. You also have the ability to deal with confrontation and stress effectively and you tend to be a quick thinker.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Personal achievement and success motivates you but at the same time your sensitivity makes you lean towards people, whereby their acceptance and approval gives you a kick.\n "));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Self--motivation, Enthusiasm and Sensitivity."));

            #region getting_Low-S_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_general_faculty FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Low-S-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);

                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);

                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 8. C is lower than all and in negative region
        #region Low-C
        if ((DiffB <= 10 && DiffB > -1) && (DiffR <= 10 && DiffR > -1) && (DiffBl <= 10 && DiffBl > -1) && (DiffG <= -1))
        {
            //doc.Add(new Paragraph("\t You have high sense of independence, which characterizes you. Your ambitions in life are unambiguous and at the same time you possess a strong will power to fulfill these aspirations. You have unusual calmness and stability that gives you perseverance and determination to achieve your goals. You are socially motivated, but basically being independent in nature and having a strong sense of diligence and pushiness, your openness and friendly nature takes a backseat in tough and challenging situations. \n"));
            //doc.Add(new Paragraph("\nConnecting to people - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Being independent natured, you have a convincing and powerful style while dealing with people and you always strive to protect and defend your stance and often try to maintain your sense of identity. Further having high self confidence, social networking skill is good in you where you simply mingle deftly with other people or with strangers, and handle well in unusual situations.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are self-willed and stubborn, with strong social skills and strong sense of personal responsibility that helps you to take initiative and become a good facilitator. You are also unsystematic, arbitrary, and unconcerned with details. You being patient, tenacious, and assertive, you tend to weigh the pros and cons of any situation and then arrive at a concluding decision.\n "));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Achieving your goals and having a control over the situation motivates you. You value success and achievement a lot but at the same time, maintaining positive relationships are important to you also. Hence, under certain conflicting circumstances you won’t compromise on relationships to achieve your goal, but will see to it that things are resolved amicably before achieving the desired result.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Independence, Self-confidence and Persistence. "));

            #region getting_Low-C_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_general_faculty FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Low-C-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 9. D and I in positive region and I > D
        #region Positive-DI_I>D
        //if ((DiffB > -1 && DiffR > -1) && (DiffBl < -1 && DiffG < -1) && (DiffB < DiffR))
        if ((DiffB > -1 && DiffR > -1) && (DiffBl <= -1 && DiffG <= -1))
        {
            //doc.Add(new Paragraph("\t Demanding, assertive, optimistic, enthusiastic, magnetic, and ambitious are the characteristics that define your personality. You maintain focus on your goals and have determination to achieve it. You accept risks and welcome challenges without fear. You are forceful and direct, but at the same time you are emotional too.  \n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are assertive and confident and at the same time you have strong social skills. You have charisma and magnetism but you tend to show domineering and forceful behaviour particularly under stressed situation. These qualities help you deal with any situations directly and fearlessly. If the situation demands you are capable to adopt a confrontational position. Though you display authority and domination, you feel the need to be liked by the people around you on sincere terms, in addition of being respected by them. Independence and self confidence being your key characteristics, you have a powerful and persuasive approach to every circumstance.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are driven and forceful. You love challenges. Being self reliant, you are capable of taking personal responsibility for your actions. You are ambitious and love to take risk. You are self starter and problem solver.  You have the ability to think outside the box. You dislike routine and sometimes attempt too much at once. At work, your assertiveness and persuasion helps you to motivate others to accept your idea and concept. On a weaker side, you are not a good listener and tend to listen only when it is convenient or appropriate. You are inattentive to details.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            ////doc.Add(new Paragraph("\t Challenge is a keyword for you where you thrive in situations that others would find impossibly stressful and difficult to deal with. Your need for achievement means that you are willing to undertake almost any task to achieve success or recognition, and this driving, motivated approach lends them an urgency and energy rarely seen in others.You are the classic ideal for direct sales work. This type of occupation characterizes you for having the ability to think and react quickly, adapt to challenging situations and use powers of both assertiveness and persuasion to motivate others to accept your own proposals."));
            //doc.Add(new Paragraph("\t Challenge is the driving force for you. New challenges, changing environment along with freedom from mundane tasks and routine, motivates you. In challenging environment you tend to enjoy a lot where others would get stressed out in the similar situation. Success and achievement drives you all the time and the will to succeed gives you an unmatched energy and enthusiasm.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Self-motivation, Independence, Enthusiasm and Self-confidence."));

            #region getting_Positive-DI_I>D_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_general_faculty FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-DI-profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);

                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 10. D and S in positive region and D > S
        #region Positive-DS_D>S
        //if ((DiffB < 10 && DiffB > -1) && (DiffR < -1 && DiffG < -1) && (DiffBl < 10 && DiffBl > -1) && (DiffB > DiffBl))
        if ((DiffB <= 10 && DiffB > -1) && (DiffR <= -1 && DiffG <= -1) && (DiffBl <= 10 && DiffBl > -1))
        {
            //doc.Add(new Paragraph("\t You exhibit a paradoxical behaviour. By nature you are assertive and persuasive, yet at the same time you are relaxed and show stability in your approach. \n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You assume two different approaches while relating to people. If you are confident about the person or people around you or if you have developed a trust factor already, then you have a trusting and friendlier approach. Or else you remain skeptical and you hardly open up or reveal information or share your ideas with others.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t With regards to achieving your goals, you display a focused and practical approach and follow it till the end. Your patience, consistency and determination help you to tie all the loose ends and meet your targets within the stipulated timelines. You like to plan your work before commencing. Under steady situation you generally show caution and consideration but under pressure, you exhibit a demanding approach that helps you attain your goal effectively.\n "));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\tYou need control of own activities and at the same time you require long term affiliation and stable work environment. Consequently, you try to preserve the status quo and avoid sudden change using your authority.\n "));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are persistence, efficiency, independence and thoughtfulness. "));

            #region getting_Positive-DS_D>S_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_general_faculty FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-DS-profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 11. D and C in positive region and D < C
        #region Positive-DC_D>C
        //if ((DiffB < 10 && DiffB > -1) && (DiffR < -1) && (DiffBl < -1) && (DiffG < 10 && DiffG > -1) && (DiffB < DiffG))
        if ((DiffB <= 10 && DiffB > -1) && (DiffR <= -1) && (DiffBl <= -1) && (DiffG <= 10 && DiffG > -1))
        {
            //doc.Add(new Paragraph("\t You are basically a very reserved kind of person and show a controlled and organized approach in life.  You have a no nonsense approach. You believe in accuracy and always strive for perfection. You are direct in your manner and often voice your opinion strongly. You are basically an efficient person but you have very little interest in personal matters. You are analytical in nature and prefer not to take unwarranted risk.\n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t As you are basically reserved type of a person, you generally don’t communicate on a personal level. Further your communication remains to the point, crisp and normally remains on a practical level. Emotions generally don’t play a major role in your life. You are not that trusting kind who will share everything with people around you, rather your skepticism makes you keep the facts with yourself and you tend to share it only when utmost necessary. Further your need to be active all the time makes you impatient with those you can’t keep up with your pace.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Achievement and efficiency combined with perfection and precision drives you. Your assertive, self reliant and reserved nature helps you to attain your goals relentlessly and also makes you capable to take responsibility for your action. Though you like to see immediate results but you also believe in proper planning and execution. Further, you generally can manage stress and conflicts in life effectively.  The assertiveness and accuracy in everything sometimes goes to such an extreme that you expect the same from others and you also pinpoint their mistakes  if they have gone wrong somewhere, though for them it might be an insignificant or petty issue.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Achievement and success in your work inspires you. While driving towards success, you also complete the task with accuracy and precision and that gives you immense satisfaction. However, it is difficult to predict if anything motivates you at all, as you tend to remain bit aloof and distant and keep your emotions under control.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Efficiency, Self-motivation , Accuracy and Sensitivity "));

            #region getting_Positive-DC_D>C_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_general_faculty FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-DC-profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);

                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 12. I and S in positive region and I > S
        #region Positive-IS_I>S
        //if ((DiffB < -1 && DiffG < -1) && (DiffR < 10 && DiffR > -1) && (DiffBl < 10 && DiffBl > -1) && (DiffR > DiffBl))
        if ((DiffB <= -1 && DiffG <= -1) && (DiffR <= 10 && DiffR > -1) && (DiffBl <= 10 && DiffBl > -1))
        {
            //doc.Add(new Paragraph("\tYou are friendly, emotional and empathetic by nature. You are basically inclined to relationships, personal issues and networking. You generally don’t give importance to life’s hard realities. You like to get involved in people’s problems and tend to give a helping hand whenever possible. People like you become great counselors. \n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You can easily connect to people and mingle with them. You don’t get perturbed by strangers at all. Your confidence and socializing nature makes you receptive to people’s ideas and feelings. In any demanding situations, your persuasive approach helps you to adopt yourself well, but at the same time you also show patience while dealing with others. You generally develop a warm and friendly relation with those around you. You are genuinely interested in people.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have an open and outgoing personality. You have a strong ability to communicate and you possess a deep understanding of people and situation. This helps you to adapt to new situations effectively. You’re being influential and charming helps you to function effectively in any situations. But being less assertive, it sometimes gets difficult for you to deal in confrontational situations. You are persistent by nature and this helps you to finish the work that you have embarked on.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Positive and friendly atmosphere motivate you. You generally avoid conflicting situations.  You always like to be appreciated and respected by the people around you. You always have the need to be accepted by others and you desire that they are sympathetic and attentive towards you.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Friendliness, Self-confidence, Patience and Persistence."));

            #region getting_Positive-IS_I>S_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_general_faculty FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-IS-profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);

                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 13. I and C in positive region and I > C
        #region Positive-IC_I>C
        //if ((DiffB <= -1 && DiffBl <= -1) && (DiffR < 10 && DiffR > -1) && (DiffG < 10 && DiffG > -1) && (DiffR > DiffG))
        if ((DiffB <= -1 && DiffBl <= -1) && (DiffR <= 10 && DiffR > -1) && (DiffG <= 10 && DiffG > -1))
        {

            //doc.Add(new Paragraph("\t You are basically open and friendly type of person with an organized and structured approach to situation and people around you. In relaxed and comfortable environment, you show enthusiasm and excitement whereas in more structured and formal situations, you are meticulous and display a process oriented approach. \n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t The way you relate to people actually depends on the situation that you are in. In casual environment you display confidence and openness and have an outgoing behaviour; but in formal situation where you are not so comfortable, you tend to be compliant along with your diminished confidence level. In such situations, you are generally not expressive about your feelings and emotions and rarely make direct criticism or enter into arguments; rather you are concerned about what others have opinion about you.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Depending on the situation, you can be friendly and charming or direct and forthright, or aloof and guarded. Basically you are a confident and enthusiastic person. You understand the nuances in any sort of communication which are generally overlooked or remain undetected by others. But sometimes you do get over-sensitive to other’s opinion, when actually nothing exists to react that way. Nevertheless, you tend to be a good team-worker. Your organized structured approach acts as strength in any group situations. Rather than focusing on your specific needs, you tend to focus on group’s needs.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Being friendly and charming, you have the need for others approval and interest, but being compliant, you generally don’t show this openly, rather you are more restrained.  A sense of sureness about your position especially in social terms motivates you. Your motivation stems from the achievement of personal ambition, social acceptance and social recognition, and certainty of your position.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Friendliness, Enthusiasm, Co-cooperativeness and Sensitivity."));

            #region getting_Positive-IC_I>C_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_general_faculty FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-IC-profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;

        }
        #endregion
        // 14. S and C High
        #region High-SC
        //if ((DiffB <= -1 && DiffR <= -1) && (DiffG < 10 && DiffG > -1) && (DiffBl < 10 && DiffBl > -1))
        if ((DiffB <= -1 && DiffR <= -1) && (DiffG <= 10 && DiffG > -1) && (DiffBl <= 10 && DiffBl > -1))
        {
            //doc.Add(new Paragraph("\t You are intellectually very sound and tend to focus on perfection and accuracy. As a person you are passive by nature, meticulous, reserved and a systematic thinker. A perfectionist by nature, you set high standards of quality and accuracy and strive to achieve them. A process oriented individual, who prefers to design processes and set the rules and follow them too. You speak only if necessary and only when it forms a part of your core interest of expertise.  You are amazingly ambitious and have high goals and you tend to use existing structures and rules to accomplish your aims. You are also extremely logical, structured and systematic in your approach towards work.\n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t You prefer to relate to individuals on a one on one basis rather than connecting with them in a group. In unfamiliar settings, you normally find difficulty to connect to people. Though you value relationships, you generally don’t display it openly. You depend on assertive and outgoing people around you to initiate the interpersonal issues rather than you taking the lead. You have sound knowledge and intellect and many a times finds yourself in a situation where your intellect is higher than the group.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Your strengths can be summarized as ‘diligent’, perfectionist and self reliant. You are persistent in approach, having the patience and precision, you work steadily at a task until it is achieved. You don’t like to be rushed in any activity or situation, and sudden unplanned change demotivates you. You are very self-reliant, with your structured way of thinking you often show your strength when it comes to organizing facts or working with precise detail or sophisticated systems. Your potential generally lies in technical work.  At times due to the need to be precise and detail oriented you would be seen as slow paced, however your thoughtful nature and diligence improves the quality of decisions you make.  You have a disciplined, purposeful approach, where actions are carefully planned with caution and care.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Self reliant and perfectionism is the root source of motivation in you. You are detailed oriented, and plan with extreme details; however you believe that the goal is met if the process is adhered to. You have the need for time to plan and execute your work carefully and thereby delivering high quality job gives you immense satisfaction.  You prefer to get enough time to adapt to changing situations as you normally have affinity towards stable and familiar environment. You also have a subtle need to be accepted and acknowledged by people.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Persistence, Thoughtfulness and Accuracy."));

            #region getting_High-SC_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_general_faculty FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-SC-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        //HD,HS,HC high DSC
        #region High-DSC
        if ((DiffB <= 10 & DiffB > -1) && (DiffBl <= 10 && DiffBl > -1) && (DiffG <= 10 && DiffG > -1) && (DiffR <= -1))
        {
            //doc.Add(new Paragraph("\t As a person you are highly analytical and relatively uncommunicative. You are basically practical in nature and rational in your thought process. Emotions don’t bother you much. You are generally secretive by nature and cautious in communication, rarely revealing much about yourselves than a bare minimum. In challenging and stressful situations, you display an assertive and forceful behaviour, whereas in easy environment you are much relaxed. \n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Your inclination to relate to people in general is usually found low. You have a passive approach towards reacting to others’ comments or ideas. You prefer not to provide any direct inputs to others unless you are asked for. When you are in certain difficult or demanding situations your willingness to communicate do increase significantly, but to communicate on a personal level is normally low. Being yourself precise and accurate, you tend to demand similar kind of behaviour from people around you.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t You never act on impulse and take unnecessary risks. You put extreme emphasis on results and productivity, leading to a disciplined purposeful approach, where actions are carefully planned with caution and care. You are comfortable with complex systems and processes and work well with facts. You emphasize on efficiency and effectiveness, and that is reflected in both your professional and personal front. If you start something, you like to carry it through the end.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t You like to solve your problems in your own way and achievement of results motivates you. You need opportunity to prove yourself. You prefer to get enough time to adapt to changing situations as you normally have affinity towards stable and familiar environment.  You have the need for time to plan and execute your work carefully and thereby delivering high quality job gives you immense satisfaction. You need full understandings of facts and specific knowledge of the job and tend to seek freedom from risk.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are accuracy, efficiency and thoughtfulness."));

            #region getting_High-DSC_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_general_faculty FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-DSC-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    be_column_3.BorderWidthLeft = 1;
                    be_column_3.BorderWidthRight = 1;
                    be_column_3.BorderWidthTop = 1;
                    be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        //HI,HD,HC high DCI
        #region High-DCI
        if ((DiffB <= 10 & DiffB > -1) && (DiffG <= 10 && DiffG > -1) && (DiffR <= 10 && DiffR > -1) && (DiffBl <= -1))
        {
            //doc.Add(new Paragraph("\t You are basically fast paced and have high sense of urgency. You are impatient with routines and love variety. You are self-confident and have challenging and competitive approach and at the same time you are socially poised and very outgoing by nature. Though you are extremely assertive and have high need to achieve success, you work in consensus and exhibit caution in dealing with situations. You normally do not show unpredictability in your approach.\n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t You display effective social abilities, particularly evident in any informal open situations, where you exhibit a friendly, open and enthusiastic approach. In formal environment, however, you have self-controlled, driving attitude and display a less sociable style.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Depending on situations, you can be charming and enthusiastic, or direct and forthright. You are socially aware, and able to detect nuances in communication. In demanding situation, you display usual outgoing and expressive behaviour, but is bolstered by a more assertive approach.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Your motivation stems from the achievement of personal ambition, recognition for own ideas, social acceptance and social recognition, and certainty of your position.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are enthusiasm, self-motivation and sensitivity."));

            #region getting_High-DCI_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_general_faculty FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-DCI-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    be_column_3.BorderWidthLeft = 1;
                    be_column_3.BorderWidthRight = 1;
                    be_column_3.BorderWidthTop = 1;
                    be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        //HI,HD,HS high DSI
        #region High-DSI
        if ((DiffB <= 10 & DiffB > -1) && (DiffBl <= 10 && DiffBl > -1) && (DiffR <= 10 && DiffR > -1) && (DiffG <= -1))
        {
            //doc.Add(new Paragraph("\tAs a person you are dynamic and direct and have an independent behavioral style. You have a clear idea about your goals in life and you equally have the strength to achieve it. You have a more single-minded and stubborn approach to situations. Your remarkable tenacity and determination help you to attain your goal in life. Though you mix easily with strangers, and are unafraid to initiate social contact, you have a powerful, persuasive, confident behavioral style. This helps you to deal directly and fearlessly with most situations. While you will typically prefer to keep matters on an open and friendly level, you are quite capable of adopting a more determined and confrontational stance where a situation calls for.\n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t You interact easily and skillfully with people around you, and rarely experience self-doubt, and you feel at ease in almost any social situations. You are unafraid to initiate social contact however you have a strong sense of independence and tend to maintain your own sense of identity, and tend to protect and defend your own viewpoint.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t : You exhibit dependency and at the same time have strong social abilities. This helps you to take initiative in every activity with great confidence and assertiveness. Your self- reliance style with a strong sense of personal responsibility makes you an effective facilitator. Being patient and persistent along with assertiveness helps you to achieve the results. Further, you also consider and weigh the options before arriving at a definite conclusion.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t You like to have control over your own state of affairs, and being persistent and assertive, like to do things in your own way. While success and achievements are important to you, you also value positive and friendly relationships with other people. Thereby, under certain situation you might even delay achieving your goals, if there is some sort of conflict existing with others' needs.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are independence, self-confidence and persistence."));

            #region getting_High-DSI_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_general_faculty FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-DSI-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    be_column_3.BorderWidthLeft = 1;
                    be_column_3.BorderWidthRight = 1;
                    be_column_3.BorderWidthTop = 1;
                    be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        //HI,HS,HC high ISC
        #region High-ISC
        if ((DiffG <= 10 & DiffG > -1) && (DiffBl <= 10 && DiffBl > -1) && (DiffR <= 10 && DiffR > -1) && (DiffB <= -1))
        {
            //doc.Add(new Paragraph("\tYou are basically warm, friendly and outgoing by nature. You are patient and generally a good listener. You work cooperatively with others and you love team oriented environment. You tend to avoid individual risk and tend to accept others’ ideas. You are normally not very assertive and dominant type and thereby you prefer to achieve your ends through communication, using your persuasive abilities and rationality. You usually distribute responsibility and tend to concentrate particularly on the details of a task. You are not very ambitious kind and are happy in building strong social relationships.\n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t You work harmoniously with the group. Your outgoing friendly style along with your patience and accommodative nature makes you a good listener. Your strong analytical rationale helps you to present your ideas and arguments in convincing and logical manner.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Your warm friendly, extroverted easy going nature helps you to be a good team player.  You usually entertain ideas from your team. You are receptive to other people and sympathetic to their point of view. With your patience and steadiness, you have high tolerance to repetitive work.  Your confidence helps you to maintain a proactive approach to the situation, though it generally lacks effectiveness due to your low assertiveness.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Warm, friendly, extroverted environment makes you happy and content. You are not ambitious kind but supportive ‘family-like’ work team motivates you. You need time to adapt to new situations or changes and prefer a stable work environment. A sense of sureness about your position especially in social terms motivates you.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are cooperativeness, friendliness and patience."));

            #region getting_High-ISC_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_general_faculty FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-ISC-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    be_column_3.BorderWidthLeft = 1;
                    be_column_3.BorderWidthRight = 1;
                    be_column_3.BorderWidthTop = 1;
                    be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion

        //From here discription not aviable in DB.

        // Basic Profiles
        // flick - up (from here to Very-High I all discription is similer.) 
        #region Flick-up
        if (T1 == true || T2 == true || T3 == true)
        {

            //doc.Add(new Paragraph("\t Communication is the key factor in you. You can communicate easily and fluently with others. You are often referred to as 'Communicator' profiles – you are confident, outgoing and gregarious individual who value contact with other people and the development of positive relations.\n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are best in Connecting to People. You are open to others and confident in your own social abilities, and interact positively in almost any situation. Your strong and evident confidence, coupled with your genuine interest in the ideas and especially feelings of other people, are often found charming by those around you. Your actions will often be designed to improve and extend relations, even to the extent of alienating people who are not part of your circle. \n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You distinct abilities lie in the area of communication and relationship building. You are not only a strong communicator, possessing the assertiveness to drive home a point of view, but also have the intuitive qualities to understand others' perspectives and adapt others to meet new situations. \n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have a natural talent to connect to people. You have no inhibitions in getting connected to different type of people. This also stems from the fact that you have an inner confidence to build a long term relation. Specifically, you need to feel accepted by those around you, and react badly if you perceive yourselves to be rejected or disliked. Praise and approval make a strong impression on you, and you will sometimes go to great lengths to achieve this kind of reaction from other people.Especially important to you are the opinions and reactions of your particularly close circle. You believe in creating a positive environment that enhances the well being of people around you.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub--traits of this type are Friendliness , Enthusiasm and Self--confidence"));
            //return;

            #region getting_Flick-Up_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_general_faculty FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Flick-Up-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    be_column_3.BorderWidthLeft = 1;
                    be_column_3.BorderWidthRight = 1;
                    be_column_3.BorderWidthTop = 1;
                    be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // flick - down
        #region flick-down
        if (TD1 == true || TD2 == true || TD3 == true)
        {
            //doc.Add(new Paragraph("\t Communication is the key factor in you. You can communicate easily and fluently with others. You are often referred to as 'Communicator' profiles – you are confident, outgoing and gregarious individual who value contact with other people and the development of positive relations.\n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are best in Connecting to People. You are open to others and confident in your own social abilities, and interact positively in almost any situation. Your strong and evident confidence, coupled with your genuine interest in the ideas and especially feelings of other people, are often found charming by those around you. Your actions will often be designed to improve and extend relations, even to the extent of alienating people who are not part of your circle.\n "));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You distinct abilities lie in the area of communication and relationship building. You are not only a strong communicator, possessing the assertiveness to drive home a point of view, but also have the intuitive qualities to understand others' perspectives and adapt others to meet new situations. \n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have a natural talent to connect to people. You have no inhibitions in getting connected to different type of people. This also stems from the fact that you have an inner confidence to build a long term relation. Specifically, you need to feel accepted by those around you, and react badly if you perceive yourselves to be rejected or disliked. Praise and approval make a strong impression on you, and you will sometimes go to great lengths to achieve this kind of reaction from other people.Especially important to you are the opinions and reactions of your particularly close circle. You believe in creating a positive environment that enhances the well being of people around you.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub--traits of this type are Friendliness , Enthusiasm and Self--confidence"));

            #region getting_Flick-Down_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_general_faculty FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Flick-Down-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    be_column_3.BorderWidthLeft = 1;
                    be_column_3.BorderWidthRight = 1;
                    be_column_3.BorderWidthTop = 1;
                    be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
            }
            #endregion
            doc.Add(behavioural_profile);

            return;
        }
        #endregion
        // sweep - down
        #region sweep-down
        if ((DiffB < 10 && DiffB >= -1) && (DiffR < 10 && DiffR >= -1) && (DiffBl > -11 && DiffBl <= -1) && (DiffG > -11 && DiffG <= -1))
        {
            if ((DiffB < DiffR) && (DiffBl - DiffG > 4))
            {
                //doc.Add(new Paragraph("\t Communication is the key factor in you. You can communicate easily and fluently with others. You are often referred to as 'Communicator' profiles – you are confident, outgoing and gregarious individual who value contact with other people and the development of positive relations.\n"));
                //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You are best in Connecting to People. You are open to others and confident in your own social abilities, and interact positively in almost any situation. Your strong and evident confidence, coupled with your genuine interest in the ideas and especially feelings of other people, are often found charming by those around you. Your actions will often be designed to improve and extend relations, even to the extent of alienating people who are not part of your circle. \n"));
                //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You distinct abilities lie in the area of communication and relationship building. You are not only a strong communicator, possessing the assertiveness to drive home a point of view, but also have the intuitive qualities to understand others' perspectives and adapt others to meet new situations. \n"));
                //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You have a natural talent to connect to people. You have no inhibitions in getting connected to different type of people. This also stems from the fact that you have an inner confidence to build a long term relation. Specifically, you need to feel accepted by those around you, and react badly if you perceive yourselves to be rejected or disliked. Praise and approval make a strong impression on you, and you will sometimes go to great lengths to achieve this kind of reaction from other people.Especially important to you are the opinions and reactions of your particularly close circle. You believe in creating a positive environment that enhances the well being of people around you.\n"));
                //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t The sub--traits of this type are Friendliness , Enthusiasm and Self--confidence"));

                #region getting_Sweep-Down_from_DB
                strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_general_faculty FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Sweep-Down-Profile-analysis'";
                DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
                //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
                dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
                int length = dis.Length;
                for (int i = 0; i < length; i++)
                {
                    if (i % 2 == 0)
                    {
                        //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                        //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                        //p.SetAlignment("justify");
                        //doc.Add(p);
                        Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                        p.Add(limage);
                        Cell be_column_3 = new Cell(p);
                        be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        //be_column_3.BorderWidthLeft = 1;
                        //be_column_3.BorderWidthRight = 1;
                        //be_column_3.BorderWidthTop = 1;
                        //be_column_3.BorderWidthBottom = 1;
                        behavioural_profile.AddCell(be_column_3);
                    }
                    else
                    {
                        //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                        Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                        p.Add(limage);
                        Cell be_column_3 = new Cell(p);
                        be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        be_column_3.BorderWidthLeft = 1;
                        be_column_3.BorderWidthRight = 1;
                        be_column_3.BorderWidthTop = 1;
                        be_column_3.BorderWidthBottom = 1;
                        behavioural_profile.AddCell(be_column_3);
                    }
                }
                #endregion
                doc.Add(behavioural_profile);


                return;
            }
        }
        #endregion
        // 8-5 Pattern
        #region 8-5_Pattern
        if ((DiffB >= -4 && DiffB <= 2) && (DiffR >= -4 && DiffR <= 2) && (DiffBl >= -4 && DiffBl <= 2) && (DiffG >= -4 && DiffG <= 2))
        {
            if ((DiffB >= -4 || DiffB <= -1) && (DiffR >= -1 && DiffR <= 2) && (DiffBl <= -1 && DiffBl >= -4) && (DiffG >= -1 && DiffG <= 2))
            {
                //doc.Add(new Paragraph("\t Communication is the key factor in you. You can communicate easily and fluently with others. You are often referred to as 'Communicator' profiles – you are confident, outgoing and gregarious individual who value contact with other people and the development of positive relations.\n"));
                //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You are best in Connecting to People. You are open to others and confident in your own social abilities, and interact positively in almost any situation. Your strong and evident confidence, coupled with your genuine interest in the ideas and especially feelings of other people, are often found charming by those around you. Your actions will often be designed to improve and extend relations, even to the extent of alienating people who are not part of your circle.\n "));
                //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You distinct abilities lie in the area of communication and relationship building. You are not only a strong communicator, possessing the assertiveness to drive home a point of view, but also have the intuitive qualities to understand others' perspectives and adapt others to meet new situations. \n"));
                //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You have a natural talent to connect to people. You have no inhibitions in getting connected to different type of people. This also stems from the fact that you have an inner confidence to build a long term relation. Specifically, you need to feel accepted by those around you, and react badly if you perceive yourselves to be rejected or disliked. Praise and approval make a strong impression on you, and you will sometimes go to great lengths to achieve this kind of reaction from other people.Especially important to you are the opinions and reactions of your particularly close circle. You believe in creating a positive environment that enhances the well being of people around you.\n"));
                //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t The sub--traits of this type are Friendliness , Enthusiasm and Self--confidence"));

                #region getting_Sweep-Down_from_DB
                strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_general_faculty FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = '8-5_Pattern-Profile-analysis'";
                DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
                //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
                dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
                int length = dis.Length;
                for (int i = 0; i < length; i++)
                {
                    if (i % 2 == 0)
                    {
                        //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                        //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                        //p.SetAlignment("justify");
                        //doc.Add(p);
                        Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                        p.Add(limage);
                        Cell be_column_3 = new Cell(p);
                        be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        //be_column_3.BorderWidthLeft = 1;
                        //be_column_3.BorderWidthRight = 1;
                        //be_column_3.BorderWidthTop = 1;
                        //be_column_3.BorderWidthBottom = 1;
                        behavioural_profile.AddCell(be_column_3);
                    }
                    else
                    {
                        //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                        Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                        p.Add(limage);
                        Cell be_column_3 = new Cell(p);
                        be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        be_column_3.BorderWidthLeft = 1;
                        be_column_3.BorderWidthRight = 1;
                        be_column_3.BorderWidthTop = 1;
                        be_column_3.BorderWidthBottom = 1;
                        behavioural_profile.AddCell(be_column_3);
                    }
                }
                #endregion
                doc.Add(behavioural_profile);

                return;
            }
        }
        #endregion

        // D=C (from here to Very-High D all discription is similer.) 
        #region D=C
        if (DiffB > -1 && DiffR <= -1 && DiffBl <= -1 && DiffG > -1)
        {
            if (DiffB == DiffR)
            {
                //doc.Add(new Paragraph("\t You are often described as the 'Autocrat', and for good reason. You display a high level of control and assertiveness, and remarkably domineering, and even overbearing at times.You have a very strong need to achieve, and because of this you are often ambitious and competitive, striving aggressively to achieve your goals. You are dynamic and adaptable, and show decisiveness and a capacity for direct leadership.\n "));
                //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You tend to stress on achievement and success significantly, which affects your relations with other people. In extreme cases, you seem to treat other people simply as a means to an end, or a way of achieving your personal goals. Since you are not emotional, you tend not to place great importance on feelings, either your own or others'. The competitive nature in you leads to see challenges and opposition everywhere, and others sometimes find it difficult to break through this naturally suspicious, skeptical shell of yours.\n"));
                //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You have qualities of command and leadership. It should be noted, however, that these abilities are based on your direct, demanding nature, and are more suited to structured, formal situations than those where close ties are required. You are a competent and confident decision-maker, able to reach a conclusion quickly from minimal information and act accordingly. You are well suited to situations that others would find unbearably stressful, as your desire for challenge and your enjoyment of success against the odds makes you unusually proficient in dealing with such situations. \n"));
                //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You like to feel that you are in control, and seek opportunities to reinforce and emphasize your personal power. You measure your progress in life by your achievements and successes, and feel the need to maintain a sense of personal momentum. Being impatient and forthright, you intensely dislike situations that you are unable to directly resolve for yourselves - dependence on other people is anathema to you. You find these kinds of situation extremely frustrating, and can be driven to wild, impulsive actions in an attempt to relieve the pressure.\n"));
                //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t The sub-traits of this type are Efficiency, Self-motivation and Independence."));

                #region getting_D=C_from_DB
                strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_general_faculty FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'D=C-Profile-analysis'";
                DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
                //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
                dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
                int length = dis.Length;
                for (int i = 0; i < length; i++)
                {
                    if (i % 2 == 0)
                    {
                        //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                        //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                        //p.SetAlignment("justify");
                        //doc.Add(p);
                        Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                        p.Add(limage);
                        Cell be_column_3 = new Cell(p);
                        be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        //be_column_3.BorderWidthLeft = 1;
                        //be_column_3.BorderWidthRight = 1;
                        //be_column_3.BorderWidthTop = 1;
                        //be_column_3.BorderWidthBottom = 1;
                        behavioural_profile.AddCell(be_column_3);
                    }
                    else
                    {
                        //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                        Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                        p.Add(limage);
                        Cell be_column_3 = new Cell(p);
                        be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                        be_column_3.BorderWidthLeft = 1;
                        be_column_3.BorderWidthRight = 1;
                        be_column_3.BorderWidthTop = 1;
                        be_column_3.BorderWidthBottom = 1;
                        behavioural_profile.AddCell(be_column_3);
                    }
                }
                #endregion
                doc.Add(behavioural_profile);

                return;
            }
        }
        #endregion
        // Overshift
        #region Overshift
        if (DiffB > -1 && DiffR > -1 && DiffBl > -1 && DiffG > -1)
        {
            //doc.Add(new Paragraph("\t You are often described as the 'Autocrat', and for good reason. You display a high level of control and assertiveness, and remarkably domineering, and even overbearing at times.You have a very strong need to achieve, and because of this you are often ambitious and competitive, striving aggressively to achieve your goals. You are dynamic and adaptable, and show decisiveness and a capacity for direct leadership.\n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You tend to stress on achievement and success significantly, which affects your relations with other people. In extreme cases, you seem to treat other people simply as a means to an end, or a way of achieving your personal goals. Since you are not emotional, you tend not to place great importance on feelings, either your own or others'. The competitive nature in you leads to see challenges and opposition everywhere, and others sometimes find it difficult to break through this naturally suspicious, skeptical shell of yours.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have qualities of command and leadership. It should be noted, however, that these abilities are based on your direct, demanding nature, and are more suited to structured, formal situations than those where close ties are required. You are a competent and confident decision-maker, able to reach a conclusion quickly from minimal information and act accordingly. You are well suited to situations that others would find unbearably stressful, as your desire for challenge and your enjoyment of success against the odds makes you unusually proficient in dealing with such situations.\n "));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You like to feel that you are in control, and seek opportunities to reinforce and emphasize your personal power. You measure your progress in life by your achievements and successes, and feel the need to maintain a sense of personal momentum. Being impatient and forthright, you intensely dislike situations that you are unable to directly resolve for yourselves - dependence on other people is anathema to you. You find these kinds of situation extremely frustrating, and can be driven to wild, impulsive actions in an attempt to relieve the pressure.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits of this type are Efficiency, Self-motivation and Independence."));

            #region getting_Overshift_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_general_faculty FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Overshift-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    be_column_3.BorderWidthLeft = 1;
                    be_column_3.BorderWidthRight = 1;
                    be_column_3.BorderWidthTop = 1;
                    be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
            }
            #endregion
            doc.Add(behavioural_profile);

            return;
        }
        #endregion
        // Undershift
        #region Undershift
        if (DiffB <= -1 && DiffR <= -1 && DiffBl <= -1 && DiffG <= -1)
        {
            //doc.Add(new Paragraph("\t You are often described as the 'Autocrat', and for good reason. You display a high level of control and assertiveness, and remarkably domineering, and even overbearing at times.You have a very strong need to achieve, and because of this you are often ambitious and competitive, striving aggressively to achieve your goals. You are dynamic and adaptable, and show decisiveness and a capacity for direct leadership.\n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You tend to stress on achievement and success significantly, which affects your relations with other people. In extreme cases, you seem to treat other people simply as a means to an end, or a way of achieving your personal goals. Since you are not emotional, you tend not to place great importance on feelings, either your own or others'. The competitive nature in you leads to see challenges and opposition everywhere, and others sometimes find it difficult to break through this naturally suspicious, skeptical shell of yours.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have qualities of command and leadership. It should be noted, however, that these abilities are based on your direct, demanding nature, and are more suited to structured, formal situations than those where close ties are required. You are a competent and confident decision-maker, able to reach a conclusion quickly from minimal information and act accordingly. You are well suited to situations that others would find unbearably stressful, as your desire for challenge and your enjoyment of success against the odds makes you unusually proficient in dealing with such situations.\n "));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You like to feel that you are in control, and seek opportunities to reinforce and emphasize your personal power. You measure your progress in life by your achievements and successes, and feel the need to maintain a sense of personal momentum. Being impatient and forthright, you intensely dislike situations that you are unable to directly resolve for yourselves - dependence on other people is anathema to you. You find these kinds of situation extremely frustrating, and can be driven to wild, impulsive actions in an attempt to relieve the pressure.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits of this type are Efficiency, Self-motivation and Independence."));

            #region getting_Undershift_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_general_faculty FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Undershift-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    be_column_3.BorderWidthLeft = 1;
                    be_column_3.BorderWidthRight = 1;
                    be_column_3.BorderWidthTop = 1;
                    be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
            }
            #endregion
            doc.Add(behavioural_profile);


            return;
        }
        #endregion
        // in grey zone
        #region Very-High D
        if (DiffB > 10)
        {
            //doc.Add(new Paragraph("\t You are often described as the 'Autocrat', and for good reason. You display a high level of control and assertiveness, and remarkably domineering, and even overbearing at times.You have a very strong need to achieve, and because of this you are often ambitious and competitive, striving aggressively to achieve your goals. You are dynamic and adaptable, and show decisiveness and a capacity for direct leadership.\n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You tend to stress on achievement and success significantly, which affects your relations with other people. In extreme cases, you seem to treat other people simply as a means to an end, or a way of achieving your personal goals. Since you are not emotional, you tend not to place great importance on feelings, either your own or others'. The competitive nature in you leads to see challenges and opposition everywhere, and others sometimes find it difficult to break through this naturally suspicious, skeptical shell of yours.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have qualities of command and leadership. It should be noted, however, that these abilities are based on your direct, demanding nature, and are more suited to structured, formal situations than those where close ties are required. You are a competent and confident decision-maker, able to reach a conclusion quickly from minimal information and act accordingly. You are well suited to situations that others would find unbearably stressful, as your desire for challenge and your enjoyment of success against the odds makes you unusually proficient in dealing with such situations.\n "));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You like to feel that you are in control, and seek opportunities to reinforce and emphasize your personal power. You measure your progress in life by your achievements and successes, and feel the need to maintain a sense of personal momentum. Being impatient and forthright, you intensely dislike situations that you are unable to directly resolve for yourselves - dependence on other people is anathema to you. You find these kinds of situation extremely frustrating, and can be driven to wild, impulsive actions in an attempt to relieve the pressure.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits of this type are Efficiency, Self-motivation and Independence."));

            #region getting_Very-High_D_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_general_faculty FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Very-High_D-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    be_column_3.BorderWidthLeft = 1;
                    be_column_3.BorderWidthRight = 1;
                    be_column_3.BorderWidthTop = 1;
                    be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
            }
            #endregion
            doc.Add(behavioural_profile);

            return;
        }
        #endregion

        //(discription is quite similer to Basic Profile)
        #region Very-High I
        if (DiffR > 10)
        {
            //doc.Add(new Paragraph("\t Communication is the key factor in you. You can communicate easily and fluently with others. You are often referred to as 'Communicator' profiles – you are confident, outgoing and gregarious individual who value contact with other people and the development of positive relations.\n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are best in Connecting to People. You are open to others and confident in your own social abilities, and interact positively in almost any situation. Your strong and evident confidence, coupled with your genuine interest in the ideas and especially feelings of other people, are often found charming by those around you. Your actions will often be designed to improve and extend relations, even to the extent of alienating people who are not part of your circle.\n "));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You distinct abilities lie in the area of communication and relationship building. You are not only a strong communicator, possessing the assertiveness to drive home a point of view, but also have the intuitive qualities to understand others' perspectives and adapt others to meet new situations.\n "));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have a natural talent to connect to people. You have no inhibitions in getting connected to different type of people. This also stems from the fact that you have an inner confidence to build a long term relation. Specifically, you need to feel accepted by those around you, and react badly if you perceive yourselves to be rejected or disliked. Praise and approval make a strong impression on you, and you will sometimes go to great lengths to achieve this kind of reaction from other people.Especially important to you are the opinions and reactions of your particularly close circle. You believe in creating a positive environment that enhances the well being of people around you.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub--traits of this type are Friendliness , Enthusiasm and Self--confidence"));

            #region getting_Very-High_I_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_general_faculty FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Very-High_I-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    be_column_3.BorderWidthLeft = 1;
                    be_column_3.BorderWidthRight = 1;
                    be_column_3.BorderWidthTop = 1;
                    be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
            }
            #endregion
            doc.Add(behavioural_profile);

            return;
        }
        #endregion

        //(discription is independent.)
        #region Very-High S
        if (DiffBl > 10)
        {
            //doc.Add(new Paragraph("\t You show high degree of patience, calmness and gentle openness. You are generally amiable and warm-hearted, being sympathetic to others' points of view, and valuing positive interaction with others. You are not outgoing by nature; however, rely on other, more assertive, people to take the lead.\n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t As in your general lifestyle, you initiate relationships of any kind – yours solid, dependable outlook makes you far more suited to the maintenance of interpersonal relations than making initial contact. For this reason, your circle of friends and close acquaintances is often small but tightly-knit.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are simply 'supportive'. You are dependable and loyal, this combines with an emotional literacy to make you particularly effective listeners and counselors. You are also unusually persistent in approach, having the patience and restraint to work steadily at a task until it is achieved. This makes you unusually capable of dealing with laborious tasks that many other styles would simply not have the patience to complete.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Patience is the root source of motivation in you. You need to feel that you have the support of those around you and, more importantly, time to adapt to new situations. You have an inherent dislike of change, and will prefer to maintain the status quo whenever possible; sudden alterations in your circumstances can be very difficult for you to deal with. Once embarked on a task, you will wish to concentrate closely on it and see it through. Interruptions and distractions of any kind can be particularly demotivating in these situations. \n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits of this type are Patience , Thoughtfulness and Persistence."));

            #region getting_Very-High_S_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_general_faculty FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Very-High_S-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    be_column_3.BorderWidthLeft = 1;
                    be_column_3.BorderWidthRight = 1;
                    be_column_3.BorderWidthTop = 1;
                    be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
            }
            #endregion
            doc.Add(behavioural_profile);

            return;
        }
        #endregion
        //(discription is independent.)
        #region Very-High C
        if (DiffG > 10)
        {
            //doc.Add(new Paragraph("\t Passive by nature, often reticent and aloof, you often tend to give an impression of coldness or disinterest. Much of this impassive style stems from your controlled nature, however, which makes you reluctant to reveal information about yourselves or your ideas unless absolutely necessary. In fact, you are often ambitious and have lofty goals, but your innate lack of assertiveness and unwillingness to become involved in confrontational situations makes it difficult for you to achieve these goals directly. Instead, you will tend to use existing structures and rules to accomplish your aims. You tend to follow rules, authority and logical argument to influence the actions of others. \n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have much strength, but the ability to relate easily to other people is rarely in you. The combination of a passive social style with a certain innate suspiciousness makes it difficult for you to form or maintain close relationships, and this is especially true in a business sense. Your friendship or close acquaintances will normally be based on mutual interests or common aims, rather than emotional considerations. \n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are generally very self-reliant although this fact is often difficult to perceive. You have structured ways of thinking, and often show particular strengths when it comes to organizing facts or working with precise detail or sophisticated systems. You have a quick-thinking individual who will often have useful input, but your natural reticence means that you will rarely offer an opinion unless asked directly for your thoughts.\n "));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You need to feel completely sure of your position, and of others' expectations of you, before you are able to proceed. Because of this, you have a very strong aversion to risk, and will rarely take any action unless you can feel absolutely sure about its consequences.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits of this type are Cooperativeness, Accuracy and Sensitivity. "));

            #region getting_Very-High_C_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_general_faculty FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Very-High_C-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    be_column_3.BorderWidthLeft = 1;
                    be_column_3.BorderWidthRight = 1;
                    be_column_3.BorderWidthTop = 1;
                    be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
            }
            #endregion
            doc.Add(behavioural_profile);

            return;
        }
        #endregion

        //doc.Add(behavioural_profile);
    } 
    private void profile_conditions_pdf_4()
    {
        iTextSharp.text.Image endblock = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/endblock.png"));
        endblock.ScaleToFit(5f, 5f);
        Chunk imageChunk1 = new Chunk(endblock, 0, 0);
        Phrase limage = new Phrase();
        limage.Add(imageChunk1);


        iTextSharp.text.Table behavioural_profile = new iTextSharp.text.Table(1);
        behavioural_profile.DefaultCellBorder = 0;
        behavioural_profile.Border = 0;
        //behavioural_profile.Padding = 2;
        //behavioural_profile.Spacing = 5;
        //behavioural_profile.BorderWidthLeft = 0;
        //behavioural_profile.BorderWidthRight = 0;
        //behavioural_profile.BorderWidthTop = 0;
        //behavioural_profile.BorderWidthBottom = 0;
        behavioural_profile.Width = 100;

        //Anchor Profile = new Anchor("Profile Analysis\n", FontFactory.GetFont(FontFactory.HELVETICA, 14, Font.BOLD));
        //Profile.Name = "targetYourBehaviouralProfile";
        //Paragraph pa = new Paragraph("");
        //pa.Add(Profile);

        //Paragraph pa = new Paragraph("\nProfile Analysis\n", FontFactory.GetFont(FontFactory.HELVETICA, 16, Font.BOLD));
        //pa.SetAlignment("center");
        //doc.Add(pa);

        Paragraph pdq_1 = new Paragraph("What Motivates You ?", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.BOLD));
        pdq_1.SetAlignment("left");
        //doc.Add(pdq_1);

        Cell be_column_1 = new Cell(pdq_1);
        //be_column_1.HorizontalAlignment = Element.ALIGN_LEFT;
        //be_column_1.VerticalAlignment = Element.ALIGN_CENTER;
        //be_column_1.BackgroundColor = new Color(204, 229, 255);
        //be_column_1.BorderWidthLeft = 1;
        //be_column_1.BorderWidthRight = 1;
        //be_column_1.BorderWidthTop = 1;
        //be_column_1.BorderWidthBottom = 1;
        behavioural_profile.AddCell(be_column_1);

        //Cell be_column_2 = new Cell("");
        //be_column_2.HorizontalAlignment = Element.ALIGN_LEFT;
        //be_column_2.BorderWidthLeft = 0;
        //be_column_2.BorderWidthRight = 0;
        //be_column_2.BorderWidthTop = 0;
        //be_column_2.BorderWidthBottom = 0;
        //behavioural_profile.AddCell(be_column_2);

        // Different Patterns for Graph 3 
        //doc.Add(new Paragraph("\n Profile Analysis", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
        // 1. D is greater than all and in positive region
        #region High-D
        if ((DiffB <= 10 & DiffB > -1) && (DiffR <= -1 && DiffBl <= -1 && DiffG <= -1))
        {
            //doc.Add(new Paragraph("\t Direct, decisive, problem solver, risk taker and self starter are the few characteristics that describe you as a person. For these basic characteristics, you are often portrayed as an 'Autocrat Manager', who is great in crisis.  You are extremely ambitious and that makes you a highly goal oriented person. You are straightforward, dominating and forceful and overbearing at times. You are a bottom-line organizer, have the knack to challenge the status quo and innovative by nature. You basically possess the leadership skills in you.\n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are not very sociable type. You focus on achievement and success and believe in individual accomplishments, and hence not a team player. You have an argumentative attitude and tend to overstep authority. Sometimes you tend to maintain relations with people around you to just to fulfill your personal goals. You relate to people who are submissive and only till your goal is met. You neither care people’s emotions or feelings and nor care your own. You are not very friendlier or approachable. Others sometimes find it difficult to break through this naturally suspicious, skeptical shell of yours.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are self-reliant, innovative in getting results, and maintain focus on goals. You have the ability to overcome obstacles, provide direction and leadership and offer innovative and progressive systems and ideas. You can push group toward decisions and willing to speak out. Generally optimistic, you welcome challenges without fear. You accept risks and have the ability to see the big picture. You can handle multiple projects and function well with heavy work loads and cope well in stressful situations. You like to be in charge and solve problems. You set lofty goals and sometimes attempt too much at once.  You lose focus on problems sometimes.  While analyzing information, you ignore potential risks and do not weigh the pros and cons and do not consider others' opinions also.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You love challenge and autonomy. You need freedom and you want prestige. You need opportunity for advancement and like projects that produce tangible results.  You prefer personal evaluation based on results, and not methods. You are motivated by new challenges, power and authority to take risks and make decisions, freedom from routine and mundane tasks and changing environments in which to work and play.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Efficiency, Self-motivation and Independence."));

            #region getting_high-D_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_motivating_aspect FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-D-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);

                    //doc.Add(p);
                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                    // doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 2. I is Greater than all and in positive region
        #region High-I
        if ((DiffB <= -1) && (DiffR <= 10 && DiffR > -1) && (DiffBl <= -1) && (DiffG <= -1))
        {
            //doc.Add(new Paragraph("\t Enthusiastic, trusting, optimistic, persuasive, talkative, impulsive and emotional are the characteristics that describe you as a person. Communication is the key factor in you, where you communicate easily with the people around you and have a friendly, influential and persuasive style while dealing with them.\n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have a natural talent to connect to people. You are extremely networked and connected to every person heart to heart.  You build a favorable, friendly environment around you. You have a genuine interest in the ideas and feelings of other people. Your enthusiasm and charming nature along with your high level of confidence create a positive aura around you. You are open to others and confident in your own social abilities, and interact positively in almost any situation. You have the ability to motivate people in a team environment. You create an influencing circle or group, where your actions revolve around building and maintaining relationships, sometimes, even to the extent of alienating people who are not part of the circle.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Your distinct abilities lie in the area of communication and relationship building. You are not only a strong communicator, but also you have the ability to verbalize about ideas, people and their intuition. You can express ideas well and perceive the nuances and adapt well in any situations. You make a good spokesperson. In a team environment, you are a great encourager, creative problem solver, peace maker and a good conflict negotiator. You respond well to the unexpected. You create an atmosphere of well being, provide direction and leadership, work well with other people, will offer opinions, and have a positive attitude. You accomplish goals through people, have good sense of humor and strong in brainstorming sessions. On a weaker side, you are more concerned with popularity than tangible results. You are inattentive to detail, sometimes overuse gestures and facial expression and you tend to listen only when it's convenient.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\tYou are motivated by flattery, praise, popularity, and acceptance. A friendly environment, freedom from many rules and regulations, a forum to express ideas, group activities in professional and social environments make you feel happy and contented. Having other people available to handle details further gives you a boost.  Social esteem and acceptance, and recognition for abilities, praise and approval make a strong impression on you. Further, opportunity to motivate and influence others and positive working conditions gives you satisfaction. Specifically, you need to feel accepted by those around you, and you are bothered about people’s opinion about you more than anything else. You tend to get offensive if you find yourselves rejected or disliked.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Friendliness, Enthusiasm and Self-confidence."));

            #region getting_high-I_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_motivating_aspect FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-I-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 3. S is Greater than all and in positive region
        #region High-S
        if ((DiffB <= -1) && (DiffR <= -1) && (DiffBl <= 10 && DiffBl > -1) && (DiffG <= -1))
        {
            //doc.Add(new Paragraph("\tGood listener, team player, possessive, steady, predictable, understanding and friendly is the quality that characterizes you as a person. You show high degree of patience, calmness and gentle openness, and sympathetic to others' points of view, and value positive interaction with others.  You are generally amiable and warm-hearted but you are not outgoing by nature and tend to depend on more assertive type of people to take the lead. You are relaxed type of person, happy go lucky type, where you don’t want to rock the boat. You are easily adaptable, having a ‘flow with the wind’ kind of personality. \n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are basically reliable and dependable. You are a loyal team worker. You are compliant towards authority. You are patient and empathetic listener and that helps you to reconcile conflicts. You are generally not that type who will go and build relations upfront, but you are good in maintaining and sustaining a fruitful interpersonal relation. For this reason you are often found with a small, closely knit friend circle. In team environment you are ‘instinctive relater’, a participative manager, who accomplishes goals through personal relationships.  You have the ability to make others feel like they belong.  You are focused and intuitive about people and relationships. You buy into team goals and can identify strongly with the team.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are simply 'supportive'. You demonstrate dependable, sincere and loyal type of personality. You are also extremely persistent in approach, having the patience and restraint to work steadily at a task until it is achieved. This makes you unusually capable of dealing with laborious repetitive tasks that others might find hard to accomplish.  You can see an easier way of doing things. You are usually full of common sense. You are a thinker; focus on one thing at a time. You provide stability to any situation, where you are realistic, practical and even-tempered. However, while analyzing information, you are openly agreeable but inwardly unyielding. You tend to internalize your concerns and doubts. You tend to hesitate to share feedback during presentation. You normally resist change and take a long time to adjust to change. You hold a grudge and sensitive to criticism. Sometimes you have difficulty establishing priorities.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are motivated by recognition for loyalty and dependability. Safety and security with no sudden changes in procedure or lifestyle stimulate you. You prefer to maintain the status quo whenever possible. You need time to adjust to changes. You prefer activities that can be started and finished. Interruptions or discontinuity or changes unsettles you. Further you prefer limited territory of responsibility. You love routine and repeated work pattern. Patience is the root source of motivation in you. You need to feel that you have the support, co-operation and sincere appreciation of those around you. You like team atmosphere. You dislike conflicts and arguments.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Patience, Thoughtfulness and Persistence."));

            #region getting_high-S_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_motivating_aspect FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-S-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());

                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);

                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 4. C is Greater than all and in positive region
        #region High-C
        if ((DiffB <= -1) && (DiffR <= -1) && (DiffBl <= -1) && (DiffG <= 10 && DiffG > -1))
        {

            //doc.Add(new Paragraph("\t Accurate, analytical, conscientious, careful, fact-finder, precise, high standards and systematic are the characteristics that describe you as a person. You are normally passive by nature, which stems from your controlled behaviour and that give the impression of you being distant, reserved, aloof and disinterested. You generally don’t reveal information, or your feelings and emotions, only share when utmost necessary.  You are the 'anchor of reality' and even-tempered. Though you are highly ambitious, you are not that assertive to achieve it always. Rather you attain your goals by remaining within a certain framework and set rules. You are a calculated risk taker. You offer conservative approaches and emphasize quality and you are thorough to all activities. You are also diplomatic.\n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are very formal in relationships, the ability to relate easily to other people is generally lacking in you. You find difficult to adjust to informal atmosphere. Being suspicious and critical, you generally don’t have close relationships, particularly in business sense. Your friendships are not based on emotions but instead common interest or similarities in ideas and values helps to build that bond.  You prefer not to verbalize feelings; Will give in rather than argue.  You strive for a logical, consistent environment. You tend to control the details. You evaluate the team's progress, ask important questions and maintain focus on tasks and analyze obstacles. You will share risks and responsibilities, work systematically and will strive for consensus.  You tend to follow rules, authority and logical argument to influence the actions of others\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are an instinctive organizer, a 'Do it yourself' manager who create and maintain systems. You think logically. You are usually very self-reliant although this fact is often difficult to perceive. You have structured ways of thinking, and often show particular strengths when it comes to organizing facts or working with precise detail or sophisticated systems. You are a quick-thinker and can provide valuable inputs, but only share it when asked for. You tend to define situations, gather, criticize and test information. While analyzing information, you become overly cautious and conservative; Get too bogged down in details. You tend to avoid or postpone decisions, especially if you perceive a risk; However, you are an effective trouble shooter.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Standards of high quality, limited social interaction, and detailed tasks, logical organization of information and clear-cut boundaries for actions/relationships motivates you. Autonomy and independence, controlled work environment, reassurance, precise expectations and goals, exact job descriptions, planned changes inspire you. You need to feel completely sure of your position, and of others' expectations of you, before you are able to proceed. Because of this, you have a very strong aversion to risk, and will rarely take any action unless you can feel absolutely sure about its consequences. You feel comfortable in environment where tasks and projects can be followed through to completion. You prefer specialized or technical tasks, where there exist practical work procedures and routines; and you have instructions and reassurance that you are doing what is expected of you and where there are few conflicts and arguments.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Cooperativeness, Accuracy and Sensitivity."));
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            #region getting_high-C_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_motivating_aspect FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-C-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);

            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);

                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);

                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 5. D is Lower than all and in negative region
        #region Low-D
        if ((DiffB <= -1) && (DiffR <= 10 && DiffR > -1) && (DiffBl <= 10 && DiffBl > -1) && (DiffG <= 10 && DiffG > -1))
        {
            //doc.Add(new Paragraph("\t You are generally conservative, low keyed, agreeable and undemanding. You are a good team worker and ready to accept others' ideas. You are not competitive in nature, not that ambitious type, and you tend to avoid conflicting situations. You like to develop warm and friendly relations with people around you. You want to do more research before committing to a decision. You are cooperative, mild, cautious and peaceful and hence, will try to achieve your goals based on your convincing and coherent communication and friendly relations.\n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have adequate communicating skills and have relatively good networking skills. But you are not particularly assertive, and hence, in confrontational or pressurized situations you tend to falter. Being co-operative, patient and good listener, you are a team person, and able to work for the group rather than focusing on your own needs.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are an active listener. You are attentive to other team members' ideas until everyone reaches a consensus. You adopt a great appreciation for the opinions, feelings, and desires of others. You are friendly, outgoing and approachable. Further, you put energy into personal relationships and show your support for other team members and that make you strong in relationship management.\n "));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Positive and friendly interactions motivate you. Since you are not ambitious person, goals or challenges don’t excite you. Simple happiness, positive environment, warmth, and friendly terms with people give you immense satisfaction.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Friendliness, Patience and Cooperativeness."));

            #region getting_Low-D_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_motivating_aspect FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Low-D-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);

                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);

                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 6. I is lower than all and in negative region
        #region Low-I
        if ((DiffB <= 10 && DiffB > -1) && (DiffR <= -1) && (DiffBl <= 10 && DiffBl > -1) && (DiffG <= 10 && DiffG > -1))
        {
            //doc.Add(new Paragraph("\t The striking feature in you is you are shy and introvert, and you go by facts and data and not by feelings. In any typical situation or event you rely more on logic and rationale than on emotions. You are basically reflective, factual, calculative, logical, and critical. At the same time very suspicious and skeptical and tend to keep your thoughts, ideas within yourselves and will share only when asked for. You are basically relaxed and calm but in hostile or demanding situations, your assertiveness and dominance often get prominence. \n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are often direct and assertive but you seldom have interest on personal matters. You are rarely communicative and interact and communicate only when needed purely on a practical basis, rather than on a personal level. You have a passive approach. You are generally a good listener and you respond to comments and ideas when sought for rather than put forward your views voluntarily.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You believe in accuracy and efficiency. But being highly analytical and cautious, you weigh the pros and cons in depth and often hold back from action, and prefer not to behave impulsively and land up into adverse situations. Though you are result oriented, you tend to take risk only when utmost necessary. You value result and productivity. Your approach to work or life is systematic and factual and you focus on details and facts. You are also cautious in communication where you reveal only when necessary and that to in a succinct manner.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Structured and risk free environment motivates you. Achieving results and getting opportunity to work systematically with complete understanding of the subject encourages you. Getting adequate time to cope up with changes helps you to perform better.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Efficiency, Thoughtfulness and Accuracy."));

            #region getting_Low-I_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_motivating_aspect FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Low-I-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);

                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);

                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 7. S is lower than all and in negative region
        #region Low-S
        if ((DiffB <= 10 && DiffB > -1) && (DiffR <= 10 && DiffR > -1) && (DiffBl <= -1) && (DiffG <= 10 && DiffG > -1))
        {
            //doc.Add(new Paragraph("\t Speed is the crucial feature in you. You have high sense of urgency and fast pace. You are basically impatient and restless in nature and so possess high speed of response. Further, you are ambitious and assertive but at the same time sensitive in your approach. Your ambitions do get a primary focus  but if need be you definitely care for the people around you; Before accomplishing your goal, you tend to make sure that your team’s need or the need of the organization is taken care off. In informal situations, you often display good social skills.\n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are extremely aware of your environment and take notice of the changes that takes place within it. You are sharp to catch the things that are unspoken. In informal situation you display enthusiastic and open approach where else in structured or formal environment, your assertive and controlled behaviour come to the fore. \n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Depending on the situation you have the ability to modulate your behaviour which helps you to adapt to the situation in an effective way. In friendly environment you are enthusiastic and open and in formal settings, you get direct, blunt and straightforward. You also have the ability to deal with confrontation and stress effectively and you tend to be a quick thinker.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Personal achievement and success motivates you but at the same time your sensitivity makes you lean towards people, whereby their acceptance and approval gives you a kick.\n "));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Self--motivation, Enthusiasm and Sensitivity."));

            #region getting_Low-S_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_motivating_aspect FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Low-S-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);

                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);

                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 8. C is lower than all and in negative region
        #region Low-C
        if ((DiffB <= 10 && DiffB > -1) && (DiffR <= 10 && DiffR > -1) && (DiffBl <= 10 && DiffBl > -1) && (DiffG <= -1))
        {
            //doc.Add(new Paragraph("\t You have high sense of independence, which characterizes you. Your ambitions in life are unambiguous and at the same time you possess a strong will power to fulfill these aspirations. You have unusual calmness and stability that gives you perseverance and determination to achieve your goals. You are socially motivated, but basically being independent in nature and having a strong sense of diligence and pushiness, your openness and friendly nature takes a backseat in tough and challenging situations. \n"));
            //doc.Add(new Paragraph("\nConnecting to people - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Being independent natured, you have a convincing and powerful style while dealing with people and you always strive to protect and defend your stance and often try to maintain your sense of identity. Further having high self confidence, social networking skill is good in you where you simply mingle deftly with other people or with strangers, and handle well in unusual situations.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are self-willed and stubborn, with strong social skills and strong sense of personal responsibility that helps you to take initiative and become a good facilitator. You are also unsystematic, arbitrary, and unconcerned with details. You being patient, tenacious, and assertive, you tend to weigh the pros and cons of any situation and then arrive at a concluding decision.\n "));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Achieving your goals and having a control over the situation motivates you. You value success and achievement a lot but at the same time, maintaining positive relationships are important to you also. Hence, under certain conflicting circumstances you won’t compromise on relationships to achieve your goal, but will see to it that things are resolved amicably before achieving the desired result.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Independence, Self-confidence and Persistence. "));

            #region getting_Low-C_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_motivating_aspect FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Low-C-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 9. D and I in positive region and I > D
        #region Positive-DI_I>D
        //if ((DiffB > -1 && DiffR > -1) && (DiffBl < -1 && DiffG < -1) && (DiffB < DiffR))
        if ((DiffB > -1 && DiffR > -1) && (DiffBl <= -1 && DiffG <= -1))
        {
            //doc.Add(new Paragraph("\t Demanding, assertive, optimistic, enthusiastic, magnetic, and ambitious are the characteristics that define your personality. You maintain focus on your goals and have determination to achieve it. You accept risks and welcome challenges without fear. You are forceful and direct, but at the same time you are emotional too.  \n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are assertive and confident and at the same time you have strong social skills. You have charisma and magnetism but you tend to show domineering and forceful behaviour particularly under stressed situation. These qualities help you deal with any situations directly and fearlessly. If the situation demands you are capable to adopt a confrontational position. Though you display authority and domination, you feel the need to be liked by the people around you on sincere terms, in addition of being respected by them. Independence and self confidence being your key characteristics, you have a powerful and persuasive approach to every circumstance.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are driven and forceful. You love challenges. Being self reliant, you are capable of taking personal responsibility for your actions. You are ambitious and love to take risk. You are self starter and problem solver.  You have the ability to think outside the box. You dislike routine and sometimes attempt too much at once. At work, your assertiveness and persuasion helps you to motivate others to accept your idea and concept. On a weaker side, you are not a good listener and tend to listen only when it is convenient or appropriate. You are inattentive to details.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            ////doc.Add(new Paragraph("\t Challenge is a keyword for you where you thrive in situations that others would find impossibly stressful and difficult to deal with. Your need for achievement means that you are willing to undertake almost any task to achieve success or recognition, and this driving, motivated approach lends them an urgency and energy rarely seen in others.You are the classic ideal for direct sales work. This type of occupation characterizes you for having the ability to think and react quickly, adapt to challenging situations and use powers of both assertiveness and persuasion to motivate others to accept your own proposals."));
            //doc.Add(new Paragraph("\t Challenge is the driving force for you. New challenges, changing environment along with freedom from mundane tasks and routine, motivates you. In challenging environment you tend to enjoy a lot where others would get stressed out in the similar situation. Success and achievement drives you all the time and the will to succeed gives you an unmatched energy and enthusiasm.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Self-motivation, Independence, Enthusiasm and Self-confidence."));

            #region getting_Positive-DI_I>D_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_motivating_aspect FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-DI-profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);

                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 10. D and S in positive region and D > S
        #region Positive-DS_D>S
        //if ((DiffB < 10 && DiffB > -1) && (DiffR < -1 && DiffG < -1) && (DiffBl < 10 && DiffBl > -1) && (DiffB > DiffBl))
        if ((DiffB <= 10 && DiffB > -1) && (DiffR <= -1 && DiffG <= -1) && (DiffBl <= 10 && DiffBl > -1))
        {
            //doc.Add(new Paragraph("\t You exhibit a paradoxical behaviour. By nature you are assertive and persuasive, yet at the same time you are relaxed and show stability in your approach. \n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You assume two different approaches while relating to people. If you are confident about the person or people around you or if you have developed a trust factor already, then you have a trusting and friendlier approach. Or else you remain skeptical and you hardly open up or reveal information or share your ideas with others.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t With regards to achieving your goals, you display a focused and practical approach and follow it till the end. Your patience, consistency and determination help you to tie all the loose ends and meet your targets within the stipulated timelines. You like to plan your work before commencing. Under steady situation you generally show caution and consideration but under pressure, you exhibit a demanding approach that helps you attain your goal effectively.\n "));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\tYou need control of own activities and at the same time you require long term affiliation and stable work environment. Consequently, you try to preserve the status quo and avoid sudden change using your authority.\n "));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are persistence, efficiency, independence and thoughtfulness. "));

            #region getting_Positive-DS_D>S_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_motivating_aspect FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-DS-profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 11. D and C in positive region and D < C
        #region Positive-DC_D>C
        //if ((DiffB < 10 && DiffB > -1) && (DiffR < -1) && (DiffBl < -1) && (DiffG < 10 && DiffG > -1) && (DiffB < DiffG))
        if ((DiffB <= 10 && DiffB > -1) && (DiffR <= -1) && (DiffBl <= -1) && (DiffG <= 10 && DiffG > -1))
        {
            //doc.Add(new Paragraph("\t You are basically a very reserved kind of person and show a controlled and organized approach in life.  You have a no nonsense approach. You believe in accuracy and always strive for perfection. You are direct in your manner and often voice your opinion strongly. You are basically an efficient person but you have very little interest in personal matters. You are analytical in nature and prefer not to take unwarranted risk.\n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t As you are basically reserved type of a person, you generally don’t communicate on a personal level. Further your communication remains to the point, crisp and normally remains on a practical level. Emotions generally don’t play a major role in your life. You are not that trusting kind who will share everything with people around you, rather your skepticism makes you keep the facts with yourself and you tend to share it only when utmost necessary. Further your need to be active all the time makes you impatient with those you can’t keep up with your pace.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Achievement and efficiency combined with perfection and precision drives you. Your assertive, self reliant and reserved nature helps you to attain your goals relentlessly and also makes you capable to take responsibility for your action. Though you like to see immediate results but you also believe in proper planning and execution. Further, you generally can manage stress and conflicts in life effectively.  The assertiveness and accuracy in everything sometimes goes to such an extreme that you expect the same from others and you also pinpoint their mistakes  if they have gone wrong somewhere, though for them it might be an insignificant or petty issue.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Achievement and success in your work inspires you. While driving towards success, you also complete the task with accuracy and precision and that gives you immense satisfaction. However, it is difficult to predict if anything motivates you at all, as you tend to remain bit aloof and distant and keep your emotions under control.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Efficiency, Self-motivation , Accuracy and Sensitivity "));

            #region getting_Positive-DC_D>C_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_motivating_aspect FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-DC-profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);

                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 12. I and S in positive region and I > S
        #region Positive-IS_I>S
        //if ((DiffB < -1 && DiffG < -1) && (DiffR < 10 && DiffR > -1) && (DiffBl < 10 && DiffBl > -1) && (DiffR > DiffBl))
        if ((DiffB <= -1 && DiffG <= -1) && (DiffR <= 10 && DiffR > -1) && (DiffBl <= 10 && DiffBl > -1))
        {
            //doc.Add(new Paragraph("\tYou are friendly, emotional and empathetic by nature. You are basically inclined to relationships, personal issues and networking. You generally don’t give importance to life’s hard realities. You like to get involved in people’s problems and tend to give a helping hand whenever possible. People like you become great counselors. \n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You can easily connect to people and mingle with them. You don’t get perturbed by strangers at all. Your confidence and socializing nature makes you receptive to people’s ideas and feelings. In any demanding situations, your persuasive approach helps you to adopt yourself well, but at the same time you also show patience while dealing with others. You generally develop a warm and friendly relation with those around you. You are genuinely interested in people.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have an open and outgoing personality. You have a strong ability to communicate and you possess a deep understanding of people and situation. This helps you to adapt to new situations effectively. You’re being influential and charming helps you to function effectively in any situations. But being less assertive, it sometimes gets difficult for you to deal in confrontational situations. You are persistent by nature and this helps you to finish the work that you have embarked on.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Positive and friendly atmosphere motivate you. You generally avoid conflicting situations.  You always like to be appreciated and respected by the people around you. You always have the need to be accepted by others and you desire that they are sympathetic and attentive towards you.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Friendliness, Self-confidence, Patience and Persistence."));

            #region getting_Positive-IS_I>S_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_motivating_aspect FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-IS-profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);

                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // 13. I and C in positive region and I > C
        #region Positive-IC_I>C
        //if ((DiffB <= -1 && DiffBl <= -1) && (DiffR < 10 && DiffR > -1) && (DiffG < 10 && DiffG > -1) && (DiffR > DiffG))
        if ((DiffB <= -1 && DiffBl <= -1) && (DiffR <= 10 && DiffR > -1) && (DiffG <= 10 && DiffG > -1))
        {

            //doc.Add(new Paragraph("\t You are basically open and friendly type of person with an organized and structured approach to situation and people around you. In relaxed and comfortable environment, you show enthusiasm and excitement whereas in more structured and formal situations, you are meticulous and display a process oriented approach. \n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t The way you relate to people actually depends on the situation that you are in. In casual environment you display confidence and openness and have an outgoing behaviour; but in formal situation where you are not so comfortable, you tend to be compliant along with your diminished confidence level. In such situations, you are generally not expressive about your feelings and emotions and rarely make direct criticism or enter into arguments; rather you are concerned about what others have opinion about you.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Depending on the situation, you can be friendly and charming or direct and forthright, or aloof and guarded. Basically you are a confident and enthusiastic person. You understand the nuances in any sort of communication which are generally overlooked or remain undetected by others. But sometimes you do get over-sensitive to other’s opinion, when actually nothing exists to react that way. Nevertheless, you tend to be a good team-worker. Your organized structured approach acts as strength in any group situations. Rather than focusing on your specific needs, you tend to focus on group’s needs.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Being friendly and charming, you have the need for others approval and interest, but being compliant, you generally don’t show this openly, rather you are more restrained.  A sense of sureness about your position especially in social terms motivates you. Your motivation stems from the achievement of personal ambition, social acceptance and social recognition, and certainty of your position.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Friendliness, Enthusiasm, Co-cooperativeness and Sensitivity."));

            #region getting_Positive-IC_I>C_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_motivating_aspect FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-IC-profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;

        }
        #endregion
        // 14. S and C High
        #region High-SC
        //if ((DiffB <= -1 && DiffR <= -1) && (DiffG < 10 && DiffG > -1) && (DiffBl < 10 && DiffBl > -1))
        if ((DiffB <= -1 && DiffR <= -1) && (DiffG <= 10 && DiffG > -1) && (DiffBl <= 10 && DiffBl > -1))
        {
            //doc.Add(new Paragraph("\t You are intellectually very sound and tend to focus on perfection and accuracy. As a person you are passive by nature, meticulous, reserved and a systematic thinker. A perfectionist by nature, you set high standards of quality and accuracy and strive to achieve them. A process oriented individual, who prefers to design processes and set the rules and follow them too. You speak only if necessary and only when it forms a part of your core interest of expertise.  You are amazingly ambitious and have high goals and you tend to use existing structures and rules to accomplish your aims. You are also extremely logical, structured and systematic in your approach towards work.\n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t You prefer to relate to individuals on a one on one basis rather than connecting with them in a group. In unfamiliar settings, you normally find difficulty to connect to people. Though you value relationships, you generally don’t display it openly. You depend on assertive and outgoing people around you to initiate the interpersonal issues rather than you taking the lead. You have sound knowledge and intellect and many a times finds yourself in a situation where your intellect is higher than the group.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Your strengths can be summarized as ‘diligent’, perfectionist and self reliant. You are persistent in approach, having the patience and precision, you work steadily at a task until it is achieved. You don’t like to be rushed in any activity or situation, and sudden unplanned change demotivates you. You are very self-reliant, with your structured way of thinking you often show your strength when it comes to organizing facts or working with precise detail or sophisticated systems. Your potential generally lies in technical work.  At times due to the need to be precise and detail oriented you would be seen as slow paced, however your thoughtful nature and diligence improves the quality of decisions you make.  You have a disciplined, purposeful approach, where actions are carefully planned with caution and care.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Self reliant and perfectionism is the root source of motivation in you. You are detailed oriented, and plan with extreme details; however you believe that the goal is met if the process is adhered to. You have the need for time to plan and execute your work carefully and thereby delivering high quality job gives you immense satisfaction.  You prefer to get enough time to adapt to changing situations as you normally have affinity towards stable and familiar environment. You also have a subtle need to be accepted and acknowledged by people.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are Persistence, Thoughtfulness and Accuracy."));

            #region getting_High-SC_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_motivating_aspect FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-SC-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        //HD,HS,HC high DSC
        #region High-DSC
        if ((DiffB <= 10 & DiffB > -1) && (DiffBl <= 10 && DiffBl > -1) && (DiffG <= 10 && DiffG > -1) && (DiffR <= -1))
        {
            //doc.Add(new Paragraph("\t As a person you are highly analytical and relatively uncommunicative. You are basically practical in nature and rational in your thought process. Emotions don’t bother you much. You are generally secretive by nature and cautious in communication, rarely revealing much about yourselves than a bare minimum. In challenging and stressful situations, you display an assertive and forceful behaviour, whereas in easy environment you are much relaxed. \n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Your inclination to relate to people in general is usually found low. You have a passive approach towards reacting to others’ comments or ideas. You prefer not to provide any direct inputs to others unless you are asked for. When you are in certain difficult or demanding situations your willingness to communicate do increase significantly, but to communicate on a personal level is normally low. Being yourself precise and accurate, you tend to demand similar kind of behaviour from people around you.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t You never act on impulse and take unnecessary risks. You put extreme emphasis on results and productivity, leading to a disciplined purposeful approach, where actions are carefully planned with caution and care. You are comfortable with complex systems and processes and work well with facts. You emphasize on efficiency and effectiveness, and that is reflected in both your professional and personal front. If you start something, you like to carry it through the end.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t You like to solve your problems in your own way and achievement of results motivates you. You need opportunity to prove yourself. You prefer to get enough time to adapt to changing situations as you normally have affinity towards stable and familiar environment.  You have the need for time to plan and execute your work carefully and thereby delivering high quality job gives you immense satisfaction. You need full understandings of facts and specific knowledge of the job and tend to seek freedom from risk.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are accuracy, efficiency and thoughtfulness."));

            #region getting_High-DSC_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_motivating_aspect FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-DSC-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        //HI,HD,HC high DCI
        #region High-DCI
        if ((DiffB <= 10 & DiffB > -1) && (DiffG <= 10 && DiffG > -1) && (DiffR <= 10 && DiffR > -1) && (DiffBl <= -1))
        {
            //doc.Add(new Paragraph("\t You are basically fast paced and have high sense of urgency. You are impatient with routines and love variety. You are self-confident and have challenging and competitive approach and at the same time you are socially poised and very outgoing by nature. Though you are extremely assertive and have high need to achieve success, you work in consensus and exhibit caution in dealing with situations. You normally do not show unpredictability in your approach.\n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t You display effective social abilities, particularly evident in any informal open situations, where you exhibit a friendly, open and enthusiastic approach. In formal environment, however, you have self-controlled, driving attitude and display a less sociable style.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Depending on situations, you can be charming and enthusiastic, or direct and forthright. You are socially aware, and able to detect nuances in communication. In demanding situation, you display usual outgoing and expressive behaviour, but is bolstered by a more assertive approach.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Your motivation stems from the achievement of personal ambition, recognition for own ideas, social acceptance and social recognition, and certainty of your position.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are enthusiasm, self-motivation and sensitivity."));

            #region getting_High-DCI_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_motivating_aspect FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-DCI-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        //HI,HD,HS high DSI
        #region High-DSI
        if ((DiffB <= 10 & DiffB > -1) && (DiffBl <= 10 && DiffBl > -1) && (DiffR <= 10 && DiffR > -1) && (DiffG <= -1))
        {
            //doc.Add(new Paragraph("\tAs a person you are dynamic and direct and have an independent behavioral style. You have a clear idea about your goals in life and you equally have the strength to achieve it. You have a more single-minded and stubborn approach to situations. Your remarkable tenacity and determination help you to attain your goal in life. Though you mix easily with strangers, and are unafraid to initiate social contact, you have a powerful, persuasive, confident behavioral style. This helps you to deal directly and fearlessly with most situations. While you will typically prefer to keep matters on an open and friendly level, you are quite capable of adopting a more determined and confrontational stance where a situation calls for.\n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t You interact easily and skillfully with people around you, and rarely experience self-doubt, and you feel at ease in almost any social situations. You are unafraid to initiate social contact however you have a strong sense of independence and tend to maintain your own sense of identity, and tend to protect and defend your own viewpoint.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t : You exhibit dependency and at the same time have strong social abilities. This helps you to take initiative in every activity with great confidence and assertiveness. Your self- reliance style with a strong sense of personal responsibility makes you an effective facilitator. Being patient and persistent along with assertiveness helps you to achieve the results. Further, you also consider and weigh the options before arriving at a definite conclusion.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t You like to have control over your own state of affairs, and being persistent and assertive, like to do things in your own way. While success and achievements are important to you, you also value positive and friendly relationships with other people. Thereby, under certain situation you might even delay achieving your goals, if there is some sort of conflict existing with others' needs.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are independence, self-confidence and persistence."));

            #region getting_High-DSI_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_motivating_aspect FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-DSI-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        //HI,HS,HC high ISC
        #region High-ISC
        if ((DiffG <= 10 & DiffG > -1) && (DiffBl <= 10 && DiffBl > -1) && (DiffR <= 10 && DiffR > -1) && (DiffB <= -1))
        {
            //doc.Add(new Paragraph("\tYou are basically warm, friendly and outgoing by nature. You are patient and generally a good listener. You work cooperatively with others and you love team oriented environment. You tend to avoid individual risk and tend to accept others’ ideas. You are normally not very assertive and dominant type and thereby you prefer to achieve your ends through communication, using your persuasive abilities and rationality. You usually distribute responsibility and tend to concentrate particularly on the details of a task. You are not very ambitious kind and are happy in building strong social relationships.\n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t You work harmoniously with the group. Your outgoing friendly style along with your patience and accommodative nature makes you a good listener. Your strong analytical rationale helps you to present your ideas and arguments in convincing and logical manner.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Your warm friendly, extroverted easy going nature helps you to be a good team player.  You usually entertain ideas from your team. You are receptive to other people and sympathetic to their point of view. With your patience and steadiness, you have high tolerance to repetitive work.  Your confidence helps you to maintain a proactive approach to the situation, though it generally lacks effectiveness due to your low assertiveness.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph(" \t Warm, friendly, extroverted environment makes you happy and content. You are not ambitious kind but supportive ‘family-like’ work team motivates you. You need time to adapt to new situations or changes and prefer a stable work environment. A sense of sureness about your position especially in social terms motivates you.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits in you are cooperativeness, friendliness and patience."));

            #region getting_High-ISC_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_motivating_aspect FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'High-ISC-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion

        //From here discription not aviable in DB.

        // Basic Profiles
        // flick - up (from here to Very-High I all discription is similer.) 
        #region Flick-up
        if (T1 == true || T2 == true || T3 == true)
        {

            //doc.Add(new Paragraph("\t Communication is the key factor in you. You can communicate easily and fluently with others. You are often referred to as 'Communicator' profiles – you are confident, outgoing and gregarious individual who value contact with other people and the development of positive relations.\n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are best in Connecting to People. You are open to others and confident in your own social abilities, and interact positively in almost any situation. Your strong and evident confidence, coupled with your genuine interest in the ideas and especially feelings of other people, are often found charming by those around you. Your actions will often be designed to improve and extend relations, even to the extent of alienating people who are not part of your circle. \n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You distinct abilities lie in the area of communication and relationship building. You are not only a strong communicator, possessing the assertiveness to drive home a point of view, but also have the intuitive qualities to understand others' perspectives and adapt others to meet new situations. \n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have a natural talent to connect to people. You have no inhibitions in getting connected to different type of people. This also stems from the fact that you have an inner confidence to build a long term relation. Specifically, you need to feel accepted by those around you, and react badly if you perceive yourselves to be rejected or disliked. Praise and approval make a strong impression on you, and you will sometimes go to great lengths to achieve this kind of reaction from other people.Especially important to you are the opinions and reactions of your particularly close circle. You believe in creating a positive environment that enhances the well being of people around you.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub--traits of this type are Friendliness , Enthusiasm and Self--confidence"));
            //return;

            #region getting_Flick-Up_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_motivating_aspect FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Flick-Up-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
            }
            #endregion
            doc.Add(behavioural_profile);
            return;
        }
        #endregion
        // flick - down
        #region flick-down
        if (TD1 == true || TD2 == true || TD3 == true)
        {
            //doc.Add(new Paragraph("\t Communication is the key factor in you. You can communicate easily and fluently with others. You are often referred to as 'Communicator' profiles – you are confident, outgoing and gregarious individual who value contact with other people and the development of positive relations.\n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are best in Connecting to People. You are open to others and confident in your own social abilities, and interact positively in almost any situation. Your strong and evident confidence, coupled with your genuine interest in the ideas and especially feelings of other people, are often found charming by those around you. Your actions will often be designed to improve and extend relations, even to the extent of alienating people who are not part of your circle.\n "));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You distinct abilities lie in the area of communication and relationship building. You are not only a strong communicator, possessing the assertiveness to drive home a point of view, but also have the intuitive qualities to understand others' perspectives and adapt others to meet new situations. \n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have a natural talent to connect to people. You have no inhibitions in getting connected to different type of people. This also stems from the fact that you have an inner confidence to build a long term relation. Specifically, you need to feel accepted by those around you, and react badly if you perceive yourselves to be rejected or disliked. Praise and approval make a strong impression on you, and you will sometimes go to great lengths to achieve this kind of reaction from other people.Especially important to you are the opinions and reactions of your particularly close circle. You believe in creating a positive environment that enhances the well being of people around you.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub--traits of this type are Friendliness , Enthusiasm and Self--confidence"));

            #region getting_Flick-Down_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_motivating_aspect FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Flick-Down-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
            }
            #endregion
            doc.Add(behavioural_profile);

            return;
        }
        #endregion
        // sweep - down
        #region sweep-down
        if ((DiffB < 10 && DiffB >= -1) && (DiffR < 10 && DiffR >= -1) && (DiffBl > -11 && DiffBl <= -1) && (DiffG > -11 && DiffG <= -1))
        {
            if ((DiffB < DiffR) && (DiffBl - DiffG > 4))
            {
                //doc.Add(new Paragraph("\t Communication is the key factor in you. You can communicate easily and fluently with others. You are often referred to as 'Communicator' profiles – you are confident, outgoing and gregarious individual who value contact with other people and the development of positive relations.\n"));
                //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You are best in Connecting to People. You are open to others and confident in your own social abilities, and interact positively in almost any situation. Your strong and evident confidence, coupled with your genuine interest in the ideas and especially feelings of other people, are often found charming by those around you. Your actions will often be designed to improve and extend relations, even to the extent of alienating people who are not part of your circle. \n"));
                //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You distinct abilities lie in the area of communication and relationship building. You are not only a strong communicator, possessing the assertiveness to drive home a point of view, but also have the intuitive qualities to understand others' perspectives and adapt others to meet new situations. \n"));
                //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You have a natural talent to connect to people. You have no inhibitions in getting connected to different type of people. This also stems from the fact that you have an inner confidence to build a long term relation. Specifically, you need to feel accepted by those around you, and react badly if you perceive yourselves to be rejected or disliked. Praise and approval make a strong impression on you, and you will sometimes go to great lengths to achieve this kind of reaction from other people.Especially important to you are the opinions and reactions of your particularly close circle. You believe in creating a positive environment that enhances the well being of people around you.\n"));
                //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t The sub--traits of this type are Friendliness , Enthusiasm and Self--confidence"));

                #region getting_Sweep-Down_from_DB
                strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_motivating_aspect FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Sweep-Down-Profile-analysis'";
                DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
                //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
                dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
                int length = dis.Length;
                for (int i = 0; i < length; i++)
                {
                    if (i % 2 == 0)
                    {
                        //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                        //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                        //p.SetAlignment("justify");
                        //doc.Add(p);
                        Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                        p.Add(limage);
                        Cell be_column_3 = new Cell(p);
                        //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                        //be_column_3.BorderWidthLeft = 1;
                        //be_column_3.BorderWidthRight = 1;
                        //be_column_3.BorderWidthTop = 1;
                        //be_column_3.BorderWidthBottom = 1;
                        behavioural_profile.AddCell(be_column_3);
                    }
                    else
                    {
                        //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                        Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                        p.Add(limage);
                        Cell be_column_3 = new Cell(p);
                        //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                        //be_column_3.BorderWidthLeft = 1;
                        //be_column_3.BorderWidthRight = 1;
                        //be_column_3.BorderWidthTop = 1;
                        //be_column_3.BorderWidthBottom = 1;
                        behavioural_profile.AddCell(be_column_3);
                    }
                }
                #endregion
                doc.Add(behavioural_profile);


                return;
            }
        }
        #endregion
        // 8-5 Pattern
        #region 8-5_Pattern
        if ((DiffB >= -4 && DiffB <= 2) && (DiffR >= -4 && DiffR <= 2) && (DiffBl >= -4 && DiffBl <= 2) && (DiffG >= -4 && DiffG <= 2))
        {
            if ((DiffB >= -4 || DiffB <= -1) && (DiffR >= -1 && DiffR <= 2) && (DiffBl <= -1 && DiffBl >= -4) && (DiffG >= -1 && DiffG <= 2))
            {
                //doc.Add(new Paragraph("\t Communication is the key factor in you. You can communicate easily and fluently with others. You are often referred to as 'Communicator' profiles – you are confident, outgoing and gregarious individual who value contact with other people and the development of positive relations.\n"));
                //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You are best in Connecting to People. You are open to others and confident in your own social abilities, and interact positively in almost any situation. Your strong and evident confidence, coupled with your genuine interest in the ideas and especially feelings of other people, are often found charming by those around you. Your actions will often be designed to improve and extend relations, even to the extent of alienating people who are not part of your circle.\n "));
                //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You distinct abilities lie in the area of communication and relationship building. You are not only a strong communicator, possessing the assertiveness to drive home a point of view, but also have the intuitive qualities to understand others' perspectives and adapt others to meet new situations. \n"));
                //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You have a natural talent to connect to people. You have no inhibitions in getting connected to different type of people. This also stems from the fact that you have an inner confidence to build a long term relation. Specifically, you need to feel accepted by those around you, and react badly if you perceive yourselves to be rejected or disliked. Praise and approval make a strong impression on you, and you will sometimes go to great lengths to achieve this kind of reaction from other people.Especially important to you are the opinions and reactions of your particularly close circle. You believe in creating a positive environment that enhances the well being of people around you.\n"));
                //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t The sub--traits of this type are Friendliness , Enthusiasm and Self--confidence"));

                #region getting_Sweep-Down_from_DB
                strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_motivating_aspect FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = '8-5_Pattern-Profile-analysis'";
                DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
                //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
                dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
                int length = dis.Length;
                for (int i = 0; i < length; i++)
                {
                    if (i % 2 == 0)
                    {
                        //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                        //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                        //p.SetAlignment("justify");
                        //doc.Add(p);
                        Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                        p.Add(limage);
                        Cell be_column_3 = new Cell(p);
                        //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                        //be_column_3.BorderWidthLeft = 1;
                        //be_column_3.BorderWidthRight = 1;
                        //be_column_3.BorderWidthTop = 1;
                        //be_column_3.BorderWidthBottom = 1;
                        behavioural_profile.AddCell(be_column_3);
                    }
                    else
                    {
                        //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                        Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                        p.Add(limage);
                        Cell be_column_3 = new Cell(p);
                        //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                        //be_column_3.BorderWidthLeft = 1;
                        //be_column_3.BorderWidthRight = 1;
                        //be_column_3.BorderWidthTop = 1;
                        //be_column_3.BorderWidthBottom = 1;
                        behavioural_profile.AddCell(be_column_3);
                    }
                }
                #endregion
                doc.Add(behavioural_profile);

                return;
            }
        }
        #endregion

        // D=C (from here to Very-High D all discription is similer.) 
        #region D=C
        if (DiffB > -1 && DiffR <= -1 && DiffBl <= -1 && DiffG > -1)
        {
            if (DiffB == DiffR)
            {
                //doc.Add(new Paragraph("\t You are often described as the 'Autocrat', and for good reason. You display a high level of control and assertiveness, and remarkably domineering, and even overbearing at times.You have a very strong need to achieve, and because of this you are often ambitious and competitive, striving aggressively to achieve your goals. You are dynamic and adaptable, and show decisiveness and a capacity for direct leadership.\n "));
                //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You tend to stress on achievement and success significantly, which affects your relations with other people. In extreme cases, you seem to treat other people simply as a means to an end, or a way of achieving your personal goals. Since you are not emotional, you tend not to place great importance on feelings, either your own or others'. The competitive nature in you leads to see challenges and opposition everywhere, and others sometimes find it difficult to break through this naturally suspicious, skeptical shell of yours.\n"));
                //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You have qualities of command and leadership. It should be noted, however, that these abilities are based on your direct, demanding nature, and are more suited to structured, formal situations than those where close ties are required. You are a competent and confident decision-maker, able to reach a conclusion quickly from minimal information and act accordingly. You are well suited to situations that others would find unbearably stressful, as your desire for challenge and your enjoyment of success against the odds makes you unusually proficient in dealing with such situations. \n"));
                //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t You like to feel that you are in control, and seek opportunities to reinforce and emphasize your personal power. You measure your progress in life by your achievements and successes, and feel the need to maintain a sense of personal momentum. Being impatient and forthright, you intensely dislike situations that you are unable to directly resolve for yourselves - dependence on other people is anathema to you. You find these kinds of situation extremely frustrating, and can be driven to wild, impulsive actions in an attempt to relieve the pressure.\n"));
                //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                //doc.Add(new Paragraph("\t The sub-traits of this type are Efficiency, Self-motivation and Independence."));

                #region getting_D=C_from_DB
                strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_motivating_aspect FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'D=C-Profile-analysis'";
                DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
                //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
                dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
                int length = dis.Length;
                for (int i = 0; i < length; i++)
                {
                    if (i % 2 == 0)
                    {
                        //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                        //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                        //p.SetAlignment("justify");
                        //doc.Add(p);
                        Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                        p.Add(limage);
                        Cell be_column_3 = new Cell(p);
                        //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                        //be_column_3.BorderWidthLeft = 1;
                        //be_column_3.BorderWidthRight = 1;
                        //be_column_3.BorderWidthTop = 1;
                        //be_column_3.BorderWidthBottom = 1;
                        behavioural_profile.AddCell(be_column_3);
                    }
                    else
                    {
                        //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                        Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                        p.Add(limage);
                        Cell be_column_3 = new Cell(p);
                        //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                        //be_column_3.BorderWidthLeft = 1;
                        //be_column_3.BorderWidthRight = 1;
                        //be_column_3.BorderWidthTop = 1;
                        //be_column_3.BorderWidthBottom = 1;
                        behavioural_profile.AddCell(be_column_3);
                    }
                }
                #endregion
                doc.Add(behavioural_profile);

                return;
            }
        }
        #endregion
        // Overshift
        #region Overshift
        if (DiffB > -1 && DiffR > -1 && DiffBl > -1 && DiffG > -1)
        {
            //doc.Add(new Paragraph("\t You are often described as the 'Autocrat', and for good reason. You display a high level of control and assertiveness, and remarkably domineering, and even overbearing at times.You have a very strong need to achieve, and because of this you are often ambitious and competitive, striving aggressively to achieve your goals. You are dynamic and adaptable, and show decisiveness and a capacity for direct leadership.\n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You tend to stress on achievement and success significantly, which affects your relations with other people. In extreme cases, you seem to treat other people simply as a means to an end, or a way of achieving your personal goals. Since you are not emotional, you tend not to place great importance on feelings, either your own or others'. The competitive nature in you leads to see challenges and opposition everywhere, and others sometimes find it difficult to break through this naturally suspicious, skeptical shell of yours.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have qualities of command and leadership. It should be noted, however, that these abilities are based on your direct, demanding nature, and are more suited to structured, formal situations than those where close ties are required. You are a competent and confident decision-maker, able to reach a conclusion quickly from minimal information and act accordingly. You are well suited to situations that others would find unbearably stressful, as your desire for challenge and your enjoyment of success against the odds makes you unusually proficient in dealing with such situations.\n "));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You like to feel that you are in control, and seek opportunities to reinforce and emphasize your personal power. You measure your progress in life by your achievements and successes, and feel the need to maintain a sense of personal momentum. Being impatient and forthright, you intensely dislike situations that you are unable to directly resolve for yourselves - dependence on other people is anathema to you. You find these kinds of situation extremely frustrating, and can be driven to wild, impulsive actions in an attempt to relieve the pressure.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits of this type are Efficiency, Self-motivation and Independence."));

            #region getting_Overshift_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_motivating_aspect FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Overshift-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    be_column_3.BorderWidthLeft = 1;
                    be_column_3.BorderWidthRight = 1;
                    be_column_3.BorderWidthTop = 1;
                    be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    be_column_3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_JUSTIFIED;
                    be_column_3.BorderWidthLeft = 1;
                    be_column_3.BorderWidthRight = 1;
                    be_column_3.BorderWidthTop = 1;
                    be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
            }
            #endregion
            doc.Add(behavioural_profile);

            return;
        }
        #endregion
        // Undershift
        #region Undershift
        if (DiffB <= -1 && DiffR <= -1 && DiffBl <= -1 && DiffG <= -1)
        {
            //doc.Add(new Paragraph("\t You are often described as the 'Autocrat', and for good reason. You display a high level of control and assertiveness, and remarkably domineering, and even overbearing at times.You have a very strong need to achieve, and because of this you are often ambitious and competitive, striving aggressively to achieve your goals. You are dynamic and adaptable, and show decisiveness and a capacity for direct leadership.\n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You tend to stress on achievement and success significantly, which affects your relations with other people. In extreme cases, you seem to treat other people simply as a means to an end, or a way of achieving your personal goals. Since you are not emotional, you tend not to place great importance on feelings, either your own or others'. The competitive nature in you leads to see challenges and opposition everywhere, and others sometimes find it difficult to break through this naturally suspicious, skeptical shell of yours.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have qualities of command and leadership. It should be noted, however, that these abilities are based on your direct, demanding nature, and are more suited to structured, formal situations than those where close ties are required. You are a competent and confident decision-maker, able to reach a conclusion quickly from minimal information and act accordingly. You are well suited to situations that others would find unbearably stressful, as your desire for challenge and your enjoyment of success against the odds makes you unusually proficient in dealing with such situations.\n "));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You like to feel that you are in control, and seek opportunities to reinforce and emphasize your personal power. You measure your progress in life by your achievements and successes, and feel the need to maintain a sense of personal momentum. Being impatient and forthright, you intensely dislike situations that you are unable to directly resolve for yourselves - dependence on other people is anathema to you. You find these kinds of situation extremely frustrating, and can be driven to wild, impulsive actions in an attempt to relieve the pressure.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits of this type are Efficiency, Self-motivation and Independence."));

            #region getting_Undershift_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_motivating_aspect FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Undershift-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
            }
            #endregion
            doc.Add(behavioural_profile);


            return;
        }
        #endregion
        // in grey zone
        #region Very-High D
        if (DiffB > 10)
        {
            //doc.Add(new Paragraph("\t You are often described as the 'Autocrat', and for good reason. You display a high level of control and assertiveness, and remarkably domineering, and even overbearing at times.You have a very strong need to achieve, and because of this you are often ambitious and competitive, striving aggressively to achieve your goals. You are dynamic and adaptable, and show decisiveness and a capacity for direct leadership.\n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You tend to stress on achievement and success significantly, which affects your relations with other people. In extreme cases, you seem to treat other people simply as a means to an end, or a way of achieving your personal goals. Since you are not emotional, you tend not to place great importance on feelings, either your own or others'. The competitive nature in you leads to see challenges and opposition everywhere, and others sometimes find it difficult to break through this naturally suspicious, skeptical shell of yours.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have qualities of command and leadership. It should be noted, however, that these abilities are based on your direct, demanding nature, and are more suited to structured, formal situations than those where close ties are required. You are a competent and confident decision-maker, able to reach a conclusion quickly from minimal information and act accordingly. You are well suited to situations that others would find unbearably stressful, as your desire for challenge and your enjoyment of success against the odds makes you unusually proficient in dealing with such situations.\n "));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You like to feel that you are in control, and seek opportunities to reinforce and emphasize your personal power. You measure your progress in life by your achievements and successes, and feel the need to maintain a sense of personal momentum. Being impatient and forthright, you intensely dislike situations that you are unable to directly resolve for yourselves - dependence on other people is anathema to you. You find these kinds of situation extremely frustrating, and can be driven to wild, impulsive actions in an attempt to relieve the pressure.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits of this type are Efficiency, Self-motivation and Independence."));

            #region getting_Very-High_D_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_motivating_aspect FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Very-High_D-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
            }
            #endregion
            doc.Add(behavioural_profile);

            return;
        }
        #endregion

        //(discription is quite similer to Basic Profile)
        #region Very-High I
        if (DiffR > 10)
        {
            //doc.Add(new Paragraph("\t Communication is the key factor in you. You can communicate easily and fluently with others. You are often referred to as 'Communicator' profiles – you are confident, outgoing and gregarious individual who value contact with other people and the development of positive relations.\n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are best in Connecting to People. You are open to others and confident in your own social abilities, and interact positively in almost any situation. Your strong and evident confidence, coupled with your genuine interest in the ideas and especially feelings of other people, are often found charming by those around you. Your actions will often be designed to improve and extend relations, even to the extent of alienating people who are not part of your circle.\n "));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You distinct abilities lie in the area of communication and relationship building. You are not only a strong communicator, possessing the assertiveness to drive home a point of view, but also have the intuitive qualities to understand others' perspectives and adapt others to meet new situations.\n "));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have a natural talent to connect to people. You have no inhibitions in getting connected to different type of people. This also stems from the fact that you have an inner confidence to build a long term relation. Specifically, you need to feel accepted by those around you, and react badly if you perceive yourselves to be rejected or disliked. Praise and approval make a strong impression on you, and you will sometimes go to great lengths to achieve this kind of reaction from other people.Especially important to you are the opinions and reactions of your particularly close circle. You believe in creating a positive environment that enhances the well being of people around you.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub--traits of this type are Friendliness , Enthusiasm and Self--confidence"));

            #region getting_Very-High_I_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_motivating_aspect FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Very-High_I-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
            }
            #endregion
            doc.Add(behavioural_profile);

            return;
        }
        #endregion

        //(discription is independent.)
        #region Very-High S
        if (DiffBl > 10)
        {
            //doc.Add(new Paragraph("\t You show high degree of patience, calmness and gentle openness. You are generally amiable and warm-hearted, being sympathetic to others' points of view, and valuing positive interaction with others. You are not outgoing by nature; however, rely on other, more assertive, people to take the lead.\n "));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t As in your general lifestyle, you initiate relationships of any kind – yours solid, dependable outlook makes you far more suited to the maintenance of interpersonal relations than making initial contact. For this reason, your circle of friends and close acquaintances is often small but tightly-knit.\n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are simply 'supportive'. You are dependable and loyal, this combines with an emotional literacy to make you particularly effective listeners and counselors. You are also unusually persistent in approach, having the patience and restraint to work steadily at a task until it is achieved. This makes you unusually capable of dealing with laborious tasks that many other styles would simply not have the patience to complete.\n"));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t Patience is the root source of motivation in you. You need to feel that you have the support of those around you and, more importantly, time to adapt to new situations. You have an inherent dislike of change, and will prefer to maintain the status quo whenever possible; sudden alterations in your circumstances can be very difficult for you to deal with. Once embarked on a task, you will wish to concentrate closely on it and see it through. Interruptions and distractions of any kind can be particularly demotivating in these situations. \n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits of this type are Patience , Thoughtfulness and Persistence."));

            #region getting_Very-High_S_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_motivating_aspect FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Very-High_S-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
            }
            #endregion
            doc.Add(behavioural_profile);

            return;
        }
        #endregion
        //(discription is independent.)
        #region Very-High C
        if (DiffG > 10)
        {
            //doc.Add(new Paragraph("\t Passive by nature, often reticent and aloof, you often tend to give an impression of coldness or disinterest. Much of this impassive style stems from your controlled nature, however, which makes you reluctant to reveal information about yourselves or your ideas unless absolutely necessary. In fact, you are often ambitious and have lofty goals, but your innate lack of assertiveness and unwillingness to become involved in confrontational situations makes it difficult for you to achieve these goals directly. Instead, you will tend to use existing structures and rules to accomplish your aims. You tend to follow rules, authority and logical argument to influence the actions of others. \n"));
            //doc.Add(new Paragraph("\nConnecting to People - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You have much strength, but the ability to relate easily to other people is rarely in you. The combination of a passive social style with a certain innate suspiciousness makes it difficult for you to form or maintain close relationships, and this is especially true in a business sense. Your friendship or close acquaintances will normally be based on mutual interests or common aims, rather than emotional considerations. \n"));
            //doc.Add(new Paragraph("\nGeneral Faculty - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You are generally very self-reliant although this fact is often difficult to perceive. You have structured ways of thinking, and often show particular strengths when it comes to organizing facts or working with precise detail or sophisticated systems. You have a quick-thinking individual who will often have useful input, but your natural reticence means that you will rarely offer an opinion unless asked directly for your thoughts.\n "));
            //doc.Add(new Paragraph("\nMotivating Aspect - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t You need to feel completely sure of your position, and of others' expectations of you, before you are able to proceed. Because of this, you have a very strong aversion to risk, and will rarely take any action unless you can feel absolutely sure about its consequences.\n"));
            //doc.Add(new Paragraph("\nSub-traits - ", FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
            //doc.Add(new Paragraph("\t The sub-traits of this type are Cooperativeness, Accuracy and Sensitivity. "));

            #region getting_Very-High_C_from_DB
            strcmd = "SELECT DISTINCT disc_condition_id, disc_conditions, disc_report_type, disc_report_motivating_aspect FROM tblPersonalityReportConditions WHERE disc_report_type = 'Browser_Report' AND disc_conditions = 'Very-High_C-Profile-analysis'";
            DataSet ds4 = clsdb_Xaction.ExecDataSet(strcmd);
            //doc.Add(new Paragraph(ds4.Tables[0].Rows[0][3].ToString()));
            dis = ds4.Tables[0].Rows[0][3].ToString().Split('*');
            int length = dis.Length;
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0)
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString()));
                    //Paragraph p = new Paragraph("\n" + dis[i].ToString());
                    //p.SetAlignment("justify");
                    //doc.Add(p);
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
                else
                {
                    //doc.Add(new Paragraph("\n" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 12, Font.BOLD)));
                    Paragraph p = new Paragraph("" + dis[i].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(104, 108, 114)));
                    p.Add(limage);
                    Cell be_column_3 = new Cell(p);
                    //be_column_3.HorizontalAlignment = iTextSharp .text.Element.ALIGN_JUSTIFIED;
                    //be_column_3.BorderWidthLeft = 1;
                    //be_column_3.BorderWidthRight = 1;
                    //be_column_3.BorderWidthTop = 1;
                    //be_column_3.BorderWidthBottom = 1;
                    behavioural_profile.AddCell(be_column_3);
                }
            }
            #endregion
            doc.Add(behavioural_profile);

            return;
        }
        #endregion

        //doc.Add(behavioural_profile);
    }

    private void persnalitychart()
    {



        AbilityBarChart.Visible = false;


        AbilityBarChart.ChartAreas[0].AxisY.Minimum = 0;
        AbilityBarChart.ChartAreas[0].AxisY.Maximum = 1;

        //   String StrSql = "SELECT ability_code, P_rating FROM (select distinct c_id,test_id,ability_code,P_rating,rating from tbl_candidate_test_results where c_id = '" + c_id + "') as x where c_id = '" + c_id + "'order by test_id";
        // DataSet dsChart = clsdb_Xaction.ExecDataSet(StrSql);
        // Populate series data
        double[] yValues = { Convert.ToDouble("50") };
        string[] xValues = { "" };

        //double[] yValues = { Convert.ToDouble("50"), Convert.ToDouble("50"), Convert.ToDouble("50"), Convert.ToDouble("50"), Convert.ToDouble("50") };
        //string[] xValues = { "NA", "naa", "naaa", "naaaa", "naaaaa" };

        AbilityBarChart.Series["Series1"].Points.DataBindXY(xValues, yValues);
        AbilityBarChart.Series["Series1"].Points[0].Color = System.Drawing.Color.White;

        // Set radar chart type
        AbilityBarChart.Series["Series1"].ChartType = System.Web.UI.DataVisualization.Charting.SeriesChartType.Pie;

        // Set radar chart style (Area, Line or Marker)
        AbilityBarChart.Series["Series1"]["RadarDrawingStyle"] = "Area";

        // Set circular area drawing style (Circle or Polygon)
        AbilityBarChart.Series["Series1"]["AreaDrawingStyle"] = "Circle";

        // Set labels style (Auto, Horizontal, Circular or Radial)
        AbilityBarChart.Series["Series1"]["CircularLabelsStyle"] = "Horizontal";

        // Show as 3D
        //AbilityBarChart.ChartAreas["ChartArea1"].Area3DStyle.Enable3D = true;

        AbilityBarChart.Width = 200;
        AbilityBarChart.Height = 100;
        AbilityBarChart.DataBind();
        //for saving image
        AbilityBarChart.SaveImage(Server.MapPath("./Reports_graph/" + candidate_name + "ab1.png"), System.Web.UI.DataVisualization.Charting.ChartImageFormat.Png);


        //////////////first layer   



        AbilityBarChart.Visible = false;

        //String StrSql = "SELECT ability_code, P_rating FROM (select distinct c_id,test_id,ability_code,P_rating,rating from tbl_candidate_test_results where c_id = '" + c_id + "') as x where c_id = '" + c_id + "'order by test_id";
        //DataSet dsChart = clsdb_Xaction.ExecDataSet(StrSql);

        strcmd = "select  rating,P_rating from tblKYCandFactors where c_id = '" + c_id + "'order by factor_no";
        DataSet ds1 = clsdb_Xaction.ExecDataSet(strcmd);


        //double[] yValues = { Convert.ToDouble(dsChart.Tables[0].Rows[0][1].ToString()), Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString()), Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString()), Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString()), Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString()), Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString()), Convert.ToDouble(dsChart.Tables[0].Rows[6][1].ToString()) };
        //string[] xValues = { "NA", "AR", "SVA", "CF", "OST", "SA", "MR" };



        // Populate series data
        double[] yValues1 = { Convert.ToDouble(ds1.Tables[0].Rows[0][1].ToString()), 100 - Convert.ToDouble(ds1.Tables[0].Rows[0][1].ToString()) };
        string[] xValues1 = { "", "" };
        AbilityBarChart.Series["Series1"].Points.DataBindXY(xValues1, yValues1);
        AbilityBarChart.Series["Series1"].Points[0].Color = System.Drawing.Color.DeepSkyBlue;
        AbilityBarChart.Series["Series1"].Points[1].Color = System.Drawing.Color.LightGray;
        AbilityBarChart.Series["Series1"].Points[0].BorderWidth = 3;
        AbilityBarChart.Series["Series1"].Points[0].BorderColor = System.Drawing.Color.White;
        AbilityBarChart.Series["Series1"].Points[1].BorderWidth = 3;
        AbilityBarChart.Series["Series1"].Points[1].BorderColor = System.Drawing.Color.White;

        // Set radar chart type
        AbilityBarChart.Series["Series1"].ChartType = System.Web.UI.DataVisualization.Charting.SeriesChartType.Doughnut;

        AbilityBarChart.Series[0]["PieLabelStyle"] = "Outside";
        // Show as 3D
        //AbilityBarChart.ChartAreas["ChartArea1"].Area3DStyle.Enable3D = true;

        AbilityBarChart.Width = 290;
        AbilityBarChart.Height = 290;
        AbilityBarChart.DataBind();
        //for saving image
        AbilityBarChart.SaveImage(Server.MapPath("./Reports_graph/" + candidate_name + "ab2.png"), System.Web.UI.DataVisualization.Charting.ChartImageFormat.Png);


        ///////////second layer


        double[] yValues2 = { Convert.ToDouble(ds1.Tables[0].Rows[1][1].ToString()), 100 - Convert.ToDouble(ds1.Tables[0].Rows[1][1].ToString()) };
        string[] xValues2 = { "", "" };
        AbilityBarChart.Series["Series1"].Points.DataBindXY(xValues2, yValues2);
        AbilityBarChart.Series["Series1"].Points[0].Color = System.Drawing.Color.GreenYellow;
        AbilityBarChart.Series["Series1"].Points[1].Color = System.Drawing.Color.LightGray;
        AbilityBarChart.Series["Series1"].Points[0].BorderWidth = 3;
        AbilityBarChart.Series["Series1"].Points[0].BorderColor = System.Drawing.Color.White;
        AbilityBarChart.Series["Series1"].Points[1].BorderWidth = 3;
        AbilityBarChart.Series["Series1"].Points[1].BorderColor = System.Drawing.Color.White;


        // Set radar chart type
        AbilityBarChart.Series["Series1"].ChartType = System.Web.UI.DataVisualization.Charting.SeriesChartType.Doughnut;

        AbilityBarChart.Series[0]["PieLabelStyle"] = "Outside";

        // Show as 3D
        //AbilityBarChart.ChartAreas["ChartArea1"].Area3DStyle.Enable3D = true;

        AbilityBarChart.Width = 290;
        AbilityBarChart.Height = 290;
        AbilityBarChart.DataBind();
        //for saving image
        AbilityBarChart.SaveImage(Server.MapPath("./Reports_graph/" + candidate_name + "ab3.png"), System.Web.UI.DataVisualization.Charting.ChartImageFormat.Png);


        ////////////////////////////third layer


        double[] yValues3 = { Convert.ToDouble(ds1.Tables[0].Rows[2][1].ToString()), 100 - Convert.ToDouble(ds1.Tables[0].Rows[2][1].ToString()) };
        string[] xValues3 = { "", "" };
        AbilityBarChart.Series["Series1"].Points.DataBindXY(xValues3, yValues3);
        AbilityBarChart.Series["Series1"].Points[0].Color = System.Drawing.Color.ForestGreen;
        AbilityBarChart.Series["Series1"].Points[1].Color = System.Drawing.Color.LightGray;
        AbilityBarChart.Series["Series1"].Points[0].BorderWidth = 3;
        AbilityBarChart.Series["Series1"].Points[0].BorderColor = System.Drawing.Color.White;
        AbilityBarChart.Series["Series1"].Points[1].BorderWidth = 3;
        AbilityBarChart.Series["Series1"].Points[1].BorderColor = System.Drawing.Color.White;


        // Set radar chart type
        AbilityBarChart.Series["Series1"].ChartType = System.Web.UI.DataVisualization.Charting.SeriesChartType.Doughnut;



        AbilityBarChart.Series[0]["PieLabelStyle"] = "Outside";

        // Show as 3D
        //AbilityBarChart.ChartAreas["ChartArea1"].Area3DStyle.Enable3D = true;

        AbilityBarChart.Width = 290;
        AbilityBarChart.Height = 290;
        AbilityBarChart.DataBind();
        //for saving image
        AbilityBarChart.SaveImage(Server.MapPath("./Reports_graph/" + candidate_name + "ab4.png"), System.Web.UI.DataVisualization.Charting.ChartImageFormat.Png);



        ///////////////////////////fourth layer


        double[] yValues4 = { Convert.ToDouble(ds1.Tables[0].Rows[3][1].ToString()), 100 - Convert.ToDouble(ds1.Tables[0].Rows[3][1].ToString()) };
        string[] xValues4 = { "", "" };
        AbilityBarChart.Series["Series1"].Points.DataBindXY(xValues4, yValues4);
        AbilityBarChart.Series["Series1"].Points[0].Color = System.Drawing.Color.MediumSlateBlue;
        AbilityBarChart.Series["Series1"].Points[1].Color = System.Drawing.Color.LightGray;
        AbilityBarChart.Series["Series1"].Points[0].BorderWidth = 3;
        AbilityBarChart.Series["Series1"].Points[0].BorderColor = System.Drawing.Color.White;
        AbilityBarChart.Series["Series1"].Points[1].BorderWidth = 3;
        AbilityBarChart.Series["Series1"].Points[1].BorderColor = System.Drawing.Color.White;


        // Set radar chart type
        AbilityBarChart.Series["Series1"].ChartType = System.Web.UI.DataVisualization.Charting.SeriesChartType.Doughnut;



        AbilityBarChart.Series[0]["PieLabelStyle"] = "Outside";

        // Show as 3D
        //AbilityBarChart.ChartAreas["ChartArea1"].Area3DStyle.Enable3D = true;

        AbilityBarChart.Width = 290;
        AbilityBarChart.Height = 290;
        AbilityBarChart.DataBind();
        //for saving image
        AbilityBarChart.SaveImage(Server.MapPath("./Reports_graph/" + candidate_name + "ab5.png"), System.Web.UI.DataVisualization.Charting.ChartImageFormat.Png);




        ///////////////////////////fifth layer


        double[] yValues5 = { Convert.ToDouble(ds1.Tables[0].Rows[4][1].ToString()), 100 - Convert.ToDouble(ds1.Tables[0].Rows[4][1].ToString()) };
        string[] xValues5 = { "", "" };
        AbilityBarChart.Series["Series1"].Points.DataBindXY(xValues5, yValues5);
        AbilityBarChart.Series["Series1"].Points[0].Color = System.Drawing.Color.Orchid;
        AbilityBarChart.Series["Series1"].Points[1].Color = System.Drawing.Color.LightGray;
        AbilityBarChart.Series["Series1"].Points[0].BorderWidth = 3;
        AbilityBarChart.Series["Series1"].Points[0].BorderColor = System.Drawing.Color.White;
        AbilityBarChart.Series["Series1"].Points[1].BorderWidth = 3;
        AbilityBarChart.Series["Series1"].Points[1].BorderColor = System.Drawing.Color.White;


        // Set radar chart type
        AbilityBarChart.Series["Series1"].ChartType = System.Web.UI.DataVisualization.Charting.SeriesChartType.Doughnut;



        AbilityBarChart.Series[0]["PieLabelStyle"] = "Outside";

        // Show as 3D
        //AbilityBarChart.ChartAreas["ChartArea1"].Area3DStyle.Enable3D = true;

        AbilityBarChart.Width = 290;
        AbilityBarChart.Height = 290;
        AbilityBarChart.DataBind();
        //for saving image
        AbilityBarChart.SaveImage(Server.MapPath("./Reports_graph/" + candidate_name + "ab6.png"), System.Web.UI.DataVisualization.Charting.ChartImageFormat.Png);







        ///////////////////////////sixth layer


        double[] yValues6 = { Convert.ToDouble(ds1.Tables[0].Rows[5][1].ToString()), 100 - Convert.ToDouble(ds1.Tables[0].Rows[5][1].ToString()) };
        string[] xValues6 = { "", "" };
        AbilityBarChart.Series["Series1"].Points.DataBindXY(xValues6, yValues6);
        AbilityBarChart.Series["Series1"].Points[0].Color = System.Drawing.Color.LightSalmon;
        AbilityBarChart.Series["Series1"].Points[1].Color = System.Drawing.Color.LightGray;
        AbilityBarChart.Series["Series1"].Points[0].BorderWidth = 3;
        AbilityBarChart.Series["Series1"].Points[0].BorderColor = System.Drawing.Color.White;
        AbilityBarChart.Series["Series1"].Points[1].BorderWidth = 3;
        AbilityBarChart.Series["Series1"].Points[1].BorderColor = System.Drawing.Color.White;


        // Set radar chart type
        AbilityBarChart.Series["Series1"].ChartType = System.Web.UI.DataVisualization.Charting.SeriesChartType.Doughnut;



        AbilityBarChart.Series[0]["PieLabelStyle"] = "Outside";

        // Show as 3D
        //AbilityBarChart.ChartAreas["ChartArea1"].Area3DStyle.Enable3D = true;

        AbilityBarChart.Width = 290;
        AbilityBarChart.Height = 290;
        AbilityBarChart.DataBind();
        //for saving image
        AbilityBarChart.SaveImage(Server.MapPath("./Reports_graph/" + candidate_name + "ab7.png"), System.Web.UI.DataVisualization.Charting.ChartImageFormat.Png);




        ///////////////////////////seventh layer


        double[] yValues7 = { Convert.ToDouble(ds1.Tables[0].Rows[6][1].ToString()), 100 - Convert.ToDouble(ds1.Tables[0].Rows[6][1].ToString()) };
        string[] xValues7 = { "", "" };
        AbilityBarChart.Series["Series1"].Points.DataBindXY(xValues7, yValues7);
        AbilityBarChart.Series["Series1"].Points[0].Color = System.Drawing.Color.Goldenrod;
        AbilityBarChart.Series["Series1"].Points[1].Color = System.Drawing.Color.LightGray;
        AbilityBarChart.Series["Series1"].Points[0].BorderWidth = 3;
        AbilityBarChart.Series["Series1"].Points[0].BorderColor = System.Drawing.Color.White;
        AbilityBarChart.Series["Series1"].Points[1].BorderWidth = 3;
        AbilityBarChart.Series["Series1"].Points[1].BorderColor = System.Drawing.Color.White;


        // Set radar chart type
        AbilityBarChart.Series["Series1"].ChartType = System.Web.UI.DataVisualization.Charting.SeriesChartType.Doughnut;



        AbilityBarChart.Series[0]["PieLabelStyle"] = "Outside";

        // Show as 3D
        //AbilityBarChart.ChartAreas["ChartArea1"].Area3DStyle.Enable3D = true;

        AbilityBarChart.Width = 310;
        AbilityBarChart.Height = 310;
        AbilityBarChart.DataBind();
        //for saving image
        AbilityBarChart.SaveImage(Server.MapPath("./Reports_graph/" + candidate_name + "ab8.png"), System.Web.UI.DataVisualization.Charting.ChartImageFormat.Png);





        iTextSharp.text.Image png1 = iTextSharp.text.Image.GetInstance(@StrChartPath);
        //png1.SetAbsolutePosition(110, 575);
        //png1.SetAbsolutePosition(110, 575);
        png1.ScaleToFit(145f, 145f);
        png1.SetAbsolutePosition(118, 568);



        iTextSharp.text.Image png2 = iTextSharp.text.Image.GetInstance(@StrChartPath1);
        png2.RotationDegrees = 90f;
        //png2.ScaleToFit(200f, 200f);
        //png2.SetAbsolutePosition(110, 525);

        png2.ScaleToFit(160f, 160f);
        png2.SetAbsolutePosition(110, 525);


        iTextSharp.text.Image png3 = iTextSharp.text.Image.GetInstance(@StrChartPath2);
        png3.RotationDegrees = 90f;
        //png3.ScaleToFit(255f, 255f);
        //png3.SetAbsolutePosition(82, 498);
        png3.ScaleToFit(215f, 215f);
        png3.SetAbsolutePosition(82, 498);

        iTextSharp.text.Image png4 = iTextSharp.text.Image.GetInstance(@StrChartPath3);
        png4.RotationDegrees = 90f;
        //png4.ScaleToFit(270f, 270f);
        //png4.SetAbsolutePosition(75,490);
        png4.ScaleToFit(230f, 230f);
        png4.SetAbsolutePosition(75, 490);

        iTextSharp.text.Image png5 = iTextSharp.text.Image.GetInstance(@StrChartPath4);
        png5.RotationDegrees = 90f;
        //png5.ScaleToFit(325f, 325f);
        //png5.SetAbsolutePosition(47, 462);

        png5.ScaleToFit(285f, 285f);
        png5.SetAbsolutePosition(47, 462);

        iTextSharp.text.Image png6 = iTextSharp.text.Image.GetInstance(@StrChartPath5);
        png6.RotationDegrees = 90f;
        //png6.ScaleToFit(305f, 305f);
        //png6.SetAbsolutePosition(57, 472);
        png6.ScaleToFit(265f, 265f);
        png6.SetAbsolutePosition(57, 472);


        iTextSharp.text.Image png7 = iTextSharp.text.Image.GetInstance(@StrChartPath6);
        png7.RotationDegrees = 90f;
        //png7.ScaleToFit(418f, 418f);
        //png7.SetAbsolutePosition(0, 416);
        png7.ScaleToFit(353f, 353f);
        png7.SetAbsolutePosition(13, 429);

        iTextSharp.text.Image png8 = iTextSharp.text.Image.GetInstance(@StrChartPath7);
        png8.RotationDegrees = 90f;
        //png8.ScaleToFit(525f, 525f);
        //png8.SetAbsolutePosition(-53, 363);
        png8.ScaleToFit(440f, 440f);
        png8.SetAbsolutePosition(-30, 383);


        doc.Add(png8);
        doc.Add(png7);
        doc.Add(png6);
        doc.Add(png5);
        doc.Add(png4);
        doc.Add(png3);
        doc.Add(png2);
        doc.Add(png1);

        iTextSharp.text.Image chart1lable = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/chart1lables.png"));
        chart1lable.ScaleToFit(340f, 340f);
        chart1lable.SetAbsolutePosition(205, 515);
        doc.Add(chart1lable);



        iTextSharp.text.Table chartvalue = new iTextSharp.text.Table(2);
        chartvalue.Alignment = 0;
        chartvalue.Width = 190;
        // PDTopTable3.BackgroundColor = new Color(226, 226, 226);
        chartvalue.DefaultCellBorder = 0;
        chartvalue.Border = 0;

        Cell chartvaluecell1 = new Cell();
        chartvaluecell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.BOLD)));
        chartvalue.AddCell(chartvaluecell1);


        Cell chartvaluecell2 = new Cell();

        iTextSharp.text.Table chartvaluee = new iTextSharp.text.Table(1);
        chartvaluee.Alignment = 0;
        chartvaluee.Width = 100;
        // PDTopTable3.BackgroundColor = new Color(226, 226, 226);
        chartvaluee.DefaultCellBorder = 0;
        chartvaluee.Border = 0;


        float chvalue = (float)System.Convert.ToSingle(ds1.Tables[0].Rows[0][1].ToString());
        int intchvalue = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell1 = new Cell();
        chartvalueecell1.Add(new Paragraph("\n\n" + intchvalue.ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell1);

        chvalue = (float)System.Convert.ToSingle(ds1.Tables[0].Rows[1][1].ToString());
        int intchvalue1 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell2 = new Cell();
        chartvalueecell2.Add(new Paragraph(intchvalue1.ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(205, 224, 71))));
        chartvaluee.AddCell(chartvalueecell2);

        chvalue = (float)System.Convert.ToSingle(ds1.Tables[0].Rows[2][1].ToString());
        int intchvalue2 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell3 = new Cell();
        chartvalueecell3.Add(new Paragraph(intchvalue2.ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(29, 150, 104))));
        chartvaluee.AddCell(chartvalueecell3);

        chvalue = (float)System.Convert.ToSingle(ds1.Tables[0].Rows[3][1].ToString());
        int intchvalue3 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell4 = new Cell();
        chartvalueecell4.Add(new Paragraph(intchvalue3.ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(128, 128, 255))));
        chartvaluee.AddCell(chartvalueecell4);

        chvalue = (float)System.Convert.ToSingle(ds1.Tables[0].Rows[4][1].ToString());
        int intchvalue4 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell5 = new Cell();
        chartvalueecell5.Add(new Paragraph(intchvalue4.ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(215, 157, 253))));
        chartvaluee.AddCell(chartvalueecell5);

        chvalue = (float)System.Convert.ToSingle(ds1.Tables[0].Rows[5][1].ToString());
        int intchvalue5 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell6 = new Cell();
        chartvalueecell6.Add(new Paragraph(intchvalue5.ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(255, 169, 128))));
        chartvaluee.AddCell(chartvalueecell6);

        chvalue = (float)System.Convert.ToSingle(ds1.Tables[0].Rows[6][1].ToString());
        int intchvalue6 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell7 = new Cell();
        chartvalueecell7.Add(new Paragraph(intchvalue6.ToString() + "%\n\n\n\n\n\n\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(253, 199, 85))));
        chartvaluee.AddCell(chartvalueecell7);

        chartvaluecell2.Add(chartvaluee);
        chartvalue.AddCell(chartvaluecell2);
        doc.Add(chartvalue);



    }
    private void abilitychart()
    {
        AbilityBarChart.Visible = false;


        AbilityBarChart.ChartAreas[0].AxisY.Minimum = 0;
        AbilityBarChart.ChartAreas[0].AxisY.Maximum = 1;

        //   String StrSql = "SELECT ability_code, P_rating FROM (select distinct c_id,test_id,ability_code,P_rating,rating from tbl_candidate_test_results where c_id = '" + c_id + "') as x where c_id = '" + c_id + "'order by test_id";
        // DataSet dsChart = clsdb_Xaction.ExecDataSet(StrSql);
        // Populate series data
        double[] yValues = { Convert.ToDouble("50") };
        string[] xValues = { "" };

        //double[] yValues = { Convert.ToDouble("50"), Convert.ToDouble("50"), Convert.ToDouble("50"), Convert.ToDouble("50"), Convert.ToDouble("50") };
        //string[] xValues = { "NA", "naa", "naaa", "naaaa", "naaaaa" };

        AbilityBarChart.Series["Series1"].Points.DataBindXY(xValues, yValues);
        AbilityBarChart.Series["Series1"].Points[0].Color = System.Drawing.Color.White;

        // Set radar chart type
        AbilityBarChart.Series["Series1"].ChartType = System.Web.UI.DataVisualization.Charting.SeriesChartType.Pie;

        // Set radar chart style (Area, Line or Marker)
        AbilityBarChart.Series["Series1"]["RadarDrawingStyle"] = "Area";

        // Set circular area drawing style (Circle or Polygon)
        AbilityBarChart.Series["Series1"]["AreaDrawingStyle"] = "Circle";

        // Set labels style (Auto, Horizontal, Circular or Radial)
        AbilityBarChart.Series["Series1"]["CircularLabelsStyle"] = "Horizontal";

        // Show as 3D
        //AbilityBarChart.ChartAreas["ChartArea1"].Area3DStyle.Enable3D = true;

        AbilityBarChart.Width = 200;
        AbilityBarChart.Height = 100;
        AbilityBarChart.DataBind();
        //for saving image
        AbilityBarChart.SaveImage(Server.MapPath("./Reports_graph/" + candidate_name + "ab1.png"), System.Web.UI.DataVisualization.Charting.ChartImageFormat.Png);


        //////////////first layer   
        AbilityBarChart.Visible = false;
        String StrSql = "SELECT ability_code, P_rating FROM (select distinct c_id,testid,ability_code,P_rating,rating from tblAbilityCandFactors where c_id = '" + c_id + "') as x where c_id = '" + c_id + "'order by testid";
        DataSet dsChart = clsdb_Xaction.ExecDataSet(StrSql);
        //double[] yValues = { Convert.ToDouble(dsChart.Tables[0].Rows[0][1].ToString()), Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString()), Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString()), Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString()), Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString()), Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString()), Convert.ToDouble(dsChart.Tables[0].Rows[6][1].ToString()) };
        //string[] xValues = { "NA", "AR", "SVA", "CF", "OST", "SA", "MR" };

        // Populate series data
        double[] yValues1 = { Convert.ToDouble(dsChart.Tables[0].Rows[0][1].ToString()), 100 - Convert.ToDouble(dsChart.Tables[0].Rows[0][1].ToString()) };
        string[] xValues1 = { "", "" };
        AbilityBarChart.Series["Series1"].Points.DataBindXY(xValues1, yValues1);
        AbilityBarChart.Series["Series1"].Points[0].Color = System.Drawing.Color.DeepSkyBlue;
        AbilityBarChart.Series["Series1"].Points[1].Color = System.Drawing.Color.LightGray;
        AbilityBarChart.Series["Series1"].Points[0].BorderWidth = 3;
        AbilityBarChart.Series["Series1"].Points[0].BorderColor = System.Drawing.Color.White;
        AbilityBarChart.Series["Series1"].Points[1].BorderWidth = 3;
        AbilityBarChart.Series["Series1"].Points[1].BorderColor = System.Drawing.Color.White;

        // Set radar chart type
        AbilityBarChart.Series["Series1"].ChartType = System.Web.UI.DataVisualization.Charting.SeriesChartType.Doughnut;

        AbilityBarChart.Series[0]["PieLabelStyle"] = "Outside";
        // Show as 3D
        //AbilityBarChart.ChartAreas["ChartArea1"].Area3DStyle.Enable3D = true;

        AbilityBarChart.Width = 290;
        AbilityBarChart.Height = 290;
        AbilityBarChart.DataBind();
        //for saving image
        AbilityBarChart.SaveImage(Server.MapPath("./Reports_graph/" + candidate_name + "ab2.png"), System.Web.UI.DataVisualization.Charting.ChartImageFormat.Png);


        ///////////second layer


        double[] yValues2 = { Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString()), 100 - Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString()) };
        string[] xValues2 = { "", "" };
        AbilityBarChart.Series["Series1"].Points.DataBindXY(xValues2, yValues2);
        AbilityBarChart.Series["Series1"].Points[0].Color = System.Drawing.Color.GreenYellow;
        AbilityBarChart.Series["Series1"].Points[1].Color = System.Drawing.Color.LightGray;
        AbilityBarChart.Series["Series1"].Points[0].BorderWidth = 3;
        AbilityBarChart.Series["Series1"].Points[0].BorderColor = System.Drawing.Color.White;
        AbilityBarChart.Series["Series1"].Points[1].BorderWidth = 3;
        AbilityBarChart.Series["Series1"].Points[1].BorderColor = System.Drawing.Color.White;


        // Set radar chart type
        AbilityBarChart.Series["Series1"].ChartType = System.Web.UI.DataVisualization.Charting.SeriesChartType.Doughnut;

        AbilityBarChart.Series[0]["PieLabelStyle"] = "Outside";

        // Show as 3D
        //AbilityBarChart.ChartAreas["ChartArea1"].Area3DStyle.Enable3D = true;

        AbilityBarChart.Width = 290;
        AbilityBarChart.Height = 290;
        AbilityBarChart.DataBind();
        //for saving image
        AbilityBarChart.SaveImage(Server.MapPath("./Reports_graph/" + candidate_name + "ab3.png"), System.Web.UI.DataVisualization.Charting.ChartImageFormat.Png);


        ////////////////////////////third layer


        double[] yValues3 = { Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString()), 100 - Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString()) };
        string[] xValues3 = { "", "" };
        AbilityBarChart.Series["Series1"].Points.DataBindXY(xValues3, yValues3);
        AbilityBarChart.Series["Series1"].Points[0].Color = System.Drawing.Color.ForestGreen;
        AbilityBarChart.Series["Series1"].Points[1].Color = System.Drawing.Color.LightGray;
        AbilityBarChart.Series["Series1"].Points[0].BorderWidth = 3;
        AbilityBarChart.Series["Series1"].Points[0].BorderColor = System.Drawing.Color.White;
        AbilityBarChart.Series["Series1"].Points[1].BorderWidth = 3;
        AbilityBarChart.Series["Series1"].Points[1].BorderColor = System.Drawing.Color.White;


        // Set radar chart type
        AbilityBarChart.Series["Series1"].ChartType = System.Web.UI.DataVisualization.Charting.SeriesChartType.Doughnut;



        AbilityBarChart.Series[0]["PieLabelStyle"] = "Outside";

        // Show as 3D
        //AbilityBarChart.ChartAreas["ChartArea1"].Area3DStyle.Enable3D = true;

        AbilityBarChart.Width = 290;
        AbilityBarChart.Height = 290;
        AbilityBarChart.DataBind();
        //for saving image
        AbilityBarChart.SaveImage(Server.MapPath("./Reports_graph/" + candidate_name + "ab4.png"), System.Web.UI.DataVisualization.Charting.ChartImageFormat.Png);



        ///////////////////////////fourth layer


        double[] yValues4 = { Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString()), 100 - Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString()) };
        string[] xValues4 = { "", "" };
        AbilityBarChart.Series["Series1"].Points.DataBindXY(xValues4, yValues4);
        AbilityBarChart.Series["Series1"].Points[0].Color = System.Drawing.Color.MediumSlateBlue;
        AbilityBarChart.Series["Series1"].Points[1].Color = System.Drawing.Color.LightGray;
        AbilityBarChart.Series["Series1"].Points[0].BorderWidth = 3;
        AbilityBarChart.Series["Series1"].Points[0].BorderColor = System.Drawing.Color.White;
        AbilityBarChart.Series["Series1"].Points[1].BorderWidth = 3;
        AbilityBarChart.Series["Series1"].Points[1].BorderColor = System.Drawing.Color.White;


        // Set radar chart type
        AbilityBarChart.Series["Series1"].ChartType = System.Web.UI.DataVisualization.Charting.SeriesChartType.Doughnut;



        AbilityBarChart.Series[0]["PieLabelStyle"] = "Outside";

        // Show as 3D
        //AbilityBarChart.ChartAreas["ChartArea1"].Area3DStyle.Enable3D = true;

        AbilityBarChart.Width = 290;
        AbilityBarChart.Height = 290;
        AbilityBarChart.DataBind();
        //for saving image
        AbilityBarChart.SaveImage(Server.MapPath("./Reports_graph/" + candidate_name + "ab5.png"), System.Web.UI.DataVisualization.Charting.ChartImageFormat.Png);




        ///////////////////////////fifth layer


        double[] yValues5 = { Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString()), 100 - Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString()) };
        string[] xValues5 = { "", "" };
        AbilityBarChart.Series["Series1"].Points.DataBindXY(xValues5, yValues5);
        AbilityBarChart.Series["Series1"].Points[0].Color = System.Drawing.Color.Orchid;
        AbilityBarChart.Series["Series1"].Points[1].Color = System.Drawing.Color.LightGray;
        AbilityBarChart.Series["Series1"].Points[0].BorderWidth = 3;
        AbilityBarChart.Series["Series1"].Points[0].BorderColor = System.Drawing.Color.White;
        AbilityBarChart.Series["Series1"].Points[1].BorderWidth = 3;
        AbilityBarChart.Series["Series1"].Points[1].BorderColor = System.Drawing.Color.White;


        // Set radar chart type
        AbilityBarChart.Series["Series1"].ChartType = System.Web.UI.DataVisualization.Charting.SeriesChartType.Doughnut;



        AbilityBarChart.Series[0]["PieLabelStyle"] = "Outside";

        // Show as 3D
        //AbilityBarChart.ChartAreas["ChartArea1"].Area3DStyle.Enable3D = true;

        AbilityBarChart.Width = 290;
        AbilityBarChart.Height = 290;
        AbilityBarChart.DataBind();
        //for saving image
        AbilityBarChart.SaveImage(Server.MapPath("./Reports_graph/" + candidate_name + "ab6.png"), System.Web.UI.DataVisualization.Charting.ChartImageFormat.Png);







        ///////////////////////////sixth layer


        double[] yValues6 = { Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString()), 100 - Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString()) };
        string[] xValues6 = { "", "" };
        AbilityBarChart.Series["Series1"].Points.DataBindXY(xValues6, yValues6);
        AbilityBarChart.Series["Series1"].Points[0].Color = System.Drawing.Color.LightSalmon;
        AbilityBarChart.Series["Series1"].Points[1].Color = System.Drawing.Color.LightGray;
        AbilityBarChart.Series["Series1"].Points[0].BorderWidth = 3;
        AbilityBarChart.Series["Series1"].Points[0].BorderColor = System.Drawing.Color.White;
        AbilityBarChart.Series["Series1"].Points[1].BorderWidth = 3;
        AbilityBarChart.Series["Series1"].Points[1].BorderColor = System.Drawing.Color.White;


        // Set radar chart type
        AbilityBarChart.Series["Series1"].ChartType = System.Web.UI.DataVisualization.Charting.SeriesChartType.Doughnut;



        AbilityBarChart.Series[0]["PieLabelStyle"] = "Outside";

        // Show as 3D
        //AbilityBarChart.ChartAreas["ChartArea1"].Area3DStyle.Enable3D = true;

        AbilityBarChart.Width = 290;
        AbilityBarChart.Height = 290;
        AbilityBarChart.DataBind();
        //for saving image
        AbilityBarChart.SaveImage(Server.MapPath("./Reports_graph/" + candidate_name + "ab7.png"), System.Web.UI.DataVisualization.Charting.ChartImageFormat.Png);




        ///////////////////////////seventh layer


        double[] yValues7 = { Convert.ToDouble(dsChart.Tables[0].Rows[6][1].ToString()), 100 - Convert.ToDouble(dsChart.Tables[0].Rows[6][1].ToString()) };
        string[] xValues7 = { "", "" };
        AbilityBarChart.Series["Series1"].Points.DataBindXY(xValues7, yValues7);
        AbilityBarChart.Series["Series1"].Points[0].Color = System.Drawing.Color.Goldenrod;
        AbilityBarChart.Series["Series1"].Points[1].Color = System.Drawing.Color.LightGray;
        AbilityBarChart.Series["Series1"].Points[0].BorderWidth = 3;
        AbilityBarChart.Series["Series1"].Points[0].BorderColor = System.Drawing.Color.White;
        AbilityBarChart.Series["Series1"].Points[1].BorderWidth = 3;
        AbilityBarChart.Series["Series1"].Points[1].BorderColor = System.Drawing.Color.White;


        // Set radar chart type
        AbilityBarChart.Series["Series1"].ChartType = System.Web.UI.DataVisualization.Charting.SeriesChartType.Doughnut;



        AbilityBarChart.Series[0]["PieLabelStyle"] = "Outside";

        // Show as 3D
        //AbilityBarChart.ChartAreas["ChartArea1"].Area3DStyle.Enable3D = true;

        AbilityBarChart.Width = 310;
        AbilityBarChart.Height = 310;
        AbilityBarChart.DataBind();
        //for saving image
        AbilityBarChart.SaveImage(Server.MapPath("./Reports_graph/" + candidate_name + "ab8.png"), System.Web.UI.DataVisualization.Charting.ChartImageFormat.Png);





        iTextSharp.text.Image png1 = iTextSharp.text.Image.GetInstance(@StrChartPath);
        //png1.SetAbsolutePosition(110, 575);
        //png1.SetAbsolutePosition(110, 575);
        png1.ScaleToFit(145f, 145f);
        png1.SetAbsolutePosition(118, 568);



        iTextSharp.text.Image png2 = iTextSharp.text.Image.GetInstance(@StrChartPath1);
        png2.RotationDegrees = 90f;
        //png2.ScaleToFit(200f, 200f);
        //png2.SetAbsolutePosition(110, 525);

        png2.ScaleToFit(160f, 160f);
        png2.SetAbsolutePosition(110, 525);


        iTextSharp.text.Image png3 = iTextSharp.text.Image.GetInstance(@StrChartPath2);
        png3.RotationDegrees = 90f;
        //png3.ScaleToFit(255f, 255f);
        //png3.SetAbsolutePosition(82, 498);
        png3.ScaleToFit(215f, 215f);
        png3.SetAbsolutePosition(82, 498);

        iTextSharp.text.Image png4 = iTextSharp.text.Image.GetInstance(@StrChartPath3);
        png4.RotationDegrees = 90f;
        //png4.ScaleToFit(270f, 270f);
        //png4.SetAbsolutePosition(75,490);
        png4.ScaleToFit(230f, 230f);
        png4.SetAbsolutePosition(75, 490);

        iTextSharp.text.Image png5 = iTextSharp.text.Image.GetInstance(@StrChartPath4);
        png5.RotationDegrees = 90f;
        //png5.ScaleToFit(325f, 325f);
        //png5.SetAbsolutePosition(47, 462);

        png5.ScaleToFit(285f, 285f);
        png5.SetAbsolutePosition(47, 462);

        iTextSharp.text.Image png6 = iTextSharp.text.Image.GetInstance(@StrChartPath5);
        png6.RotationDegrees = 90f;
        //png6.ScaleToFit(305f, 305f);
        //png6.SetAbsolutePosition(57, 472);
        png6.ScaleToFit(265f, 265f);
        png6.SetAbsolutePosition(57, 472);


        iTextSharp.text.Image png7 = iTextSharp.text.Image.GetInstance(@StrChartPath6);
        png7.RotationDegrees = 90f;
        //png7.ScaleToFit(418f, 418f);
        //png7.SetAbsolutePosition(0, 416);
        png7.ScaleToFit(353f, 353f);
        png7.SetAbsolutePosition(13, 429);

        iTextSharp.text.Image png8 = iTextSharp.text.Image.GetInstance(@StrChartPath7);
        png8.RotationDegrees = 90f;
        //png8.ScaleToFit(525f, 525f);
        //png8.SetAbsolutePosition(-53, 363);
        png8.ScaleToFit(440f, 440f);
        png8.SetAbsolutePosition(-30, 383);


        doc.Add(png8);
        doc.Add(png7);
        doc.Add(png6);
        doc.Add(png5);
        doc.Add(png4);
        doc.Add(png3);
        doc.Add(png2);
        doc.Add(png1);

        //iTextSharp.text.Image chart1lable = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/chart1lables.png"));
        //chart1lable.ScaleToFit(340f, 340f);
        //chart1lable.SetAbsolutePosition(205, 515);
        //doc.Add(chart1lable);



        //iTextSharp.text.Table chartvalue = new iTextSharp.text.Table(2);
        //chartvalue.Alignment = 0;
        //chartvalue.Width = 190;
        //// PDTopTable3.BackgroundColor = new Color(226, 226, 226);
        //chartvalue.DefaultCellBorder = 0;
        //chartvalue.Border = 0;

        //Cell chartvaluecell1 = new Cell();
        //chartvaluecell1.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.BOLD)));
        //chartvalue.AddCell(chartvaluecell1);


        //Cell chartvaluecell2 = new Cell();

        //iTextSharp.text.Table chartvaluee = new iTextSharp.text.Table(1);
        //chartvaluee.Alignment = 0;
        //chartvaluee.Width = 100;
        //// PDTopTable3.BackgroundColor = new Color(226, 226, 226);
        //chartvaluee.DefaultCellBorder = 0;
        //chartvaluee.Border = 0;


        //float chvalue = (float)System.Convert.ToSingle(dsChart.Tables[0].Rows[0][1].ToString());
        //int intchvalue = (int)Math.Ceiling(chvalue);
        //Cell chartvalueecell1 = new Cell();
        //chartvalueecell1.Add(new Paragraph("\n\n" + intchvalue.ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        //chartvaluee.AddCell(chartvalueecell1);

        //chvalue = (float)System.Convert.ToSingle(dsChart.Tables[0].Rows[1][1].ToString());
        //int intchvalue1 = (int)Math.Ceiling(chvalue);
        //Cell chartvalueecell2 = new Cell();
        //chartvalueecell2.Add(new Paragraph(intchvalue1.ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(205, 224, 71))));
        //chartvaluee.AddCell(chartvalueecell2);

        //chvalue = (float)System.Convert.ToSingle(dsChart.Tables[0].Rows[2][1].ToString());
        //int intchvalue2 = (int)Math.Ceiling(chvalue);
        //Cell chartvalueecell3 = new Cell();
        //chartvalueecell3.Add(new Paragraph(intchvalue2.ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(29, 150, 104))));
        //chartvaluee.AddCell(chartvalueecell3);

        //chvalue = (float)System.Convert.ToSingle(dsChart.Tables[0].Rows[3][1].ToString());
        //int intchvalue3 = (int)Math.Ceiling(chvalue);
        //Cell chartvalueecell4 = new Cell();
        //chartvalueecell4.Add(new Paragraph(intchvalue3.ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(128, 128, 255))));
        //chartvaluee.AddCell(chartvalueecell4);

        //chvalue = (float)System.Convert.ToSingle(dsChart.Tables[0].Rows[4][1].ToString());
        //int intchvalue4 = (int)Math.Ceiling(chvalue);
        //Cell chartvalueecell5 = new Cell();
        //chartvalueecell5.Add(new Paragraph(intchvalue4.ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(215, 157, 253))));
        //chartvaluee.AddCell(chartvalueecell5);

        //chvalue = (float)System.Convert.ToSingle(dsChart.Tables[0].Rows[5][1].ToString());
        //int intchvalue5 = (int)Math.Ceiling(chvalue);
        //Cell chartvalueecell6 = new Cell();
        //chartvalueecell6.Add(new Paragraph(intchvalue5.ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(255, 169, 128))));
        //chartvaluee.AddCell(chartvalueecell6);

        //chvalue = (float)System.Convert.ToSingle(dsChart.Tables[0].Rows[6][1].ToString());
        //int intchvalue6 = (int)Math.Ceiling(chvalue);
        //Cell chartvalueecell7 = new Cell();
        //chartvalueecell7.Add(new Paragraph(intchvalue6.ToString() + "%\n\n\n\n\n\n\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(253, 199, 85))));
        //chartvaluee.AddCell(chartvalueecell7);

        //chartvaluecell2.Add(chartvaluee);
        //chartvalue.AddCell(chartvaluecell2);
        //doc.Add(chartvalue);
        ////////////////////////


    }

    private void ab1()
    {

        //        String StrSql = "SELECT ability_code, P_rating FROM (select distinct c_id,test_id,ability_code,P_rating,rating from tbl_candidate_test_results where c_id = '" + c_id + "') as x where c_id = '" + c_id + "'order by test_id";
        String StrSql = "SELECT ability_code, P_rating FROM (select distinct c_id,testid,ability_code,P_rating,rating from tblAbilityCandFactors where c_id = '" + c_id + "') as x where c_id = '" + c_id + "'order by P_rating";
        DataSet dsChart = clsdb_Xaction.ExecDataSet(StrSql);


        Chart.TempDirectory = "~/Graph_Report/Reports_graph"; //Server.MapPath("~/images");
        Chart.Debug = true;
        //Chart.Palette = new Color[]{Color.FromArgb(49,255,49),Color.FromArgb(255,255,0),Color.FromArgb(255,99,49),Color.FromArgb(0,156,255)};

        Chart.Type = ChartType.PiesNested;
        Chart.Size = "880x630";
        Chart.Title = "";
        Chart.Mentor = false;
        Chart.DefaultChartArea.TitleBox.Visible = false;
        Chart.ChartArea.Visible = false;

        Chart.Background.Color = System.Drawing.Color.Transparent;
        Chart.BackColor = System.Drawing.Color.Transparent;



        int a = 1;
        int b = 1;
        dotnetCHARTING.SeriesCollection SC = new dotnetCHARTING.SeriesCollection();

        /////// first series
        dotnetCHARTING.Series s = new dotnetCHARTING.Series("");


        if (Convert.ToDouble(dsChart.Tables[0].Rows[6][1].ToString()) >= 0 && Convert.ToDouble(dsChart.Tables[0].Rows[6][1].ToString()) < 11)
        {
            s.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[6][1].ToString()) > 10 && Convert.ToDouble(dsChart.Tables[0].Rows[6][1].ToString()) < 21)
        {
            s.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[6][1].ToString()) > 20 && Convert.ToDouble(dsChart.Tables[0].Rows[6][1].ToString()) < 31)
        {
            s.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[6][1].ToString()) > 30 && Convert.ToDouble(dsChart.Tables[0].Rows[6][1].ToString()) < 41)
        {
            s.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[6][1].ToString()) > 40 && Convert.ToDouble(dsChart.Tables[0].Rows[6][1].ToString()) < 51)
        {
            s.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[6][1].ToString()) > 50 && Convert.ToDouble(dsChart.Tables[0].Rows[6][1].ToString()) < 61)
        {
            s.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[6][1].ToString()) > 60 && Convert.ToDouble(dsChart.Tables[0].Rows[6][1].ToString()) < 71)
        {
            s.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[6][1].ToString()) > 70 && Convert.ToDouble(dsChart.Tables[0].Rows[6][1].ToString()) < 81)
        {
            s.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[6][1].ToString()) > 80 && Convert.ToDouble(dsChart.Tables[0].Rows[6][1].ToString()) < 91)
        {
            s.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[6][1].ToString()) > 90)
        {
            s.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153) };
        }



        dotnetCHARTING.Element e1 = new dotnetCHARTING.Element("Element " + b.ToString());
        //e1.Outline.Width = 0;
        e1.Outline.Color = System.Drawing.Color.White;
        //e1.YValue = Convert.ToDouble(dsChart.Tables[0].Rows[6][1].ToString());
        e1.YValue = Convert.ToDouble(10);
        s.Elements.Add(e1);


        e1 = new dotnetCHARTING.Element("Element " + b.ToString());
        //e1.Outline.Width = 0;
        e1.Outline.Color = System.Drawing.Color.White;
        //e1.YValue = 100 - Convert.ToDouble(dsChart.Tables[0].Rows[6][1].ToString());
        e1.YValue = Convert.ToDouble(10);
        s.Elements.Add(e1);

        e1 = new dotnetCHARTING.Element("Element " + b.ToString() + "r");
        //e1.Outline.Width = 0;
        e1.Outline.Color = System.Drawing.Color.White;
        e1.YValue = Convert.ToDouble(10);
        s.Elements.Add(e1);

        e1 = new dotnetCHARTING.Element("Element " + b.ToString() + "r1");
        //e1.Outline.Width = 0;
        e1.Outline.Color = System.Drawing.Color.White;
        e1.YValue = Convert.ToDouble(10);
        s.Elements.Add(e1);

        e1 = new dotnetCHARTING.Element("Element " + b.ToString() + "r2");
        //e1.Outline.Width = 0;
        e1.Outline.Color = System.Drawing.Color.White;
        e1.YValue = Convert.ToDouble(10);
        s.Elements.Add(e1);

        e1 = new dotnetCHARTING.Element("Element " + b.ToString() + "r3");
        //e1.Outline.Width = 0;
        e1.Outline.Color = System.Drawing.Color.White;
        e1.YValue = Convert.ToDouble(10);
        s.Elements.Add(e1);

        e1 = new dotnetCHARTING.Element("Element " + b.ToString() + "r4");
        //e1.Outline.Width = 0;
        e1.Outline.Color = System.Drawing.Color.White;
        e1.YValue = Convert.ToDouble(10);
        s.Elements.Add(e1);

        e1 = new dotnetCHARTING.Element("Element " + b.ToString() + "r5");
        //e1.Outline.Width = 0;
        e1.Outline.Color = System.Drawing.Color.White;
        e1.YValue = Convert.ToDouble(10);
        s.Elements.Add(e1);

        e1 = new dotnetCHARTING.Element("Element " + b.ToString() + "r6");
        //e1.Outline.Width = 0;
        e1.Outline.Color = System.Drawing.Color.White;
        e1.YValue = Convert.ToDouble(10);
        s.Elements.Add(e1);

        e1 = new dotnetCHARTING.Element("Element " + b.ToString() + "r7");
        //e1.Outline.Width = 0;
        e1.Outline.Color = System.Drawing.Color.White;
        e1.YValue = Convert.ToDouble(10);
        s.Elements.Add(e1);

        SC.Add(s);


        /////// second series
        dotnetCHARTING.Series ss = new dotnetCHARTING.Series("");


        if (Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString()) >= 0 && Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString()) < 11)
        {
            ss.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString()) > 10 && Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString()) < 21)
        {
            ss.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString()) > 20 && Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString()) < 31)
        {
            ss.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString()) > 30 && Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString()) < 41)
        {
            ss.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString()) > 40 && Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString()) < 51)
        {
            ss.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString()) > 50 && Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString()) < 61)
        {
            ss.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString()) > 60 && Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString()) < 71)
        {
            ss.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString()) > 70 && Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString()) < 81)
        {
            ss.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString()) > 80 && Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString()) < 91)
        {
            ss.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString()) > 90)
        {
            ss.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204) };
        }


        //ss.Palette = new System.Drawing.Color[] {System.Drawing.Color.Gray, System.Drawing.Color.LightGray, System.Drawing.Color.Tan, System.Drawing.Color.Teal, System.Drawing.Color.Thistle, System.Drawing.Color.Tomato, System.Drawing.Color.Turquoise, System.Drawing.Color.Violet, System.Drawing.Color.Wheat, System.Drawing.Color.Yellow };

        dotnetCHARTING.Element e2 = new dotnetCHARTING.Element("Element " + "e1");
        //e2.Outline.Width = 0;
        e2.Outline.Color = System.Drawing.Color.White;
        // e2.YValue = Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString());
        e2.YValue = 100 - Convert.ToDouble(10);
        ss.Elements.Add(e2);

        e2 = new dotnetCHARTING.Element("Element " + "r");
        //e2.Outline.Width = 0;
        e2.Outline.Color = System.Drawing.Color.White;
        //e2.YValue = 100 - Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString());
        e2.YValue = 100 - Convert.ToDouble(10);
        ss.Elements.Add(e2);

        e2 = new dotnetCHARTING.Element("Element " + "r1");
        //e2.Outline.Width = 0;
        e2.Outline.Color = System.Drawing.Color.White;
        //e2.YValue = 100 - Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString());
        e2.YValue = 100 - Convert.ToDouble(10);
        ss.Elements.Add(e2);

        e2 = new dotnetCHARTING.Element("Element " + "r2");
        //e2.Outline.Width = 0;
        e2.Outline.Color = System.Drawing.Color.White;
        //e2.YValue = 100 - Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString());
        e2.YValue = 100 - Convert.ToDouble(10);
        ss.Elements.Add(e2);

        e2 = new dotnetCHARTING.Element("Element " + "r3");
        //e2.Outline.Width = 0;
        e2.Outline.Color = System.Drawing.Color.White;
        //e2.YValue = 100 - Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString());
        e2.YValue = 100 - Convert.ToDouble(10);
        ss.Elements.Add(e2);

        e2 = new dotnetCHARTING.Element("Element " + "r4");
        //e2.Outline.Width = 0;
        e2.Outline.Color = System.Drawing.Color.White;
        //e2.YValue = 100 - Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString());
        e2.YValue = 100 - Convert.ToDouble(10);
        ss.Elements.Add(e2);

        e2 = new dotnetCHARTING.Element("Element " + "r5");
        //e2.Outline.Width = 0;
        e2.Outline.Color = System.Drawing.Color.White;
        //e2.YValue = 100 - Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString());
        e2.YValue = 100 - Convert.ToDouble(10);
        ss.Elements.Add(e2);

        e2 = new dotnetCHARTING.Element("Element " + "r6");
        //e2.Outline.Width = 0;
        e2.Outline.Color = System.Drawing.Color.White;
        //e2.YValue = 100 - Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString());
        e2.YValue = 100 - Convert.ToDouble(10);
        ss.Elements.Add(e2);

        e2 = new dotnetCHARTING.Element("Element " + "r7");
        //e2.Outline.Width = 0;
        e2.Outline.Color = System.Drawing.Color.White;
        //e2.YValue = 100 - Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString());
        e2.YValue = 100 - Convert.ToDouble(10);
        ss.Elements.Add(e2);

        e2 = new dotnetCHARTING.Element("Element " + "r8");
        //e2.Outline.Width = 0;
        e2.Outline.Color = System.Drawing.Color.White;
        //e2.YValue = 100 - Convert.ToDouble(dsChart.Tables[0].Rows[5][1].ToString());
        e2.YValue = 100 - Convert.ToDouble(10);
        ss.Elements.Add(e2);


        SC.Add(ss);

        /////// third series
        dotnetCHARTING.Series ss1 = new dotnetCHARTING.Series("");
        ss1.Palette = new System.Drawing.Color[] { System.Drawing.Color.Gray, System.Drawing.Color.LightGray, System.Drawing.Color.Tan, System.Drawing.Color.Teal, System.Drawing.Color.Thistle, System.Drawing.Color.Tomato, System.Drawing.Color.Turquoise, System.Drawing.Color.Violet, System.Drawing.Color.Wheat, System.Drawing.Color.Yellow };


        if (Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString()) >= 0 && Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString()) < 11)
        {
            ss1.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString()) > 10 && Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString()) < 21)
        {
            ss1.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString()) > 20 && Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString()) < 31)
        {
            ss1.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString()) > 30 && Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString()) < 41)
        {
            ss1.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString()) > 40 && Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString()) < 51)
        {
            ss1.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString()) > 50 && Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString()) < 61)
        {
            ss1.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString()) > 60 && Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString()) < 71)
        {
            ss1.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString()) > 70 && Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString()) < 81)
        {
            ss1.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString()) > 80 && Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString()) < 91)
        {
            ss1.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString()) > 90)
        {
            ss1.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255) };
        }


        dotnetCHARTING.Element e3 = new dotnetCHARTING.Element("Element " + "e1");
        //e3.Outline.Width = 0;
        e3.Outline.Color = System.Drawing.Color.White;
        //e3.YValue = Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString());
        e3.YValue = Convert.ToDouble(10);
        ss1.Elements.Add(e3);


        e3 = new dotnetCHARTING.Element("Element " + "r");
        //e3.Outline.Width = 0;
        e3.Outline.Color = System.Drawing.Color.White;
        //e3.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString());
        e3.YValue = Convert.ToDouble(10);
        ss1.Elements.Add(e3);

        e3 = new dotnetCHARTING.Element("Element " + "r1");
        //e3.Outline.Width = 0;
        e3.Outline.Color = System.Drawing.Color.White;
        //e3.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString());
        e3.YValue = Convert.ToDouble(10);
        ss1.Elements.Add(e3);

        e3 = new dotnetCHARTING.Element("Element " + "r2");
        //e3.Outline.Width = 0;
        e3.Outline.Color = System.Drawing.Color.White;
        //e3.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString());
        e3.YValue = Convert.ToDouble(10);
        ss1.Elements.Add(e3);

        e3 = new dotnetCHARTING.Element("Element " + "r3");
        //e3.Outline.Width = 0;
        e3.Outline.Color = System.Drawing.Color.White;
        //e3.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString());
        e3.YValue = Convert.ToDouble(10);
        ss1.Elements.Add(e3);

        e3 = new dotnetCHARTING.Element("Element " + "r4");
        //e3.Outline.Width = 0;
        e3.Outline.Color = System.Drawing.Color.White;
        //e3.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString());
        e3.YValue = Convert.ToDouble(10);
        ss1.Elements.Add(e3);

        e3 = new dotnetCHARTING.Element("Element " + "r5");
        //e3.Outline.Width = 0;
        e3.Outline.Color = System.Drawing.Color.White;
        //e3.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString());
        e3.YValue = Convert.ToDouble(10);
        ss1.Elements.Add(e3);

        e3 = new dotnetCHARTING.Element("Element " + "r6");
        //e3.Outline.Width = 0;
        e3.Outline.Color = System.Drawing.Color.White;
        //e3.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString());
        e3.YValue = Convert.ToDouble(10);
        ss1.Elements.Add(e3);

        e3 = new dotnetCHARTING.Element("Element " + "r7");
        //e3.Outline.Width = 0;
        e3.Outline.Color = System.Drawing.Color.White;
        //e3.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString());
        e3.YValue = Convert.ToDouble(10);
        ss1.Elements.Add(e3);

        e3 = new dotnetCHARTING.Element("Element " + "r8");
        //e3.Outline.Width = 0;
        e3.Outline.Color = System.Drawing.Color.White;
        //e3.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[4][1].ToString());
        e3.YValue = Convert.ToDouble(10);
        ss1.Elements.Add(e3);

        SC.Add(ss1);


        /////// fourth series
        dotnetCHARTING.Series ss2 = new dotnetCHARTING.Series("");
        //ss2.Palette = new System.Drawing.Color[] { System.Drawing.Color.Gray, System.Drawing.Color.LightGray, System.Drawing.Color.Tan, System.Drawing.Color.Teal, System.Drawing.Color.Thistle, System.Drawing.Color.Tomato, System.Drawing.Color.Turquoise, System.Drawing.Color.Violet, System.Drawing.Color.Wheat, System.Drawing.Color.Yellow };



        if (Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString()) >= 0 && Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString()) < 11)
        {
            ss2.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString()) > 10 && Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString()) < 21)
        {
            ss2.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString()) > 20 && Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString()) < 31)
        {
            ss2.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString()) > 30 && Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString()) < 41)
        {
            ss2.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString()) > 40 && Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString()) < 51)
        {
            ss2.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString()) > 50 && Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString()) < 61)
        {
            ss2.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString()) > 60 && Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString()) < 71)
        {
            ss2.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString()) > 70 && Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString()) < 81)
        {
            ss2.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString()) > 80 && Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString()) < 91)
        {
            ss2.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString()) > 90)
        {
            ss2.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255) };
        }


        dotnetCHARTING.Element e4 = new dotnetCHARTING.Element("Element " + "e1");
        //e4.Outline.Width = 0;
        e4.Outline.Color = System.Drawing.Color.White;
        //e4.YValue = Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString());
        e4.YValue = Convert.ToDouble(10);
        ss2.Elements.Add(e4);


        e4 = new dotnetCHARTING.Element("Element " + "r");
        //e4.Outline.Width = 0;
        e4.Outline.Color = System.Drawing.Color.White;
        //e4.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString());
        e4.YValue = Convert.ToDouble(10);
        ss2.Elements.Add(e4);

        e4 = new dotnetCHARTING.Element("Element " + "r1");
        //e4.Outline.Width = 0;
        e4.Outline.Color = System.Drawing.Color.White;
        //e4.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString());
        e4.YValue = Convert.ToDouble(10);
        ss2.Elements.Add(e4);

        e4 = new dotnetCHARTING.Element("Element " + "r2");
        //e4.Outline.Width = 0;
        e4.Outline.Color = System.Drawing.Color.White;
        //e4.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString());
        e4.YValue = Convert.ToDouble(10);
        ss2.Elements.Add(e4);

        e4 = new dotnetCHARTING.Element("Element " + "r3");
        //e4.Outline.Width = 0;
        e4.Outline.Color = System.Drawing.Color.White;
        //e4.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString());
        e4.YValue = Convert.ToDouble(10);
        ss2.Elements.Add(e4);

        e4 = new dotnetCHARTING.Element("Element " + "r4");
        //e4.Outline.Width = 0;
        e4.Outline.Color = System.Drawing.Color.White;
        //e4.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString());
        e4.YValue = Convert.ToDouble(10);
        ss2.Elements.Add(e4);

        e4 = new dotnetCHARTING.Element("Element " + "r5");
        //e4.Outline.Width = 0;
        e4.Outline.Color = System.Drawing.Color.White;
        //e4.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString());
        e4.YValue = Convert.ToDouble(10);
        ss2.Elements.Add(e4);

        e4 = new dotnetCHARTING.Element("Element " + "r6");
        //e4.Outline.Width = 0;
        e4.Outline.Color = System.Drawing.Color.White;
        //e4.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString());
        e4.YValue = Convert.ToDouble(10);
        ss2.Elements.Add(e4);

        e4 = new dotnetCHARTING.Element("Element " + "r7");
        //e4.Outline.Width = 0;
        e4.Outline.Color = System.Drawing.Color.White;
        //e4.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString());
        e4.YValue = Convert.ToDouble(10);
        ss2.Elements.Add(e4);

        e4 = new dotnetCHARTING.Element("Element " + "r8");
        //e4.Outline.Width = 0;
        e4.Outline.Color = System.Drawing.Color.White;
        //e4.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[3][1].ToString());
        e4.YValue = Convert.ToDouble(10);
        ss2.Elements.Add(e4);

        SC.Add(ss2);


        /////// fifth series
        dotnetCHARTING.Series ss3 = new dotnetCHARTING.Series("");
        //ss3.Palette = new System.Drawing.Color[] { System.Drawing.Color.Gray, System.Drawing.Color.LightGray, System.Drawing.Color.Tan, System.Drawing.Color.Teal, System.Drawing.Color.Thistle, System.Drawing.Color.Tomato, System.Drawing.Color.Turquoise, System.Drawing.Color.Violet, System.Drawing.Color.Wheat, System.Drawing.Color.Yellow };

        if (Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString()) >= 0 && Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString()) < 11)
        {
            ss3.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString()) > 10 && Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString()) < 21)
        {
            ss3.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString()) > 20 && Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString()) < 31)
        {
            ss3.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString()) > 30 && Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString()) < 41)
        {
            ss3.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString()) > 40 && Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString()) < 51)
        {
            ss3.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString()) > 50 && Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString()) < 61)
        {
            ss3.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString()) > 60 && Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString()) < 71)
        {
            ss3.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString()) > 70 && Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString()) < 81)
        {
            ss3.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString()) > 80 && Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString()) < 91)
        {
            ss3.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString()) > 90)
        {
            ss3.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255) };
        }



        dotnetCHARTING.Element e5 = new dotnetCHARTING.Element("Element " + "e1");
        //e5.Outline.Width = 0;
        e5.Outline.Color = System.Drawing.Color.White;
        //e5.YValue = Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString());
        e5.YValue = Convert.ToDouble(10);
        ss3.Elements.Add(e5);


        e5 = new dotnetCHARTING.Element("Element " + "r");
        //e5.Outline.Width = 0;
        e5.Outline.Color = System.Drawing.Color.White;
        //e5.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString());
        e5.YValue = Convert.ToDouble(10);
        ss3.Elements.Add(e5);

        e5 = new dotnetCHARTING.Element("Element " + "r1");
        //e5.Outline.Width = 0;
        e5.Outline.Color = System.Drawing.Color.White;
        //e5.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString());
        e5.YValue = Convert.ToDouble(10);
        ss3.Elements.Add(e5);

        e5 = new dotnetCHARTING.Element("Element " + "r2");
        //e5.Outline.Width = 0;
        e5.Outline.Color = System.Drawing.Color.White;
        //e5.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString());
        e5.YValue = Convert.ToDouble(10);
        ss3.Elements.Add(e5);

        e5 = new dotnetCHARTING.Element("Element " + "r3");
        //e5.Outline.Width = 0;
        e5.Outline.Color = System.Drawing.Color.White;
        //e5.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString());
        e5.YValue = Convert.ToDouble(10);
        ss3.Elements.Add(e5);

        e5 = new dotnetCHARTING.Element("Element " + "r4");
        //e5.Outline.Width = 0;
        e5.Outline.Color = System.Drawing.Color.White;
        //e5.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString());
        e5.YValue = Convert.ToDouble(10);
        ss3.Elements.Add(e5);

        e5 = new dotnetCHARTING.Element("Element " + "r5");
        //e5.Outline.Width = 0;
        e5.Outline.Color = System.Drawing.Color.White;
        //e5.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString());
        e5.YValue = Convert.ToDouble(10);
        ss3.Elements.Add(e5);

        e5 = new dotnetCHARTING.Element("Element " + "r6");
        //e5.Outline.Width = 0;
        e5.Outline.Color = System.Drawing.Color.White;
        //e5.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString());
        e5.YValue = Convert.ToDouble(10);
        ss3.Elements.Add(e5);

        e5 = new dotnetCHARTING.Element("Element " + "r7");
        //e5.Outline.Width = 0;
        e5.Outline.Color = System.Drawing.Color.White;
        //e5.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString());
        e5.YValue = Convert.ToDouble(10);
        ss3.Elements.Add(e5);

        e5 = new dotnetCHARTING.Element("Element " + "r8");
        //e5.Outline.Width = 0;
        e5.Outline.Color = System.Drawing.Color.White;
        //e5.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[2][1].ToString());
        e5.YValue = Convert.ToDouble(10);
        ss3.Elements.Add(e5);

        SC.Add(ss3);


        /////// sixth series
        dotnetCHARTING.Series ss4 = new dotnetCHARTING.Series("");
        //ss4.Palette = new System.Drawing.Color[] { System.Drawing.Color.Gray, System.Drawing.Color.LightGray, System.Drawing.Color.Tan, System.Drawing.Color.Teal, System.Drawing.Color.Thistle, System.Drawing.Color.Tomato, System.Drawing.Color.Turquoise, System.Drawing.Color.Violet, System.Drawing.Color.Wheat, System.Drawing.Color.Yellow };



        if (Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString()) >= 0 && Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString()) < 11)
        {
            ss4.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString()) > 10 && Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString()) < 21)
        {
            ss4.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString()) > 20 && Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString()) < 31)
        {
            ss4.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString()) > 30 && Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString()) < 41)
        {
            ss4.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString()) > 40 && Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString()) < 51)
        {
            ss4.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString()) > 50 && Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString()) < 61)
        {
            ss4.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString()) > 60 && Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString()) < 71)
        {
            ss4.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString()) > 70 && Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString()) < 81)
        {
            ss4.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString()) > 80 && Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString()) < 91)
        {
            ss4.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString()) > 90)
        {
            ss4.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255) };
        }





        dotnetCHARTING.Element e6 = new dotnetCHARTING.Element("Element " + "e1");
        //e6.Outline.Width = 0;
        e6.Outline.Color = System.Drawing.Color.White;
        //        e6.YValue = Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString());
        e6.YValue = Convert.ToDouble(10);
        ss4.Elements.Add(e6);


        e6 = new dotnetCHARTING.Element("Element " + "r");
        //e6.Outline.Width = 0;
        e6.Outline.Color = System.Drawing.Color.White;
        //e6.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString());
        e6.YValue = Convert.ToDouble(10);
        ss4.Elements.Add(e6);

        e6 = new dotnetCHARTING.Element("Element " + "r1");
        //e6.Outline.Width = 0;
        e6.Outline.Color = System.Drawing.Color.White;
        //e6.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString());
        e6.YValue = Convert.ToDouble(10);
        ss4.Elements.Add(e6);

        e6 = new dotnetCHARTING.Element("Element " + "r2");
        //e6.Outline.Width = 0;
        e6.Outline.Color = System.Drawing.Color.White;
        //e6.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString());
        e6.YValue = Convert.ToDouble(10);
        ss4.Elements.Add(e6);

        e6 = new dotnetCHARTING.Element("Element " + "r3");
        //e6.Outline.Width = 0;
        e6.Outline.Color = System.Drawing.Color.White;
        //e6.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString());
        e6.YValue = Convert.ToDouble(10);
        ss4.Elements.Add(e6);

        e6 = new dotnetCHARTING.Element("Element " + "r4");
        //e6.Outline.Width = 0;
        e6.Outline.Color = System.Drawing.Color.White;
        //e6.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString());
        e6.YValue = Convert.ToDouble(10);
        ss4.Elements.Add(e6);

        e6 = new dotnetCHARTING.Element("Element " + "r5");
        //e6.Outline.Width = 0;
        e6.Outline.Color = System.Drawing.Color.White;
        //e6.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString());
        e6.YValue = Convert.ToDouble(10);
        ss4.Elements.Add(e6);

        e6 = new dotnetCHARTING.Element("Element " + "r6");
        //e6.Outline.Width = 0;
        e6.Outline.Color = System.Drawing.Color.White;
        //e6.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString());
        e6.YValue = Convert.ToDouble(10);
        ss4.Elements.Add(e6);

        e6 = new dotnetCHARTING.Element("Element " + "r7");
        //e6.Outline.Width = 0;
        e6.Outline.Color = System.Drawing.Color.White;
        //e6.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString());
        e6.YValue = Convert.ToDouble(10);
        ss4.Elements.Add(e6);

        e6 = new dotnetCHARTING.Element("Element " + "r8");
        //e6.Outline.Width = 0;
        e6.Outline.Color = System.Drawing.Color.White;
        //e6.YValue =100 - Convert.ToDouble(dsChart.Tables[0].Rows[1][1].ToString());
        e6.YValue = Convert.ToDouble(10);
        ss4.Elements.Add(e6);


        SC.Add(ss4);

        /////// seventh series
        dotnetCHARTING.Series ss5 = new dotnetCHARTING.Series("");
        //ss5.Palette = new System.Drawing.Color[] { System.Drawing.Color.Gray, System.Drawing.Color.LightGray, System.Drawing.Color.Tan, System.Drawing.Color.Teal, System.Drawing.Color.Thistle, System.Drawing.Color.Tomato, System.Drawing.Color.Turquoise, System.Drawing.Color.Violet, System.Drawing.Color.Wheat, System.Drawing.Color.Yellow };


        if (Convert.ToDouble(dsChart.Tables[0].Rows[0][1].ToString()) >= 0 && Convert.ToDouble(dsChart.Tables[0].Rows[0][1].ToString()) < 11)
        {
            ss5.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[0][1].ToString()) > 10 && Convert.ToDouble(dsChart.Tables[0].Rows[0][1].ToString()) < 21)
        {
            ss5.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[0][1].ToString()) > 20 && Convert.ToDouble(dsChart.Tables[0].Rows[0][1].ToString()) < 31)
        {
            ss5.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[0][1].ToString()) > 30 && Convert.ToDouble(dsChart.Tables[0].Rows[0][1].ToString()) < 41)
        {
            ss5.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[0][1].ToString()) > 40 && Convert.ToDouble(dsChart.Tables[0].Rows[0][1].ToString()) < 51)
        {
            ss5.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[0][1].ToString()) > 50 && Convert.ToDouble(dsChart.Tables[0].Rows[0][1].ToString()) < 61)
        {
            ss5.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[0][1].ToString()) > 60 && Convert.ToDouble(dsChart.Tables[0].Rows[0][1].ToString()) < 71)
        {
            ss5.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[0][1].ToString()) > 70 && Convert.ToDouble(dsChart.Tables[0].Rows[0][1].ToString()) < 81)
        {
            ss5.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[0][1].ToString()) > 80 && Convert.ToDouble(dsChart.Tables[0].Rows[0][1].ToString()) < 91)
        {
            ss5.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(dsChart.Tables[0].Rows[0][1].ToString()) > 90)
        {
            ss5.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255) };
        }



        dotnetCHARTING.Element e7 = new dotnetCHARTING.Element("Element " + "e1");
        //e7.Outline.Width = 0;
        e7.Outline.Color = System.Drawing.Color.White;
        //e7.YValue = Convert.ToDouble(dsChart.Tables[0].Rows[0][1].ToString());
        e7.YValue = Convert.ToDouble(10);
        ss5.Elements.Add(e7);


        e7 = new dotnetCHARTING.Element("Element " + "r");
        //e7.Outline.Width = 0;
        e7.Outline.Color = System.Drawing.Color.White;
        //e7.YValue = 100 - Convert.ToDouble(dsChart.Tables[0].Rows[0][1].ToString());
        e7.YValue = Convert.ToDouble(10);
        ss5.Elements.Add(e7);

        e7 = new dotnetCHARTING.Element("Element " + "r1");
        //e7.Outline.Width = 0;
        e7.Outline.Color = System.Drawing.Color.White;
        e7.YValue = Convert.ToDouble(10);
        ss5.Elements.Add(e7);

        e7 = new dotnetCHARTING.Element("Element " + "r2");
        //e7.Outline.Width = 0;
        e7.Outline.Color = System.Drawing.Color.White;
        e7.YValue = Convert.ToDouble(10);
        ss5.Elements.Add(e7);

        e7 = new dotnetCHARTING.Element("Element " + "r3");
        //e7.Outline.Width = 0;
        e7.Outline.Color = System.Drawing.Color.White;
        e7.YValue = Convert.ToDouble(10);
        ss5.Elements.Add(e7);

        e7 = new dotnetCHARTING.Element("Element " + "r4");
        //e7.Outline.Width = 0;
        e7.Outline.Color = System.Drawing.Color.White;
        e7.YValue = Convert.ToDouble(10);
        ss5.Elements.Add(e7);

        e7 = new dotnetCHARTING.Element("Element " + "r5");
        //e7.Outline.Width = 0;
        e7.Outline.Color = System.Drawing.Color.White;
        e7.YValue = Convert.ToDouble(10);
        ss5.Elements.Add(e7);

        e7 = new dotnetCHARTING.Element("Element " + "r6");
        //e7.Outline.Width = 0;
        e7.Outline.Color = System.Drawing.Color.White;
        e7.YValue = Convert.ToDouble(10);
        ss5.Elements.Add(e7);

        e7 = new dotnetCHARTING.Element("Element " + "r7");
        //e7.Outline.Width = 0;
        e7.Outline.Color = System.Drawing.Color.White;
        e7.YValue = Convert.ToDouble(10);
        ss5.Elements.Add(e7);

        e7 = new dotnetCHARTING.Element("Element " + "r8");
        //e7.Outline.Width = 0;
        e7.Outline.Color = System.Drawing.Color.White;
        e7.YValue = Convert.ToDouble(10);
        ss5.Elements.Add(e7);

        SC.Add(ss5);


        /////// eightth series
        dotnetCHARTING.Series ss6 = new dotnetCHARTING.Series();
        //ss6.Visible = false;

        ss6.Palette = new System.Drawing.Color[] { System.Drawing.Color.White, System.Drawing.Color.LightGray };

        dotnetCHARTING.Element e8 = new dotnetCHARTING.Element("Element " + "e1");
        e8.YValue = 100;
        ss6.Elements.Add(e8);


        e8 = new dotnetCHARTING.Element("Element " + "r");
        e8.YValue = 0;
        ss6.Elements.Add(e8);

        SC.Add(ss6);

        //add all series to chart
        Chart.SeriesCollection.Add(SC);
        Chart.ImageFormat = dotnetCHARTING.ImageFormat.Jpg;

        string fileName = Chart.FileManager.SaveImage();

        iTextSharp.text.Image abcharr = iTextSharp.text.Image.GetInstance(Server.MapPath(fileName));
        //jpeg.ScalePercent(35f);
        abcharr.ScaleToFit(450f, 400f);
        // jpeg.SpacingAfter = -50f;
        abcharr.SetAbsolutePosition(-55, 490);
        doc.Add(abcharr);


        iTextSharp.text.Image patch = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/patch.png"));
        patch.ScaleToFit(700f, 600f);
        patch.SetAbsolutePosition(-70, 413);
        doc.Add(patch);


        iTextSharp.text.Image chart1lable = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/chart1lable.png"));
        chart1lable.ScaleToFit(320f, 320f);
        chart1lable.SetAbsolutePosition(180, 565);
        doc.Add(chart1lable);



        iTextSharp.text.Table chartvalue = new iTextSharp.text.Table(2);
        chartvalue.Alignment = 0;
        chartvalue.Width = 180;

        // PDTopTable3.BackgroundColor = new Color(226, 226, 226);
        chartvalue.DefaultCellBorder = 0;
        chartvalue.Border = 0;

        //Cell chartvaluecell0 = new Cell();
        //chartvaluecell0.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.BOLD, new Color(77, 184, 219))));
        //chartvalue.AddCell(chartvaluecell0);

        Cell chartvaluecell1 = new Cell();
        chartvaluecell1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;

        iTextSharp.text.Table abilitycode = new iTextSharp.text.Table(1);
        abilitycode.Alignment = 0;
        abilitycode.Width = 98;
        abilitycode.DefaultCellBorder = 0;
        abilitycode.Border = 0;

        Cell abilitycod = new Cell();
        abilitycod.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.BOLD, new Color(77, 184, 219))));
        abilitycode.AddCell(abilitycod);

        Cell abilitycode1 = new Cell();
        abilitycode1.Add(new Paragraph("\n" + dsChart.Tables[0].Rows[0][0].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(0, 0, 0))));
        abilitycode1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;

        abilitycode.AddCell(abilitycode1);

        Cell abilitycode2 = new Cell();
        abilitycode2.Add(new Paragraph(dsChart.Tables[0].Rows[1][0].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(0, 0, 0))));
        abilitycode2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
        abilitycode2.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
        abilitycode.AddCell(abilitycode2);

        Cell abilitycode3 = new Cell();
        abilitycode3.Add(new Paragraph(dsChart.Tables[0].Rows[2][0].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(0, 0, 0))));
        abilitycode3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
        abilitycode3.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
        abilitycode.AddCell(abilitycode3);

        Cell abilitycode4 = new Cell();
        abilitycode4.Add(new Paragraph(dsChart.Tables[0].Rows[3][0].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(0, 0, 0))));
        abilitycode4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
        abilitycode4.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
        abilitycode.AddCell(abilitycode4);

        Cell abilitycode5 = new Cell();
        abilitycode5.Add(new Paragraph(dsChart.Tables[0].Rows[4][0].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(0, 0, 0))));
        abilitycode5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
        abilitycode5.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
        abilitycode.AddCell(abilitycode5);

        Cell abilitycode6 = new Cell();
        abilitycode6.Add(new Paragraph(dsChart.Tables[0].Rows[5][0].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(0, 0, 0))));
        abilitycode6.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
        abilitycode6.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
        abilitycode.AddCell(abilitycode6);

        Cell abilitycode7 = new Cell();
        abilitycode7.Add(new Paragraph("\n" + dsChart.Tables[0].Rows[6][0].ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(0, 0, 0))));
        abilitycode7.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
        // abilitycode7.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
        abilitycode.AddCell(abilitycode7);




        chartvaluecell1.Add(abilitycode);
        chartvalue.AddCell(chartvaluecell1);


        Cell chartvaluecell2 = new Cell();

        iTextSharp.text.Table chartvaluee = new iTextSharp.text.Table(1);
        chartvaluee.Alignment = 0;
        chartvaluee.Width = 100;
        // PDTopTable3.BackgroundColor = new Color(226, 226, 226);
        chartvaluee.DefaultCellBorder = 0;
        chartvaluee.Border = 0;

        Cell chartvalueecell0 = new Cell();
        chartvalueecell0.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell0);




        float chvalue = (float)System.Convert.ToSingle(dsChart.Tables[0].Rows[0][1].ToString());
        int intchvalue = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell1 = new Cell();
        chartvalueecell1.Add(new Paragraph("" + intchvalue.ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell1);

        chvalue = (float)System.Convert.ToSingle(dsChart.Tables[0].Rows[1][1].ToString());
        int intchvalue1 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell2 = new Cell();
        chartvalueecell2.Add(new Paragraph(intchvalue1.ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell2);

        chvalue = (float)System.Convert.ToSingle(dsChart.Tables[0].Rows[2][1].ToString());
        int intchvalue2 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell3 = new Cell();
        chartvalueecell3.Add(new Paragraph(intchvalue2.ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell3);

        chvalue = (float)System.Convert.ToSingle(dsChart.Tables[0].Rows[3][1].ToString());
        int intchvalue3 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell4 = new Cell();
        chartvalueecell4.Add(new Paragraph(intchvalue3.ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell4);

        chvalue = (float)System.Convert.ToSingle(dsChart.Tables[0].Rows[4][1].ToString());
        int intchvalue4 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell5 = new Cell();
        chartvalueecell5.Add(new Paragraph(intchvalue4.ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell5);

        chvalue = (float)System.Convert.ToSingle(dsChart.Tables[0].Rows[5][1].ToString());
        int intchvalue5 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell6 = new Cell();
        chartvalueecell6.Add(new Paragraph(intchvalue5.ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell6);

        chvalue = (float)System.Convert.ToSingle(dsChart.Tables[0].Rows[6][1].ToString());
        int intchvalue6 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell7 = new Cell();
        chartvalueecell7.Add(new Paragraph(intchvalue6.ToString() + "\n\n\n\n\n\n\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell7);

        chartvaluecell2.Add(chartvaluee);
        chartvalue.AddCell(chartvaluecell2);
        doc.Add(chartvalue);


        iTextSharp.text.Image charthead = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/chart1head.png"));
        charthead.ScaleToFit(600f, 550f);
        charthead.SetAbsolutePosition(0, 810);
        doc.Add(charthead);

        iTextSharp.text.Image dischart = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/dischart1.png"));
        dischart.ScaleToFit(600f, 550f);
        dischart.SetAbsolutePosition(0, 360);
        doc.Add(dischart);



    }
    private void ps1()
    {

        strcmd = "select rating,P_rating,factor_no from tblKYCandFactors1 where c_id = '" + c_id + "'order by P_rating";
        //strcmd = "select * from tbl_KY_cand_factors where c_id = '" + c_id + "'order by factor_no";
        DataSet ds1 = clsdb_Xaction.ExecDataSet(strcmd);




        Chart1.TempDirectory = "~/Candidate/Reports_graph"; //Server.MapPath("~/images");
        Chart1.Debug = true;
        //Chart1.Palette = new Color[]{Color.FromArgb(49,255,49),Color.FromArgb(255,255,0),Color.FromArgb(255,99,49),Color.FromArgb(0,156,255)};

        Chart1.Type = ChartType.PiesNested;
        Chart1.Size = "1000x750";
        Chart1.Title = "";
        Chart1.Mentor = false;
        Chart1.DefaultChartArea.TitleBox.Visible = false;
        Chart1.ChartArea.Visible = false;


        int a = 1;
        int b = 1;
        dotnetCHARTING.SeriesCollection SC = new dotnetCHARTING.SeriesCollection();

        /////// first series
        dotnetCHARTING.Series s = new dotnetCHARTING.Series("Series " + a.ToString());

        if (Convert.ToDouble(ds1.Tables[0].Rows[8][1].ToString()) >= 0 && Convert.ToDouble(ds1.Tables[0].Rows[8][1].ToString()) < 11)
        {
            s.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[8][1].ToString()) > 10 && Convert.ToDouble(ds1.Tables[0].Rows[8][1].ToString()) < 21)
        {
            s.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[8][1].ToString()) > 20 && Convert.ToDouble(ds1.Tables[0].Rows[8][1].ToString()) < 31)
        {
            s.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[8][1].ToString()) > 30 && Convert.ToDouble(ds1.Tables[0].Rows[8][1].ToString()) < 41)
        {
            s.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[8][1].ToString()) > 40 && Convert.ToDouble(ds1.Tables[0].Rows[8][1].ToString()) < 51)
        {
            s.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[8][1].ToString()) > 50 && Convert.ToDouble(ds1.Tables[0].Rows[8][1].ToString()) < 61)
        {
            s.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[8][1].ToString()) > 60 && Convert.ToDouble(ds1.Tables[0].Rows[8][1].ToString()) < 71)
        {
            s.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[8][1].ToString()) > 70 && Convert.ToDouble(ds1.Tables[0].Rows[8][1].ToString()) < 81)
        {
            s.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[8][1].ToString()) > 80 && Convert.ToDouble(ds1.Tables[0].Rows[8][1].ToString()) < 91)
        {
            s.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[8][1].ToString()) > 90)
        {
            s.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213), System.Drawing.Color.FromArgb(9, 85, 213) };
        }







        //s.Palette = new System.Drawing.Color[] { System.Drawing.Color.DeepSkyBlue, System.Drawing.Color.White };
        dotnetCHARTING.Element e1 = new dotnetCHARTING.Element("Element " + b.ToString());
        //e1.Outline.Width = 0;
        e1.Outline.Color = System.Drawing.Color.White;
        //e1.YValue = Convert.ToDouble(ds1.Tables[0].Rows[8][1].ToString());
        e1.YValue = 100 - Convert.ToDouble(10);
        s.Elements.Add(e1);

        e1 = new dotnetCHARTING.Element("Element " + b.ToString() + "rr");
        //e1.Outline.Width = 0;
        e1.Outline.Color = System.Drawing.Color.White;
        // e1.YValue = 100 - Convert.ToDouble(ds1.Tables[0].Rows[8][1].ToString());
        e1.YValue = 100 - Convert.ToDouble(10);
        s.Elements.Add(e1);


        e1 = new dotnetCHARTING.Element("Element rr1");
        //e1.Outline.Width = 0;
        e1.Outline.Color = System.Drawing.Color.White;
        // e1.YValue = 100 - Convert.ToDouble(ds1.Tables[0].Rows[8][1].ToString());
        e1.YValue = 100 - Convert.ToDouble(10);
        s.Elements.Add(e1);

        e1 = new dotnetCHARTING.Element("Element rr2");
        e1.Outline.Color = System.Drawing.Color.White;
        e1.YValue = 100 - Convert.ToDouble(10);
        s.Elements.Add(e1);

        e1 = new dotnetCHARTING.Element("Element rr3");
        e1.Outline.Color = System.Drawing.Color.White;
        e1.YValue = 100 - Convert.ToDouble(10);
        s.Elements.Add(e1);

        e1 = new dotnetCHARTING.Element("Element rr4");
        e1.Outline.Color = System.Drawing.Color.White;
        e1.YValue = 100 - Convert.ToDouble(10);
        s.Elements.Add(e1);

        e1 = new dotnetCHARTING.Element("Element rr5");
        e1.Outline.Color = System.Drawing.Color.White;
        e1.YValue = 100 - Convert.ToDouble(10);
        s.Elements.Add(e1);

        e1 = new dotnetCHARTING.Element("Element rr6");
        e1.Outline.Color = System.Drawing.Color.White;
        e1.YValue = 100 - Convert.ToDouble(10);
        s.Elements.Add(e1);

        e1 = new dotnetCHARTING.Element("Element rr7");
        e1.Outline.Color = System.Drawing.Color.White;
        e1.YValue = 100 - Convert.ToDouble(10);
        s.Elements.Add(e1);

        e1 = new dotnetCHARTING.Element("Element rr8");
        e1.Outline.Color = System.Drawing.Color.White;
        e1.YValue = 100 - Convert.ToDouble(10);
        s.Elements.Add(e1);


        SC.Add(s);


        /////// second series
        dotnetCHARTING.Series ss = new dotnetCHARTING.Series("Series " + "dd");


        if (Convert.ToDouble(ds1.Tables[0].Rows[7][1].ToString()) >= 0 && Convert.ToDouble(ds1.Tables[0].Rows[7][1].ToString()) < 11)
        {
            ss.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[7][1].ToString()) > 10 && Convert.ToDouble(ds1.Tables[0].Rows[7][1].ToString()) < 21)
        {
            ss.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[7][1].ToString()) > 20 && Convert.ToDouble(ds1.Tables[0].Rows[7][1].ToString()) < 31)
        {
            ss.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[7][1].ToString()) > 30 && Convert.ToDouble(ds1.Tables[0].Rows[7][1].ToString()) < 41)
        {
            ss.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[7][1].ToString()) > 40 && Convert.ToDouble(ds1.Tables[0].Rows[7][1].ToString()) < 51)
        {
            ss.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[7][1].ToString()) > 50 && Convert.ToDouble(ds1.Tables[0].Rows[7][1].ToString()) < 61)
        {
            ss.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[7][1].ToString()) > 60 && Convert.ToDouble(ds1.Tables[0].Rows[7][1].ToString()) < 71)
        {
            ss.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[7][1].ToString()) > 70 && Convert.ToDouble(ds1.Tables[0].Rows[7][1].ToString()) < 81)
        {
            ss.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[7][1].ToString()) > 80 && Convert.ToDouble(ds1.Tables[0].Rows[7][1].ToString()) < 91)
        {
            ss.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[7][1].ToString()) > 90)
        {
            ss.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222), System.Drawing.Color.FromArgb(43, 85, 222) };
        }




        // ss.Palette = new System.Drawing.Color[] { System.Drawing.Color.HotPink, System.Drawing.Color.White };

        dotnetCHARTING.Element e2 = new dotnetCHARTING.Element("Element " + "e1");
        //e2.Outline.Width = 0;
        e2.Outline.Color = System.Drawing.Color.White;
        // e2.YValue = Convert.ToDouble(ds1.Tables[0].Rows[7][1].ToString());
        e2.YValue = Convert.ToDouble(10);
        ss.Elements.Add(e2);


        e2 = new dotnetCHARTING.Element("Element " + "r");
        //e2.Outline.Width = 0;
        e2.Outline.Color = System.Drawing.Color.White;
        //e2.YValue = 100 - Convert.ToDouble(ds1.Tables[0].Rows[7][1].ToString());
        e2.YValue = Convert.ToDouble(10);
        ss.Elements.Add(e2);

        e2 = new dotnetCHARTING.Element("Element " + "r1");
        e2.Outline.Color = System.Drawing.Color.White;
        e2.YValue = Convert.ToDouble(10);
        ss.Elements.Add(e2);

        e2 = new dotnetCHARTING.Element("Element " + "r2");
        e2.Outline.Color = System.Drawing.Color.White;
        e2.YValue = Convert.ToDouble(10);
        ss.Elements.Add(e2);

        e2 = new dotnetCHARTING.Element("Element " + "r3");
        e2.Outline.Color = System.Drawing.Color.White;
        e2.YValue = Convert.ToDouble(10);
        ss.Elements.Add(e2);

        e2 = new dotnetCHARTING.Element("Element " + "r4");
        e2.Outline.Color = System.Drawing.Color.White;
        e2.YValue = Convert.ToDouble(10);
        ss.Elements.Add(e2);

        e2 = new dotnetCHARTING.Element("Element " + "r5");
        e2.Outline.Color = System.Drawing.Color.White;
        e2.YValue = Convert.ToDouble(10);
        ss.Elements.Add(e2);

        e2 = new dotnetCHARTING.Element("Element " + "r6");
        e2.Outline.Color = System.Drawing.Color.White;
        e2.YValue = Convert.ToDouble(10);
        ss.Elements.Add(e2);

        e2 = new dotnetCHARTING.Element("Element " + "r7");
        e2.Outline.Color = System.Drawing.Color.White;
        e2.YValue = Convert.ToDouble(10);
        ss.Elements.Add(e2);

        e2 = new dotnetCHARTING.Element("Element " + "r8");
        e2.Outline.Color = System.Drawing.Color.White;
        e2.YValue = Convert.ToDouble(10);
        ss.Elements.Add(e2);

        SC.Add(ss);

        /////// third series
        dotnetCHARTING.Series ss1 = new dotnetCHARTING.Series("Series " + "dd");

        if (Convert.ToDouble(ds1.Tables[0].Rows[6][1].ToString()) >= 0 && Convert.ToDouble(ds1.Tables[0].Rows[6][1].ToString()) < 11)
        {
            ss1.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[6][1].ToString()) > 10 && Convert.ToDouble(ds1.Tables[0].Rows[6][1].ToString()) < 21)
        {
            ss1.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[6][1].ToString()) > 20 && Convert.ToDouble(ds1.Tables[0].Rows[6][1].ToString()) < 31)
        {
            ss1.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[6][1].ToString()) > 30 && Convert.ToDouble(ds1.Tables[0].Rows[6][1].ToString()) < 41)
        {
            ss1.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[6][1].ToString()) > 40 && Convert.ToDouble(ds1.Tables[0].Rows[6][1].ToString()) < 51)
        {
            ss1.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[6][1].ToString()) > 50 && Convert.ToDouble(ds1.Tables[0].Rows[6][1].ToString()) < 61)
        {
            ss1.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[6][1].ToString()) > 60 && Convert.ToDouble(ds1.Tables[0].Rows[6][1].ToString()) < 71)
        {
            ss1.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[6][1].ToString()) > 70 && Convert.ToDouble(ds1.Tables[0].Rows[6][1].ToString()) < 81)
        {
            ss1.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[6][1].ToString()) > 80 && Convert.ToDouble(ds1.Tables[0].Rows[6][1].ToString()) < 91)
        {
            ss1.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[6][1].ToString()) > 90)
        {
            ss1.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153), System.Drawing.Color.FromArgb(0, 76, 153) };
        }


        dotnetCHARTING.Element e3 = new dotnetCHARTING.Element("Element " + "e1");
        //e3.Outline.Width = 0;
        e3.Outline.Color = System.Drawing.Color.White;
        //e3.YValue = Convert.ToDouble(ds1.Tables[0].Rows[6][1].ToString());
        e3.YValue = Convert.ToDouble(10);
        ss1.Elements.Add(e3);


        e3 = new dotnetCHARTING.Element("Element " + "r");
        //e3.Outline.Width = 0;
        e3.Outline.Color = System.Drawing.Color.White;
        //e3.YValue = 100 - Convert.ToDouble(ds1.Tables[0].Rows[6][1].ToString());
        e3.YValue = Convert.ToDouble(10);
        ss1.Elements.Add(e3);

        e3 = new dotnetCHARTING.Element("Element " + "r1");
        e3.Outline.Color = System.Drawing.Color.White;
        e3.YValue = Convert.ToDouble(10);
        ss1.Elements.Add(e3);

        e3 = new dotnetCHARTING.Element("Element " + "r2");
        e3.Outline.Color = System.Drawing.Color.White;
        e3.YValue = Convert.ToDouble(10);
        ss1.Elements.Add(e3);

        e3 = new dotnetCHARTING.Element("Element " + "r3");
        e3.Outline.Color = System.Drawing.Color.White;
        e3.YValue = Convert.ToDouble(10);
        ss1.Elements.Add(e3);

        e3 = new dotnetCHARTING.Element("Element " + "r4");
        e3.Outline.Color = System.Drawing.Color.White;
        e3.YValue = Convert.ToDouble(10);
        ss1.Elements.Add(e3);

        e3 = new dotnetCHARTING.Element("Element " + "r5");
        e3.Outline.Color = System.Drawing.Color.White;
        e3.YValue = Convert.ToDouble(10);
        ss1.Elements.Add(e3);

        e3 = new dotnetCHARTING.Element("Element " + "r6");
        e3.Outline.Color = System.Drawing.Color.White;
        e3.YValue = Convert.ToDouble(10);
        ss1.Elements.Add(e3);

        e3 = new dotnetCHARTING.Element("Element " + "r7");
        e3.Outline.Color = System.Drawing.Color.White;
        e3.YValue = Convert.ToDouble(10);
        ss1.Elements.Add(e3);

        e3 = new dotnetCHARTING.Element("Element " + "r8");
        e3.Outline.Color = System.Drawing.Color.White;
        e3.YValue = Convert.ToDouble(10);
        ss1.Elements.Add(e3);



        SC.Add(ss1);


        /////// fourth series
        dotnetCHARTING.Series ss2 = new dotnetCHARTING.Series("Series " + "dd");

        if (Convert.ToDouble(ds1.Tables[0].Rows[5][1].ToString()) >= 0 && Convert.ToDouble(ds1.Tables[0].Rows[5][1].ToString()) < 11)
        {
            ss2.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[5][1].ToString()) > 10 && Convert.ToDouble(ds1.Tables[0].Rows[5][1].ToString()) < 21)
        {
            ss2.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[5][1].ToString()) > 20 && Convert.ToDouble(ds1.Tables[0].Rows[5][1].ToString()) < 31)
        {
            ss2.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[5][1].ToString()) > 30 && Convert.ToDouble(ds1.Tables[0].Rows[5][1].ToString()) < 41)
        {
            ss2.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[5][1].ToString()) > 40 && Convert.ToDouble(ds1.Tables[0].Rows[5][1].ToString()) < 51)
        {
            ss2.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[5][1].ToString()) > 50 && Convert.ToDouble(ds1.Tables[0].Rows[5][1].ToString()) < 61)
        {
            ss2.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[5][1].ToString()) > 60 && Convert.ToDouble(ds1.Tables[0].Rows[5][1].ToString()) < 71)
        {
            ss2.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[5][1].ToString()) > 70 && Convert.ToDouble(ds1.Tables[0].Rows[5][1].ToString()) < 81)
        {
            ss2.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[5][1].ToString()) > 80 && Convert.ToDouble(ds1.Tables[0].Rows[5][1].ToString()) < 91)
        {
            ss2.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[5][1].ToString()) > 90)
        {
            ss2.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204), System.Drawing.Color.FromArgb(0, 102, 204) };
        }

        dotnetCHARTING.Element e4 = new dotnetCHARTING.Element("Element " + "e1");
        //e4.Outline.Width = 0;
        e4.Outline.Color = System.Drawing.Color.White;
        //e4.YValue = Convert.ToDouble(ds1.Tables[0].Rows[5][1].ToString());
        e4.YValue = Convert.ToDouble(10);
        ss2.Elements.Add(e4);


        e4 = new dotnetCHARTING.Element("Element " + "r");
        //e4.Outline.Width = 0;
        e4.Outline.Color = System.Drawing.Color.White;
        //e4.YValue = 100 - Convert.ToDouble(ds1.Tables[0].Rows[5][1].ToString());
        e4.YValue = Convert.ToDouble(10);
        ss2.Elements.Add(e4);

        e4 = new dotnetCHARTING.Element("Element " + "r1");
        e4.Outline.Color = System.Drawing.Color.White;
        e4.YValue = Convert.ToDouble(10);
        ss2.Elements.Add(e4);

        e4 = new dotnetCHARTING.Element("Element " + "r2");
        e4.Outline.Color = System.Drawing.Color.White;
        e4.YValue = Convert.ToDouble(10);
        ss2.Elements.Add(e4);

        e4 = new dotnetCHARTING.Element("Element " + "r3");
        e4.Outline.Color = System.Drawing.Color.White;
        e4.YValue = Convert.ToDouble(10);
        ss2.Elements.Add(e4);

        e4 = new dotnetCHARTING.Element("Element " + "r4");
        e4.Outline.Color = System.Drawing.Color.White;
        e4.YValue = Convert.ToDouble(10);
        ss2.Elements.Add(e4);

        e4 = new dotnetCHARTING.Element("Element " + "r5");
        e4.Outline.Color = System.Drawing.Color.White;
        e4.YValue = Convert.ToDouble(10);
        ss2.Elements.Add(e4);

        e4 = new dotnetCHARTING.Element("Element " + "r6");
        e4.Outline.Color = System.Drawing.Color.White;
        e4.YValue = Convert.ToDouble(10);
        ss2.Elements.Add(e4);

        e4 = new dotnetCHARTING.Element("Element " + "r7");
        e4.Outline.Color = System.Drawing.Color.White;
        e4.YValue = Convert.ToDouble(10);
        ss2.Elements.Add(e4);

        e4 = new dotnetCHARTING.Element("Element " + "r8");
        e4.Outline.Color = System.Drawing.Color.White;
        e4.YValue = Convert.ToDouble(10);
        ss2.Elements.Add(e4);


        SC.Add(ss2);


        /////// fifth series
        dotnetCHARTING.Series ss3 = new dotnetCHARTING.Series("Series " + "dd");

        if (Convert.ToDouble(ds1.Tables[0].Rows[4][1].ToString()) >= 0 && Convert.ToDouble(ds1.Tables[0].Rows[4][1].ToString()) < 11)
        {
            ss3.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[4][1].ToString()) > 10 && Convert.ToDouble(ds1.Tables[0].Rows[4][1].ToString()) < 21)
        {
            ss3.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[4][1].ToString()) > 20 && Convert.ToDouble(ds1.Tables[0].Rows[4][1].ToString()) < 31)
        {
            ss3.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[4][1].ToString()) > 30 && Convert.ToDouble(ds1.Tables[0].Rows[4][1].ToString()) < 41)
        {
            ss3.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[4][1].ToString()) > 40 && Convert.ToDouble(ds1.Tables[0].Rows[4][1].ToString()) < 51)
        {
            ss3.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[4][1].ToString()) > 50 && Convert.ToDouble(ds1.Tables[0].Rows[4][1].ToString()) < 61)
        {
            ss3.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[4][1].ToString()) > 60 && Convert.ToDouble(ds1.Tables[0].Rows[4][1].ToString()) < 71)
        {
            ss3.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[4][1].ToString()) > 70 && Convert.ToDouble(ds1.Tables[0].Rows[4][1].ToString()) < 81)
        {
            ss3.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[4][1].ToString()) > 80 && Convert.ToDouble(ds1.Tables[0].Rows[4][1].ToString()) < 91)
        {
            ss3.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[4][1].ToString()) > 90)
        {
            ss3.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.SkyBlue, System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255), System.Drawing.Color.FromArgb(51, 153, 255) };
        }

        dotnetCHARTING.Element e5 = new dotnetCHARTING.Element("Element " + "e1");
        //e5.Outline.Width = 0;
        e5.Outline.Color = System.Drawing.Color.White;
        //e5.YValue = Convert.ToDouble(ds1.Tables[0].Rows[4][1].ToString());
        e5.YValue = Convert.ToDouble(10);
        ss3.Elements.Add(e5);


        e5 = new dotnetCHARTING.Element("Element " + "r");
        //e5.Outline.Width = 0;
        e5.Outline.Color = System.Drawing.Color.White;
        //e5.YValue = 100 - Convert.ToDouble(ds1.Tables[0].Rows[4][1].ToString());
        e5.YValue = Convert.ToDouble(10);
        ss3.Elements.Add(e5);

        e5 = new dotnetCHARTING.Element("Element " + "r1");
        e5.Outline.Color = System.Drawing.Color.White;
        e5.YValue = Convert.ToDouble(10);
        ss3.Elements.Add(e5);

        e5 = new dotnetCHARTING.Element("Element " + "r2");
        e5.Outline.Color = System.Drawing.Color.White;
        e5.YValue = Convert.ToDouble(10);
        ss3.Elements.Add(e5);

        e5 = new dotnetCHARTING.Element("Element " + "r3");
        e5.Outline.Color = System.Drawing.Color.White;
        e5.YValue = Convert.ToDouble(10);
        ss3.Elements.Add(e5);

        e5 = new dotnetCHARTING.Element("Element " + "r4");
        e5.Outline.Color = System.Drawing.Color.White;
        e5.YValue = Convert.ToDouble(10);
        ss3.Elements.Add(e5);

        e5 = new dotnetCHARTING.Element("Element " + "r5");
        e5.Outline.Color = System.Drawing.Color.White;
        e5.YValue = Convert.ToDouble(10);
        ss3.Elements.Add(e5);

        e5 = new dotnetCHARTING.Element("Element " + "r6");
        e5.Outline.Color = System.Drawing.Color.White;
        e5.YValue = Convert.ToDouble(10);
        ss3.Elements.Add(e5);


        e5 = new dotnetCHARTING.Element("Element " + "r7");
        e5.Outline.Color = System.Drawing.Color.White;
        e5.YValue = Convert.ToDouble(10);
        ss3.Elements.Add(e5);

        e5 = new dotnetCHARTING.Element("Element " + "r8");
        e5.Outline.Color = System.Drawing.Color.White;
        e5.YValue = Convert.ToDouble(10);
        ss3.Elements.Add(e5);

        SC.Add(ss3);


        /////// sixth series
        dotnetCHARTING.Series ss4 = new dotnetCHARTING.Series("Series " + "dd");

        if (Convert.ToDouble(ds1.Tables[0].Rows[3][1].ToString()) >= 0 && Convert.ToDouble(ds1.Tables[0].Rows[3][1].ToString()) < 11)
        {
            ss4.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[3][1].ToString()) > 10 && Convert.ToDouble(ds1.Tables[0].Rows[3][1].ToString()) < 21)
        {
            ss4.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[3][1].ToString()) > 20 && Convert.ToDouble(ds1.Tables[0].Rows[3][1].ToString()) < 31)
        {
            ss4.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[3][1].ToString()) > 30 && Convert.ToDouble(ds1.Tables[0].Rows[3][1].ToString()) < 41)
        {
            ss4.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[3][1].ToString()) > 40 && Convert.ToDouble(ds1.Tables[0].Rows[3][1].ToString()) < 51)
        {
            ss4.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[3][1].ToString()) > 50 && Convert.ToDouble(ds1.Tables[0].Rows[3][1].ToString()) < 61)
        {
            ss4.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[3][1].ToString()) > 60 && Convert.ToDouble(ds1.Tables[0].Rows[3][1].ToString()) < 71)
        {
            ss4.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[3][1].ToString()) > 70 && Convert.ToDouble(ds1.Tables[0].Rows[3][1].ToString()) < 81)
        {
            ss4.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[3][1].ToString()) > 80 && Convert.ToDouble(ds1.Tables[0].Rows[3][1].ToString()) < 91)
        {
            ss4.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[3][1].ToString()) > 90)
        {
            ss4.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255), System.Drawing.Color.FromArgb(153, 204, 255) };
        }


        dotnetCHARTING.Element e6 = new dotnetCHARTING.Element("Element " + "e1");
        //e6.Outline.Width = 0;
        e6.Outline.Color = System.Drawing.Color.White;
        //e6.YValue = Convert.ToDouble(ds1.Tables[0].Rows[3][1].ToString());
        e6.YValue = Convert.ToDouble(10);
        ss4.Elements.Add(e6);


        e6 = new dotnetCHARTING.Element("Element " + "r");
        //e6.Outline.Width = 0;
        e6.Outline.Color = System.Drawing.Color.White;
        //e6.YValue = 100 - Convert.ToDouble(ds1.Tables[0].Rows[3][1].ToString());
        e6.YValue = Convert.ToDouble(10);
        ss4.Elements.Add(e6);

        e6 = new dotnetCHARTING.Element("Element " + "r1");
        e6.Outline.Color = System.Drawing.Color.White;
        e6.YValue = Convert.ToDouble(10);
        ss4.Elements.Add(e6);

        e6 = new dotnetCHARTING.Element("Element " + "r2");
        e6.Outline.Color = System.Drawing.Color.White;
        e6.YValue = Convert.ToDouble(10);
        ss4.Elements.Add(e6);

        e6 = new dotnetCHARTING.Element("Element " + "r3");
        e6.Outline.Color = System.Drawing.Color.White;
        e6.YValue = Convert.ToDouble(10);
        ss4.Elements.Add(e6);

        e6 = new dotnetCHARTING.Element("Element " + "r4");
        e6.Outline.Color = System.Drawing.Color.White;
        e6.YValue = Convert.ToDouble(10);
        ss4.Elements.Add(e6);

        e6 = new dotnetCHARTING.Element("Element " + "r5");
        e6.Outline.Color = System.Drawing.Color.White;
        e6.YValue = Convert.ToDouble(10);
        ss4.Elements.Add(e6);

        e6 = new dotnetCHARTING.Element("Element " + "r6");
        e6.Outline.Color = System.Drawing.Color.White;
        e6.YValue = Convert.ToDouble(10);
        ss4.Elements.Add(e6);

        e6 = new dotnetCHARTING.Element("Element " + "r7");
        e6.Outline.Color = System.Drawing.Color.White;
        e6.YValue = Convert.ToDouble(10);
        ss4.Elements.Add(e6);

        e6 = new dotnetCHARTING.Element("Element " + "r8");
        e6.Outline.Color = System.Drawing.Color.White;
        e6.YValue = Convert.ToDouble(10);
        ss4.Elements.Add(e6);



        SC.Add(ss4);

        /////// seventh series
        dotnetCHARTING.Series ss5 = new dotnetCHARTING.Series("Series " + "dd");

        if (Convert.ToDouble(ds1.Tables[0].Rows[2][1].ToString()) >= 0 && Convert.ToDouble(ds1.Tables[0].Rows[2][1].ToString()) < 11)
        {
            ss5.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[2][1].ToString()) > 10 && Convert.ToDouble(ds1.Tables[0].Rows[2][1].ToString()) < 21)
        {
            ss5.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[2][1].ToString()) > 20 && Convert.ToDouble(ds1.Tables[0].Rows[2][1].ToString()) < 31)
        {
            ss5.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[2][1].ToString()) > 30 && Convert.ToDouble(ds1.Tables[0].Rows[2][1].ToString()) < 41)
        {
            ss5.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[2][1].ToString()) > 40 && Convert.ToDouble(ds1.Tables[0].Rows[2][1].ToString()) < 51)
        {
            ss5.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[2][1].ToString()) > 50 && Convert.ToDouble(ds1.Tables[0].Rows[2][1].ToString()) < 61)
        {
            ss5.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[2][1].ToString()) > 60 && Convert.ToDouble(ds1.Tables[0].Rows[2][1].ToString()) < 71)
        {
            ss5.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[2][1].ToString()) > 70 && Convert.ToDouble(ds1.Tables[0].Rows[2][1].ToString()) < 81)
        {
            ss5.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[2][1].ToString()) > 80 && Convert.ToDouble(ds1.Tables[0].Rows[2][1].ToString()) < 91)
        {
            ss5.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.LightSteelBlue, System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[2][1].ToString()) > 90)
        {
            ss5.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.LightSteelBlue, System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255), System.Drawing.Color.FromArgb(0, 128, 255) };
        }


        dotnetCHARTING.Element e7 = new dotnetCHARTING.Element("Element " + "e1");
        //e7.Outline.Width = 0;
        e7.Outline.Color = System.Drawing.Color.White;
        //        e7.YValue = Convert.ToDouble(ds1.Tables[0].Rows[2][1].ToString());
        e7.YValue = Convert.ToDouble(10);
        ss5.Elements.Add(e7);


        e7 = new dotnetCHARTING.Element("Element " + "r");
        //e7.Outline.Width = 0;
        e7.Outline.Color = System.Drawing.Color.White;
        //e7.YValue = 100 - Convert.ToDouble(ds1.Tables[0].Rows[2][1].ToString());
        e7.YValue = Convert.ToDouble(10);
        ss5.Elements.Add(e7);

        e7 = new dotnetCHARTING.Element("Element " + "r1");
        e7.Outline.Color = System.Drawing.Color.White;
        e7.YValue = Convert.ToDouble(10);
        ss5.Elements.Add(e7);

        e7 = new dotnetCHARTING.Element("Element " + "r2");
        e7.Outline.Color = System.Drawing.Color.White;
        e7.YValue = Convert.ToDouble(10);
        ss5.Elements.Add(e7);

        e7 = new dotnetCHARTING.Element("Element " + "r3");
        e7.Outline.Color = System.Drawing.Color.White;
        e7.YValue = Convert.ToDouble(10);
        ss5.Elements.Add(e7);

        e7 = new dotnetCHARTING.Element("Element " + "r4");
        e7.Outline.Color = System.Drawing.Color.White;
        e7.YValue = Convert.ToDouble(10);
        ss5.Elements.Add(e7);

        e7 = new dotnetCHARTING.Element("Element " + "r5");
        e7.Outline.Color = System.Drawing.Color.White;
        e7.YValue = Convert.ToDouble(10);
        ss5.Elements.Add(e7);

        e7 = new dotnetCHARTING.Element("Element " + "r6");
        e7.Outline.Color = System.Drawing.Color.White;
        e7.YValue = Convert.ToDouble(10);
        ss5.Elements.Add(e7);

        e7 = new dotnetCHARTING.Element("Element " + "r7");
        e7.Outline.Color = System.Drawing.Color.White;
        e7.YValue = Convert.ToDouble(10);
        ss5.Elements.Add(e7);

        e7 = new dotnetCHARTING.Element("Element " + "r8");
        e7.Outline.Color = System.Drawing.Color.White;
        e7.YValue = Convert.ToDouble(10);
        ss5.Elements.Add(e7);

        SC.Add(ss5);

        /////// eightth series
        dotnetCHARTING.Series ss6 = new dotnetCHARTING.Series("Series " + "dd");

        if (Convert.ToDouble(ds1.Tables[0].Rows[1][1].ToString()) >= 0 && Convert.ToDouble(ds1.Tables[0].Rows[1][1].ToString()) < 11)
        {
            ss6.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[1][1].ToString()) > 10 && Convert.ToDouble(ds1.Tables[0].Rows[1][1].ToString()) < 21)
        {
            ss6.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[1][1].ToString()) > 20 && Convert.ToDouble(ds1.Tables[0].Rows[1][1].ToString()) < 31)
        {
            ss6.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[1][1].ToString()) > 30 && Convert.ToDouble(ds1.Tables[0].Rows[1][1].ToString()) < 41)
        {
            ss6.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[1][1].ToString()) > 40 && Convert.ToDouble(ds1.Tables[0].Rows[1][1].ToString()) < 51)
        {
            ss6.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[1][1].ToString()) > 50 && Convert.ToDouble(ds1.Tables[0].Rows[1][1].ToString()) < 61)
        {
            ss6.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[1][1].ToString()) > 60 && Convert.ToDouble(ds1.Tables[0].Rows[1][1].ToString()) < 71)
        {
            ss6.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[1][1].ToString()) > 70 && Convert.ToDouble(ds1.Tables[0].Rows[1][1].ToString()) < 81)
        {
            ss6.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[1][1].ToString()) > 80 && Convert.ToDouble(ds1.Tables[0].Rows[1][1].ToString()) < 91)
        {
            ss6.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[1][1].ToString()) > 90)
        {
            ss6.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255), System.Drawing.Color.FromArgb(102, 178, 255) };
        }


        dotnetCHARTING.Element e8 = new dotnetCHARTING.Element("Element " + "e1");
        //e8.Outline.Width = 0;
        e8.Outline.Color = System.Drawing.Color.White;
        //e8.YValue = Convert.ToDouble(ds1.Tables[0].Rows[1][1].ToString());
        e8.YValue = Convert.ToDouble(10);
        ss6.Elements.Add(e8);


        e8 = new dotnetCHARTING.Element("Element " + "r");
        //e8.Outline.Width = 0;
        e8.Outline.Color = System.Drawing.Color.White;
        //e8.YValue = 100 - Convert.ToDouble(ds1.Tables[0].Rows[1][1].ToString());
        e8.YValue = Convert.ToDouble(10);
        ss6.Elements.Add(e8);

        e8 = new dotnetCHARTING.Element("Element " + "r1");
        e8.Outline.Color = System.Drawing.Color.White;
        e8.YValue = Convert.ToDouble(10);
        ss6.Elements.Add(e8);

        e8 = new dotnetCHARTING.Element("Element " + "r2");
        e8.Outline.Color = System.Drawing.Color.White;
        e8.YValue = Convert.ToDouble(10);
        ss6.Elements.Add(e8);

        e8 = new dotnetCHARTING.Element("Element " + "r3");
        e8.Outline.Color = System.Drawing.Color.White;
        e8.YValue = Convert.ToDouble(10);
        ss6.Elements.Add(e8);

        e8 = new dotnetCHARTING.Element("Element " + "r4");
        e8.Outline.Color = System.Drawing.Color.White;
        e8.YValue = Convert.ToDouble(10);
        ss6.Elements.Add(e8);

        e8 = new dotnetCHARTING.Element("Element " + "r5");
        e8.Outline.Color = System.Drawing.Color.White;
        e8.YValue = Convert.ToDouble(10);
        ss6.Elements.Add(e8);

        e8 = new dotnetCHARTING.Element("Element " + "r6");
        e8.Outline.Color = System.Drawing.Color.White;
        e8.YValue = Convert.ToDouble(10);
        ss6.Elements.Add(e8);

        e8 = new dotnetCHARTING.Element("Element " + "r7");
        e8.Outline.Color = System.Drawing.Color.White;
        e8.YValue = Convert.ToDouble(10);
        ss6.Elements.Add(e8);

        e8 = new dotnetCHARTING.Element("Element " + "r8");
        e8.Outline.Color = System.Drawing.Color.White;
        e8.YValue = Convert.ToDouble(10);
        ss6.Elements.Add(e8);



        SC.Add(ss6);


        /////// ninth series
        dotnetCHARTING.Series ss7 = new dotnetCHARTING.Series("Series " + "dd");

        if (Convert.ToDouble(ds1.Tables[0].Rows[0][1].ToString()) >= 0 && Convert.ToDouble(ds1.Tables[0].Rows[0][1].ToString()) < 11)
        {
            ss7.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[0][1].ToString()) > 10 && Convert.ToDouble(ds1.Tables[0].Rows[0][1].ToString()) < 21)
        {
            ss7.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[0][1].ToString()) > 20 && Convert.ToDouble(ds1.Tables[0].Rows[0][1].ToString()) < 31)
        {
            ss7.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[0][1].ToString()) > 30 && Convert.ToDouble(ds1.Tables[0].Rows[0][1].ToString()) < 41)
        {
            ss7.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[0][1].ToString()) > 40 && Convert.ToDouble(ds1.Tables[0].Rows[0][1].ToString()) < 51)
        {
            ss7.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[0][1].ToString()) > 50 && Convert.ToDouble(ds1.Tables[0].Rows[0][1].ToString()) < 61)
        {
            ss7.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[0][1].ToString()) > 60 && Convert.ToDouble(ds1.Tables[0].Rows[0][1].ToString()) < 71)
        {
            ss7.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[0][1].ToString()) > 70 && Convert.ToDouble(ds1.Tables[0].Rows[0][1].ToString()) < 81)
        {
            ss7.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.LightGray, System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[0][1].ToString()) > 80 && Convert.ToDouble(ds1.Tables[0].Rows[0][1].ToString()) < 91)
        {
            ss7.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.LightGray };
        }
        else if (Convert.ToDouble(ds1.Tables[0].Rows[0][1].ToString()) > 90)
        {
            ss7.Palette = new System.Drawing.Color[] { System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255), System.Drawing.Color.FromArgb(204, 229, 255) };
        }

        dotnetCHARTING.Element e9 = new dotnetCHARTING.Element("Element " + "e1");
        //e9.Outline.Width = 0;
        e9.Outline.Color = System.Drawing.Color.White;
        //e9.YValue = Convert.ToDouble(ds1.Tables[0].Rows[0][1].ToString());
        e9.YValue = Convert.ToDouble(10);
        ss7.Elements.Add(e9);


        e9 = new dotnetCHARTING.Element("Element " + "r");
        //e9.Outline.Width = 0;
        e9.Outline.Color = System.Drawing.Color.White;
        //e9.YValue = 100 - Convert.ToDouble(ds1.Tables[0].Rows[0][1].ToString());
        e9.YValue = Convert.ToDouble(10);
        ss7.Elements.Add(e9);

        e9 = new dotnetCHARTING.Element("Element " + "r1");
        e9.Outline.Color = System.Drawing.Color.White;
        e9.YValue = Convert.ToDouble(10);
        ss7.Elements.Add(e9);

        e9 = new dotnetCHARTING.Element("Element " + "r2");
        e9.Outline.Color = System.Drawing.Color.White;
        e9.YValue = Convert.ToDouble(10);
        ss7.Elements.Add(e9);

        e9 = new dotnetCHARTING.Element("Element " + "r3");
        e9.Outline.Color = System.Drawing.Color.White;
        e9.YValue = Convert.ToDouble(10);
        ss7.Elements.Add(e9);

        e9 = new dotnetCHARTING.Element("Element " + "r4");
        e9.Outline.Color = System.Drawing.Color.White;
        e9.YValue = Convert.ToDouble(10);
        ss7.Elements.Add(e9);

        e9 = new dotnetCHARTING.Element("Element " + "r5");
        e9.Outline.Color = System.Drawing.Color.White;
        e9.YValue = Convert.ToDouble(10);
        ss7.Elements.Add(e9);

        e9 = new dotnetCHARTING.Element("Element " + "r6");
        e9.Outline.Color = System.Drawing.Color.White;
        e9.YValue = Convert.ToDouble(10);
        ss7.Elements.Add(e9);

        e9 = new dotnetCHARTING.Element("Element " + "r7");
        e9.Outline.Color = System.Drawing.Color.White;
        e9.YValue = Convert.ToDouble(10);
        ss7.Elements.Add(e9);

        e9 = new dotnetCHARTING.Element("Element " + "r8");
        e9.Outline.Color = System.Drawing.Color.White;
        e9.YValue = Convert.ToDouble(10);
        ss7.Elements.Add(e9);

        SC.Add(ss7);





        /////// eightth series
        dotnetCHARTING.Series ss8 = new dotnetCHARTING.Series("Series " + "dd");
        ss8.Palette = new System.Drawing.Color[] { System.Drawing.Color.White, System.Drawing.Color.White };

        dotnetCHARTING.Element e10 = new dotnetCHARTING.Element("Element " + "e1");
        e10.YValue = 100;
        ss8.Elements.Add(e10);


        e10 = new dotnetCHARTING.Element("Element " + "r");
        e10.YValue = 0;
        ss8.Elements.Add(e10);

        SC.Add(ss8);

        //add all series to Chart1
        Chart1.SeriesCollection.Add(SC);
        Chart1.ImageFormat = dotnetCHARTING.ImageFormat.Jpg;

        string fileName = Chart1.FileManager.SaveImage();

        iTextSharp.text.Image abcharr = iTextSharp.text.Image.GetInstance(Server.MapPath(fileName));
        //jpeg.ScalePercent(35f);
        abcharr.ScaleToFit(550f, 500f);
        // jpeg.SpacingAfter = -50f;
        abcharr.SetAbsolutePosition(-100, 400);
        doc.Add(abcharr);


        iTextSharp.text.Image patch = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/patch.png"));
        patch.ScaleToFit(730f, 630f);
        patch.SetAbsolutePosition(-45, 400);
        doc.Add(patch);



        iTextSharp.text.Image chart1lable = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/chart2lable.png"));
        chart1lable.ScaleToFit(340f, 340f);
        chart1lable.SetAbsolutePosition(190, 520);
        doc.Add(chart1lable);



        iTextSharp.text.Table chartvalue = new iTextSharp.text.Table(2);
        chartvalue.Alignment = 0;
        chartvalue.Width = 190;
        // PDTopTable3.BackgroundColor = new Color(226, 226, 226);
        chartvalue.DefaultCellBorder = 0;
        chartvalue.Border = 0;





        Cell chartvaluecell1 = new Cell();




        iTextSharp.text.Table abilitycode = new iTextSharp.text.Table(1);
        abilitycode.Alignment = 0;
        abilitycode.Width = 98;
        abilitycode.DefaultCellBorder = 0;
        abilitycode.Border = 0;

        Cell abilitycod = new Cell();
        abilitycod.Add(new Paragraph("\n", FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.BOLD, new Color(77, 184, 219))));
        // abilitycode.AddCell(abilitycod);

        Cell abilitycode1 = new Cell();
        String chart2lblname = "";
        switch (ds1.Tables[0].Rows[0][2].ToString())
        {
            case "1":
                chart2lblname = "Relationships";
                break;
            case "2":
                chart2lblname = "Emotional Stability";
                break;
            case "3":
                chart2lblname = "Assertiveness";
                break;
            case "4":
                chart2lblname = "Enthusiasm";
                break;
            case "5":
                chart2lblname = "Conscientious";
                break;
            case "6":
                chart2lblname = "Responsiveness";
                break;
            case "7":
                chart2lblname = "Tough Minded";
                break;
            case "8":
                chart2lblname = "Self Assurance";
                break;
            case "9":
                chart2lblname = "Relaxed";
                break;
        }

        abilitycode1.Add(new Paragraph(chart2lblname, FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.COURIER, new Color(0, 0, 0))));
        abilitycode1.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
        abilitycode1.VerticalAlignment = iTextSharp.text.Element.ALIGN_BOTTOM;
        abilitycode.AddCell(abilitycode1);

        Cell abilitycode2 = new Cell();
        switch (ds1.Tables[0].Rows[1][2].ToString())
        {
            case "1":
                chart2lblname = "Relationships";
                break;
            case "2":
                chart2lblname = "Emotional Stability";
                break;
            case "3":
                chart2lblname = "Assertiveness";
                break;
            case "4":
                chart2lblname = "Enthusiasm";
                break;
            case "5":
                chart2lblname = "Conscientious";
                break;
            case "6":
                chart2lblname = "Responsiveness";
                break;
            case "7":
                chart2lblname = "Tough Minded";
                break;
            case "8":
                chart2lblname = "Self Assurance";
                break;
            case "9":
                chart2lblname = "Relaxed";
                break;
        }
        abilitycode2.Add(new Paragraph(chart2lblname, FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.COURIER, new Color(0, 0, 0))));
        abilitycode2.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
        abilitycode2.VerticalAlignment = iTextSharp.text.Element.ALIGN_BOTTOM;
        abilitycode.AddCell(abilitycode2);

        Cell abilitycode3 = new Cell();
        switch (ds1.Tables[0].Rows[2][2].ToString())
        {
            case "1":
                chart2lblname = "Relationships";
                break;
            case "2":
                chart2lblname = "Emotional Stability";
                break;
            case "3":
                chart2lblname = "Assertiveness";
                break;
            case "4":
                chart2lblname = "Enthusiasm";
                break;
            case "5":
                chart2lblname = "Conscientious";
                break;
            case "6":
                chart2lblname = "Responsiveness";
                break;
            case "7":
                chart2lblname = "Tough Minded";
                break;
            case "8":
                chart2lblname = "Self Assurance";
                break;
            case "9":
                chart2lblname = "Relaxed";
                break;
        }
        abilitycode3.Add(new Paragraph(chart2lblname, FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.COURIER, new Color(0, 0, 0))));
        abilitycode3.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
        abilitycode3.VerticalAlignment = iTextSharp.text.Element.ALIGN_BOTTOM;
        abilitycode.AddCell(abilitycode3);

        Cell abilitycode4 = new Cell();
        switch (ds1.Tables[0].Rows[3][2].ToString())
        {
            case "1":
                chart2lblname = "Relationships";
                break;
            case "2":
                chart2lblname = "Emotional Stability";
                break;
            case "3":
                chart2lblname = "Assertiveness";
                break;
            case "4":
                chart2lblname = "Enthusiasm";
                break;
            case "5":
                chart2lblname = "Conscientious";
                break;
            case "6":
                chart2lblname = "Responsiveness";
                break;
            case "7":
                chart2lblname = "Tough Minded";
                break;
            case "8":
                chart2lblname = "Self Assurance";
                break;
            case "9":
                chart2lblname = "Relaxed";
                break;
        }
        abilitycode4.Add(new Paragraph(chart2lblname, FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.COURIER, new Color(0, 0, 0))));
        abilitycode4.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
        abilitycode4.VerticalAlignment = iTextSharp.text.Element.ALIGN_BOTTOM;
        abilitycode.AddCell(abilitycode4);

        Cell abilitycode5 = new Cell();
        switch (ds1.Tables[0].Rows[4][2].ToString())
        {
            case "1":
                chart2lblname = "Relationships";
                break;
            case "2":
                chart2lblname = "Emotional Stability";
                break;
            case "3":
                chart2lblname = "Assertiveness";
                break;
            case "4":
                chart2lblname = "Enthusiasm";
                break;
            case "5":
                chart2lblname = "Conscientious";
                break;
            case "6":
                chart2lblname = "Responsiveness";
                break;
            case "7":
                chart2lblname = "Tough Minded";
                break;
            case "8":
                chart2lblname = "Self Assurance";
                break;
            case "9":
                chart2lblname = "Relaxed";
                break;
        }
        abilitycode5.Add(new Paragraph(chart2lblname, FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.COURIER, new Color(0, 0, 0))));
        abilitycode5.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
        abilitycode5.VerticalAlignment = iTextSharp.text.Element.ALIGN_BOTTOM;
        abilitycode.AddCell(abilitycode5);

        Cell abilitycode6 = new Cell();
        switch (ds1.Tables[0].Rows[5][2].ToString())
        {
            case "1":
                chart2lblname = "Relationships";
                break;
            case "2":
                chart2lblname = "Emotional Stability";
                break;
            case "3":
                chart2lblname = "Assertiveness";
                break;
            case "4":
                chart2lblname = "Enthusiasm";
                break;
            case "5":
                chart2lblname = "Conscientious";
                break;
            case "6":
                chart2lblname = "Responsiveness";
                break;
            case "7":
                chart2lblname = "Tough Minded";
                break;
            case "8":
                chart2lblname = "Self Assurance";
                break;
            case "9":
                chart2lblname = "Relaxed";
                break;
        }


        abilitycode6.Add(new Paragraph(chart2lblname, FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.COURIER, new Color(0, 0, 0))));
        abilitycode6.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
        abilitycode6.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
        abilitycode.AddCell(abilitycode6);

        Cell abilitycode7 = new Cell();
        switch (ds1.Tables[0].Rows[6][2].ToString())
        {
            case "1":
                chart2lblname = "Relationships";
                break;
            case "2":
                chart2lblname = "Emotional Stability";
                break;
            case "3":
                chart2lblname = "Assertiveness";
                break;
            case "4":
                chart2lblname = "Enthusiasm";
                break;
            case "5":
                chart2lblname = "Conscientious";
                break;
            case "6":
                chart2lblname = "Responsiveness";
                break;
            case "7":
                chart2lblname = "Tough Minded";
                break;
            case "8":
                chart2lblname = "Self Assurance";
                break;
            case "9":
                chart2lblname = "Relaxed";
                break;
        }


        abilitycode7.Add(new Paragraph(chart2lblname, FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.COURIER, new Color(0, 0, 0))));
        abilitycode7.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
        abilitycode7.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
        abilitycode.AddCell(abilitycode7);


        Cell abilitycode8 = new Cell();
        switch (ds1.Tables[0].Rows[7][2].ToString())
        {
            case "1":
                chart2lblname = "Relationships";
                break;
            case "2":
                chart2lblname = "Emotional Stability";
                break;
            case "3":
                chart2lblname = "Assertiveness";
                break;
            case "4":
                chart2lblname = "Enthusiasm";
                break;
            case "5":
                chart2lblname = "Conscientious";
                break;
            case "6":
                chart2lblname = "Responsiveness";
                break;
            case "7":
                chart2lblname = "Tough Minded";
                break;
            case "8":
                chart2lblname = "Self Assurance";
                break;
            case "9":
                chart2lblname = "Relaxed";
                break;
        }


        abilitycode8.Add(new Paragraph(chart2lblname, FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.COURIER, new Color(0, 0, 0))));
        abilitycode8.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
        abilitycode8.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
        abilitycode.AddCell(abilitycode8);


        Cell abilitycode9 = new Cell();
        switch (ds1.Tables[0].Rows[8][2].ToString())
        {
            case "1":
                chart2lblname = "Relationships";
                break;
            case "2":
                chart2lblname = "Emotional Stability";
                break;
            case "3":
                chart2lblname = "Assertiveness";
                break;
            case "4":
                chart2lblname = "Enthusiasm";
                break;
            case "5":
                chart2lblname = "Conscientious";
                break;
            case "6":
                chart2lblname = "Responsiveness";
                break;
            case "7":
                chart2lblname = "Tough Minded";
                break;
            case "8":
                chart2lblname = "Self Assurance";
                break;
            case "9":
                chart2lblname = "Relaxed";
                break;
        }
        abilitycode9.Add(new Paragraph(chart2lblname, FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.COURIER, new Color(0, 0, 0))));
        abilitycode9.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
        abilitycode9.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
        abilitycode.AddCell(abilitycode9);


        Cell abilitycode10 = new Cell();
        abilitycode10.Add(new Paragraph("\n\n\n\n\n\n\n\n\n\n\n\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 9, Font.COURIER, new Color(0, 0, 0))));
        abilitycode10.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;
        abilitycode10.VerticalAlignment = iTextSharp.text.Element.ALIGN_MIDDLE;
        abilitycode.AddCell(abilitycode10);


        chartvaluecell1.Add(abilitycode);




        chartvalue.AddCell(chartvaluecell1);


        Cell chartvaluecell2 = new Cell();

        iTextSharp.text.Table chartvaluee = new iTextSharp.text.Table(1);
        chartvaluee.Alignment = 0;
        chartvaluee.Width = 100;
        // PDTopTable3.BackgroundColor = new Color(226, 226, 226);
        chartvaluee.DefaultCellBorder = 0;
        chartvaluee.Border = 0;


        float chvalue = (float)System.Convert.ToSingle(ds1.Tables[0].Rows[0][1].ToString());
        int intchvalue = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell1 = new Cell();
        chartvalueecell1.Add(new Paragraph("" + intchvalue.ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell1);

        chvalue = (float)System.Convert.ToSingle(ds1.Tables[0].Rows[1][1].ToString());
        int intchvalue1 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell2 = new Cell();
        chartvalueecell2.Add(new Paragraph(intchvalue1.ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell2);

        chvalue = (float)System.Convert.ToSingle(ds1.Tables[0].Rows[2][1].ToString());
        int intchvalue2 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell3 = new Cell();
        chartvalueecell3.Add(new Paragraph(intchvalue2.ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell3);

        chvalue = (float)System.Convert.ToSingle(ds1.Tables[0].Rows[3][1].ToString());
        int intchvalue3 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell4 = new Cell();
        chartvalueecell4.Add(new Paragraph(intchvalue3.ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell4);

        chvalue = (float)System.Convert.ToSingle(ds1.Tables[0].Rows[4][1].ToString());
        int intchvalue4 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell5 = new Cell();
        chartvalueecell5.Add(new Paragraph(intchvalue4.ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell5);

        chvalue = (float)System.Convert.ToSingle(ds1.Tables[0].Rows[5][1].ToString());
        int intchvalue5 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell6 = new Cell();
        chartvalueecell6.Add(new Paragraph(intchvalue5.ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell6);

        chvalue = (float)System.Convert.ToSingle(ds1.Tables[0].Rows[6][1].ToString());
        int intchvalue6 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell7 = new Cell();
        chartvalueecell7.Add(new Paragraph(intchvalue6.ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell7);

        chvalue = (float)System.Convert.ToSingle(ds1.Tables[0].Rows[7][1].ToString());
        int intchvalue7 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell8 = new Cell();
        chartvalueecell8.Add(new Paragraph(intchvalue7.ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell8);

        chvalue = (float)System.Convert.ToSingle(ds1.Tables[0].Rows[8][1].ToString());
        int intchvalue8 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell9 = new Cell();
        chartvalueecell9.Add(new Paragraph(intchvalue8.ToString(), FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell9);

        chartvaluecell2.Add(chartvaluee);
        chartvalue.AddCell(chartvaluecell2);
        doc.Add(chartvalue);


        iTextSharp.text.Image charthead = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/chart2head.png"));
        charthead.ScaleToFit(600f, 550f);
        charthead.SetAbsolutePosition(0, 810);
        doc.Add(charthead);

        iTextSharp.text.Image dischart = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/dischart2.png"));
        dischart.ScaleToFit(600f, 550f);
        dischart.SetAbsolutePosition(0, 343);
        doc.Add(dischart);



    }
    private void in1()
    {

        strcmd = "SELECT P_rating,rating,factor_no FROM tblKYCandFactors1 where c_id = '" + c_id + "'order by P_rating";
        //strcmd = "SELECT * FROM tbl_II_cand_factors where c_id = '" + c_id + "'order by factor_no";
        DataSet ds2 = clsdb_Xaction.ExecDataSet(strcmd);



        Chart2.TempDirectory = "~/images"; //Server.MapPath("~/images");
        Chart2.Debug = true;
        //Chart2.Palette = new Color[]{Color.FromArgb(49,255,49),Color.FromArgb(255,255,0),Color.FromArgb(255,99,49),Color.FromArgb(0,156,255)};

        Chart2.Type = ChartType.PiesNested;
        Chart2.Size = "2700x2350";
        Chart2.Title = "";
        Chart2.Mentor = false;
        Chart2.DefaultChartArea.TitleBox.Visible = false;
        Chart2.ChartArea.Visible = false;






        int a = 1;
        int b = 1;
        dotnetCHARTING.SeriesCollection SC = new dotnetCHARTING.SeriesCollection();

        /////// first series
        dotnetCHARTING.Series s = new dotnetCHARTING.Series("Series " + a.ToString());

        s.Palette = new System.Drawing.Color[] { System.Drawing.Color.LightBlue, System.Drawing.Color.White };
        dotnetCHARTING.Element e1 = new dotnetCHARTING.Element("Element " + b.ToString());
        e1.Outline.Width = 2;
        e1.Outline.Color = System.Drawing.Color.Black;
        e1.YValue = Convert.ToDouble(ds2.Tables[0].Rows[15][0].ToString().Trim());

        s.Elements.Add(e1);

        e1 = new dotnetCHARTING.Element("Element " + b.ToString());
        e1.Outline.Width = 2;
        e1.Outline.Color = System.Drawing.Color.Black;
        e1.YValue = 100 - Convert.ToDouble(ds2.Tables[0].Rows[15][0].ToString());
        s.Elements.Add(e1);

        SC.Add(s);


        /////// second series
        dotnetCHARTING.Series ss = new dotnetCHARTING.Series("Series " + "dd");
        ss.Palette = new System.Drawing.Color[] { System.Drawing.Color.LightBlue, System.Drawing.Color.White };

        dotnetCHARTING.Element e2 = new dotnetCHARTING.Element("Element " + "e1");
        e2.Outline.Width = 2;
        e2.Outline.Color = System.Drawing.Color.Black;
        e2.YValue = Convert.ToDouble(ds2.Tables[0].Rows[14][0].ToString());
        ss.Elements.Add(e2);


        e2 = new dotnetCHARTING.Element("Element " + "r");
        e2.Outline.Width = 2;
        e2.Outline.Color = System.Drawing.Color.Black;
        e2.YValue = 100 - Convert.ToDouble(ds2.Tables[0].Rows[14][0].ToString());
        ss.Elements.Add(e2);

        SC.Add(ss);

        /////// third series
        dotnetCHARTING.Series ss1 = new dotnetCHARTING.Series("Series " + "dd");
        ss1.Palette = new System.Drawing.Color[] { System.Drawing.Color.LightBlue, System.Drawing.Color.White };

        dotnetCHARTING.Element e3 = new dotnetCHARTING.Element("Element " + "e1");
        e3.Outline.Width = 2;
        e3.Outline.Color = System.Drawing.Color.Black;
        e3.YValue = Convert.ToDouble(ds2.Tables[0].Rows[13][0].ToString());
        ss1.Elements.Add(e3);


        e3 = new dotnetCHARTING.Element("Element " + "r");
        e3.Outline.Width = 2;
        e3.Outline.Color = System.Drawing.Color.Black;
        e3.YValue = 100 - Convert.ToDouble(ds2.Tables[0].Rows[13][0].ToString());
        ss1.Elements.Add(e3);

        SC.Add(ss1);


        /////// fourth series
        dotnetCHARTING.Series ss2 = new dotnetCHARTING.Series("Series " + "dd");
        ss2.Palette = new System.Drawing.Color[] { System.Drawing.Color.LightBlue, System.Drawing.Color.White };

        dotnetCHARTING.Element e4 = new dotnetCHARTING.Element("Element " + "e1");
        e4.Outline.Width = 2;
        e4.Outline.Color = System.Drawing.Color.Black;
        e4.YValue = Convert.ToDouble(ds2.Tables[0].Rows[12][0].ToString());
        ss2.Elements.Add(e4);


        e4 = new dotnetCHARTING.Element("Element " + "r");
        e4.Outline.Width = 2;
        e4.Outline.Color = System.Drawing.Color.Black;
        e4.YValue = 100 - Convert.ToDouble(ds2.Tables[0].Rows[12][0].ToString());
        ss2.Elements.Add(e4);

        SC.Add(ss2);


        /////// fifth series
        dotnetCHARTING.Series ss3 = new dotnetCHARTING.Series("Series " + "dd");
        ss3.Palette = new System.Drawing.Color[] { System.Drawing.Color.LightBlue, System.Drawing.Color.White };

        dotnetCHARTING.Element e5 = new dotnetCHARTING.Element("Element " + "e1");
        e5.Outline.Width = 2;
        e5.Outline.Color = System.Drawing.Color.Black;
        e5.YValue = Convert.ToDouble(ds2.Tables[0].Rows[11][0].ToString());
        ss3.Elements.Add(e5);


        e5 = new dotnetCHARTING.Element("Element " + "r");
        e5.Outline.Width = 2;
        e5.Outline.Color = System.Drawing.Color.Black;
        e5.YValue = 100 - Convert.ToDouble(ds2.Tables[0].Rows[11][0].ToString());
        ss3.Elements.Add(e5);

        SC.Add(ss3);


        /////// sixth series
        dotnetCHARTING.Series ss4 = new dotnetCHARTING.Series("Series " + "dd");
        ss4.Palette = new System.Drawing.Color[] { System.Drawing.Color.LightBlue, System.Drawing.Color.White };

        dotnetCHARTING.Element e6 = new dotnetCHARTING.Element("Element " + "e1");
        e6.Outline.Width = 2;
        e6.Outline.Color = System.Drawing.Color.Black;
        e6.YValue = Convert.ToDouble(ds2.Tables[0].Rows[10][0].ToString());
        ss4.Elements.Add(e6);


        e6 = new dotnetCHARTING.Element("Element " + "r");
        e6.Outline.Width = 2;
        e6.Outline.Color = System.Drawing.Color.Black;
        e6.YValue = 100 - Convert.ToDouble(ds2.Tables[0].Rows[10][0].ToString());
        ss4.Elements.Add(e6);

        SC.Add(ss4);

        /////// seventh series
        dotnetCHARTING.Series ss5 = new dotnetCHARTING.Series("Series " + "dd");
        ss5.Palette = new System.Drawing.Color[] { System.Drawing.Color.LightBlue, System.Drawing.Color.White };

        dotnetCHARTING.Element e7 = new dotnetCHARTING.Element("Element " + "e1");
        e7.Outline.Width = 2;
        e7.Outline.Color = System.Drawing.Color.Black;
        e7.YValue = Convert.ToDouble(ds2.Tables[0].Rows[9][0].ToString());
        ss5.Elements.Add(e7);


        e7 = new dotnetCHARTING.Element("Element " + "r");
        e7.Outline.Width = 2;
        e7.Outline.Color = System.Drawing.Color.Black;
        e7.YValue = 100 - Convert.ToDouble(ds2.Tables[0].Rows[9][0].ToString());
        ss5.Elements.Add(e7);

        SC.Add(ss5);

        /////// eightth series
        dotnetCHARTING.Series ss6 = new dotnetCHARTING.Series("Series " + "dd");
        ss6.Palette = new System.Drawing.Color[] { System.Drawing.Color.LightBlue, System.Drawing.Color.White };

        dotnetCHARTING.Element e8 = new dotnetCHARTING.Element("Element " + "e1");
        e8.Outline.Width = 2;
        e8.Outline.Color = System.Drawing.Color.Black;
        e8.YValue = Convert.ToDouble(ds2.Tables[0].Rows[8][0].ToString());
        ss6.Elements.Add(e8);


        e8 = new dotnetCHARTING.Element("Element " + "r");
        e8.Outline.Width = 2;
        e8.Outline.Color = System.Drawing.Color.Black;
        e8.YValue = 100 - Convert.ToDouble(ds2.Tables[0].Rows[8][0].ToString());
        ss6.Elements.Add(e8);

        SC.Add(ss6);


        /////// ninth series
        dotnetCHARTING.Series ss7 = new dotnetCHARTING.Series("Series " + "dd");
        ss7.Palette = new System.Drawing.Color[] { System.Drawing.Color.LightBlue, System.Drawing.Color.White };

        dotnetCHARTING.Element e9 = new dotnetCHARTING.Element("Element " + "e1");
        e9.Outline.Width = 2;
        e9.Outline.Color = System.Drawing.Color.Black;
        e9.YValue = Convert.ToDouble(ds2.Tables[0].Rows[7][0].ToString());
        ss7.Elements.Add(e9);


        e9 = new dotnetCHARTING.Element("Element " + "r");
        e9.Outline.Width = 2;
        e9.Outline.Color = System.Drawing.Color.Black;
        e9.YValue = 100 - Convert.ToDouble(ds2.Tables[0].Rows[7][0].ToString());
        ss7.Elements.Add(e9);

        SC.Add(ss7);



        /////// tenth series
        dotnetCHARTING.Series ss8 = new dotnetCHARTING.Series("Series " + "dd");
        ss8.Palette = new System.Drawing.Color[] { System.Drawing.Color.LightBlue, System.Drawing.Color.White };

        dotnetCHARTING.Element e10 = new dotnetCHARTING.Element("Element " + "e1");
        e10.Outline.Width = 2;
        e10.Outline.Color = System.Drawing.Color.Black;
        e10.YValue = Convert.ToDouble(ds2.Tables[0].Rows[6][0].ToString());
        ss8.Elements.Add(e10);


        e10 = new dotnetCHARTING.Element("Element " + "r");
        e10.Outline.Width = 2;
        e10.Outline.Color = System.Drawing.Color.Black;
        e10.YValue = 100 - Convert.ToDouble(ds2.Tables[0].Rows[6][0].ToString());
        ss8.Elements.Add(e10);

        SC.Add(ss8);


        /////// eleventh series
        dotnetCHARTING.Series ss9 = new dotnetCHARTING.Series("Series " + "dd");
        ss9.Palette = new System.Drawing.Color[] { System.Drawing.Color.LightBlue, System.Drawing.Color.White };

        dotnetCHARTING.Element e11 = new dotnetCHARTING.Element("Element " + "e1");
        e11.Outline.Width = 2;
        e11.Outline.Color = System.Drawing.Color.Black;
        e11.YValue = Convert.ToDouble(ds2.Tables[0].Rows[5][0].ToString());
        ss9.Elements.Add(e11);


        e11 = new dotnetCHARTING.Element("Element " + "r");
        e11.Outline.Width = 2;
        e11.Outline.Color = System.Drawing.Color.Black;
        e11.YValue = 100 - Convert.ToDouble(ds2.Tables[0].Rows[5][0].ToString());
        ss9.Elements.Add(e11);

        SC.Add(ss9);

        /////// twelwth series
        dotnetCHARTING.Series ss10 = new dotnetCHARTING.Series("Series " + "dd");
        ss10.Palette = new System.Drawing.Color[] { System.Drawing.Color.LightBlue, System.Drawing.Color.White };

        dotnetCHARTING.Element e12 = new dotnetCHARTING.Element("Element " + "e1");
        e12.Outline.Width = 2;
        e12.Outline.Color = System.Drawing.Color.Black;
        e12.YValue = Convert.ToDouble(ds2.Tables[0].Rows[4][0].ToString());
        ss10.Elements.Add(e12);


        e12 = new dotnetCHARTING.Element("Element " + "r");
        e12.Outline.Width = 2;
        e12.Outline.Color = System.Drawing.Color.Black;
        e12.YValue = 100 - Convert.ToDouble(ds2.Tables[0].Rows[4][0].ToString());
        ss10.Elements.Add(e12);

        SC.Add(ss10);


        /////// thrteenth series
        dotnetCHARTING.Series ss11 = new dotnetCHARTING.Series("Series " + "dd");
        ss11.Palette = new System.Drawing.Color[] { System.Drawing.Color.LightBlue, System.Drawing.Color.White };

        dotnetCHARTING.Element e13 = new dotnetCHARTING.Element("Element " + "e1");
        e13.Outline.Width = 2;
        e13.Outline.Color = System.Drawing.Color.Black;
        e13.YValue = Convert.ToDouble(ds2.Tables[0].Rows[3][0].ToString());
        ss11.Elements.Add(e13);

        e13 = new dotnetCHARTING.Element("Element " + "r");
        e13.Outline.Width = 2;
        e13.Outline.Color = System.Drawing.Color.Black;
        e13.YValue = 100 - Convert.ToDouble(ds2.Tables[0].Rows[3][0].ToString());
        ss11.Elements.Add(e13);

        SC.Add(ss11);

        /////// fourteenth series
        dotnetCHARTING.Series ss12 = new dotnetCHARTING.Series("Series " + "dd");
        ss12.Palette = new System.Drawing.Color[] { System.Drawing.Color.LightBlue, System.Drawing.Color.White };

        dotnetCHARTING.Element e14 = new dotnetCHARTING.Element("Element " + "e1");
        e14.Outline.Width = 2;
        e14.Outline.Color = System.Drawing.Color.Black;
        e14.YValue = Convert.ToDouble(ds2.Tables[0].Rows[2][0].ToString());
        ss12.Elements.Add(e14);


        e14 = new dotnetCHARTING.Element("Element " + "r");
        e14.Outline.Width = 2;
        e14.Outline.Color = System.Drawing.Color.Black;
        e14.YValue = 100 - Convert.ToDouble(ds2.Tables[0].Rows[2][0].ToString());
        ss12.Elements.Add(e14);

        SC.Add(ss12);


        /////// fifteenth series
        dotnetCHARTING.Series ss13 = new dotnetCHARTING.Series("Series " + "dd");
        ss13.Palette = new System.Drawing.Color[] { System.Drawing.Color.LightBlue, System.Drawing.Color.White };

        dotnetCHARTING.Element e15 = new dotnetCHARTING.Element("Element " + "e1");
        e15.Outline.Width = 2;
        e15.Outline.Color = System.Drawing.Color.Black;
        e15.YValue = Convert.ToDouble(ds2.Tables[0].Rows[1][0].ToString());
        ss13.Elements.Add(e15);


        e15 = new dotnetCHARTING.Element("Element " + "r");
        e15.Outline.Width = 2;
        e15.Outline.Color = System.Drawing.Color.Black;
        e15.YValue = 100 - Convert.ToDouble(ds2.Tables[0].Rows[1][0].ToString());
        ss13.Elements.Add(e15);

        SC.Add(ss13);


        /////// sixteenth series
        dotnetCHARTING.Series ss14 = new dotnetCHARTING.Series("Series " + "dd");
        ss14.Palette = new System.Drawing.Color[] { System.Drawing.Color.LightBlue, System.Drawing.Color.White };

        dotnetCHARTING.Element e16 = new dotnetCHARTING.Element("Element " + "e1");
        e16.Outline.Width = 2;
        e16.Outline.Color = System.Drawing.Color.Black;
        e16.YValue = Convert.ToDouble(ds2.Tables[0].Rows[0][0].ToString());
        ss14.Elements.Add(e16);


        e16 = new dotnetCHARTING.Element("Element " + "r");
        e16.Outline.Width = 2;
        e16.Outline.Color = System.Drawing.Color.Black;
        e16.YValue = 100 - Convert.ToDouble(ds2.Tables[0].Rows[0][0].ToString());
        ss14.Elements.Add(e16);

        SC.Add(ss14);

        /////// midddel series
        dotnetCHARTING.Series ss15 = new dotnetCHARTING.Series("Series " + "dd");
        ss15.Palette = new System.Drawing.Color[] { System.Drawing.Color.White, System.Drawing.Color.White };

        dotnetCHARTING.Element e17 = new dotnetCHARTING.Element("Element " + "e1");
        e17.YValue = 100;
        ss15.Elements.Add(e17);


        e17 = new dotnetCHARTING.Element("Element " + "r");
        e17.YValue = 0;
        ss15.Elements.Add(e17);

        SC.Add(ss15);

        //add all series to Chart2
        Chart2.SeriesCollection.Add(SC);
        Chart2.ImageFormat = dotnetCHARTING.ImageFormat.Jpg;

        string fileName = Chart2.FileManager.SaveImage();

        iTextSharp.text.Image abcharr = iTextSharp.text.Image.GetInstance(Server.MapPath(fileName));
        //jpeg.ScalePercent(35f);
        abcharr.ScaleToFit(550f, 500f);
        // jpeg.SpacingAfter = -50f;
        abcharr.SetAbsolutePosition(-50, 230);
        doc.Add(abcharr);


        iTextSharp.text.Image patch = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/patch1.png"));
        patch.ScaleToFit(600f, 550f);
        patch.SetAbsolutePosition(0, 200);
        doc.Add(patch);


        iTextSharp.text.Image chart1lable = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/chart3lable1.png"));
        chart1lable.ScaleToFit(810f, 710f);
        chart1lable.SetAbsolutePosition(230, 70);
        doc.Add(chart1lable);

        iTextSharp.text.Image charthead = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/chart3head.png"));
        charthead.ScaleToFit(600f, 550f);
        charthead.SetAbsolutePosition(0, 810);
        doc.Add(charthead);



        iTextSharp.text.Table chartvalue = new iTextSharp.text.Table(2);
        chartvalue.Alignment = 0;
        chartvalue.Width = 190;
        // PDTopTable3.BackgroundColor = new Color(226, 226, 226);
        chartvalue.DefaultCellBorder = 0;
        chartvalue.Border = 0;

        Cell chartvaluecell1 = new Cell();
        chartvaluecell1.Add(new Paragraph("", FontFactory.GetFont(FontFactory.HELVETICA, 10, Font.BOLD)));
        chartvalue.AddCell(chartvaluecell1);

        Cell chartvaluecell2 = new Cell();

        iTextSharp.text.Table chartvaluee = new iTextSharp.text.Table(1);
        chartvaluee.Alignment = 0;
        chartvaluee.Width = 100;
        // PDTopTable3.BackgroundColor = new Color(226, 226, 226);
        chartvaluee.DefaultCellBorder = 0;
        chartvaluee.Border = 0;


        float chvalue = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[0][0].ToString());
        int intchvalue = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell1 = new Cell();
        chartvalueecell1.Add(new Paragraph("" + intchvalue.ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell1);

        chvalue = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[1][0].ToString());
        int intchvalue1 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell2 = new Cell();
        chartvalueecell2.Add(new Paragraph(intchvalue1.ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell2);

        chvalue = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[2][0].ToString());
        int intchvalue2 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell3 = new Cell();
        chartvalueecell3.Add(new Paragraph(intchvalue2.ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell3);

        chvalue = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[3][0].ToString());
        int intchvalue3 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell4 = new Cell();
        chartvalueecell4.Add(new Paragraph(intchvalue3.ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell4);

        chvalue = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[4][0].ToString());
        int intchvalue4 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell5 = new Cell();
        chartvalueecell5.Add(new Paragraph(intchvalue4.ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell5);

        chvalue = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[5][0].ToString());
        int intchvalue5 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell6 = new Cell();
        chartvalueecell6.Add(new Paragraph(intchvalue5.ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell6);

        chvalue = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[6][0].ToString());
        int intchvalue6 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell7 = new Cell();
        chartvalueecell7.Add(new Paragraph(intchvalue6.ToString() + "%\n\n\n\n\n\n\n\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell7);

        chvalue = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[7][0].ToString());
        int intchvalue7 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell8 = new Cell();
        chartvalueecell8.Add(new Paragraph(intchvalue7.ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell8);

        chvalue = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[8][0].ToString());
        int intchvalue8 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell9 = new Cell();
        chartvalueecell9.Add(new Paragraph(intchvalue8.ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell9);


        chvalue = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[9][0].ToString());
        int intchvalue9 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell10 = new Cell();
        chartvalueecell10.Add(new Paragraph(intchvalue9.ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell10);

        chvalue = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[10][0].ToString());
        int intchvalue10 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell11 = new Cell();
        chartvalueecell11.Add(new Paragraph(intchvalue10.ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell11);

        chvalue = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[11][0].ToString());
        int intchvalue11 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell12 = new Cell();
        chartvalueecell12.Add(new Paragraph(intchvalue11.ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell12);


        chvalue = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[12][0].ToString());
        int intchvalue12 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell13 = new Cell();
        chartvalueecell13.Add(new Paragraph(intchvalue12.ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell13);

        chvalue = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[13][0].ToString());
        int intchvalue13 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell14 = new Cell();
        chartvalueecell14.Add(new Paragraph(intchvalue13.ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell14);

        chvalue = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[14][0].ToString());
        int intchvalue14 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell15 = new Cell();
        chartvalueecell15.Add(new Paragraph(intchvalue14.ToString() + "%", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell15);


        chvalue = (float)System.Convert.ToSingle(ds2.Tables[0].Rows[15][0].ToString());
        int intchvalue15 = (int)Math.Ceiling(chvalue);
        Cell chartvalueecell16 = new Cell();
        chartvalueecell16.Add(new Paragraph(intchvalue15.ToString() + "%\n\n\n\n\n\n\n\n\n\n", FontFactory.GetFont(FontFactory.HELVETICA, 20, Font.BOLD, new Color(77, 184, 219))));
        chartvaluee.AddCell(chartvalueecell16);


        chartvaluecell2.Add(chartvaluee);
        chartvalue.AddCell(chartvaluecell2);
        doc.Add(chartvalue);


        iTextSharp.text.Image dischart = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/dischart3.png"));
        dischart.ScaleToFit(600f, 550f);
        dischart.SetAbsolutePosition(0, 600);
        doc.Add(dischart);




    }
    private void in1bar()
    {
        String StrChartPath2 = Server.MapPath((".") + "/Reports_graph/" + candidate_name + "2.png");
        ////////////////////////////////.NET CHART 3////////////////////////////////////////////

        #region Radar Chart

        AbilityBarChart.Visible = false;

        //strcmd = "SELECT P_rating,rating,factor_no FROM tbl_II_cand_factors where c_id = '" + c_id + "'order by P_rating desc";
          strcmd = "SELECT P_rating,rating,tblInterestFactors.shortname,tblInterestCandFactors.factor_no FROM tblInterestCandFactors,tblInterestFactors where tblInterestCandFactors.factor_no=tblInterestFactors.factor_no and c_id = '" + c_id + "' order by P_rating desc";
       // strcmd = "SELECT P_rating,rating,tblInterestFactors.shortname,tblKYCandFactors1.factor_no FROM tblKYCandFactors1, tblInterestFactors where tblKYCandFactors1.factor_no = tblInterestFactors.factor_no and c_id = '" + c_id + "' order by P_rating desc";
        DataSet ds2 = clsdb_Xaction.ExecDataSet(strcmd);

        // String StrSql = "SELECT ability_code, P_rating FROM (select distinct c_id,test_id,ability_code,P_rating,rating from tbl_candidate_test_results where c_id = '" + c_id + "') as x where c_id = '" + c_id + "'order by test_id";
        // DataSet dsChart = clsdb_Xaction.ExecDataSet(StrSql);
        // Populate series data
        double[] yValues2 = { Convert.ToDouble(ds2.Tables[0].Rows[0][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[1][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[2][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[3][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[4][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[5][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[6][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[7][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[8][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[9][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[10][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[11][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[12][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[13][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[14][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[15][0].ToString()) };
       // double[] yValues2 = { Convert.ToDouble(ds2.Tables[0].Rows[0][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[1][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[2][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[3][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[4][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[5][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[6][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[7][0].ToString()), Convert.ToDouble(ds2.Tables[0].Rows[8][0].ToString()) };
        //string[] xValues2 = { "M", "T", "C", "BC", "S", "Me", "P", "A", "O", "SS", "Te", "Ar", "Ad", "Cl", "L", "Mu" };
        string[] xValues2 = { ds2.Tables[0].Rows[0][2].ToString(), ds2.Tables[0].Rows[1][2].ToString(), ds2.Tables[0].Rows[2][2].ToString(), ds2.Tables[0].Rows[3][2].ToString(), ds2.Tables[0].Rows[4][2].ToString(), ds2.Tables[0].Rows[5][2].ToString(), ds2.Tables[0].Rows[6][2].ToString(), ds2.Tables[0].Rows[7][2].ToString(), ds2.Tables[0].Rows[8][2].ToString(), ds2.Tables[0].Rows[9][2].ToString(), ds2.Tables[0].Rows[10][2].ToString(), ds2.Tables[0].Rows[11][2].ToString(), ds2.Tables[0].Rows[12][2].ToString(), ds2.Tables[0].Rows[13][2].ToString(), ds2.Tables[0].Rows[14][2].ToString(), ds2.Tables[0].Rows[15][2].ToString() };
       // string[] xValues2 = { ds2.Tables[0].Rows[0][2].ToString(), ds2.Tables[0].Rows[1][2].ToString(), ds2.Tables[0].Rows[2][2].ToString(), ds2.Tables[0].Rows[3][2].ToString(), ds2.Tables[0].Rows[4][2].ToString(), ds2.Tables[0].Rows[5][2].ToString(), ds2.Tables[0].Rows[6][2].ToString(), ds2.Tables[0].Rows[7][2].ToString(), ds2.Tables[0].Rows[8][2].ToString() };
        //string[] xValues2 = { "M", "T", "C", "BC", "S", "Me", "P", "A" };
        AbilityBarChart.Series["Series1"].Points.DataBindXY(xValues2, yValues2);

        AbilityBarChart.ChartAreas["ChartArea1"].AxisX.Maximum = 17;

        AbilityBarChart.ChartAreas["ChartArea1"].AxisX.Interval = 1;
        AbilityBarChart.Series["Series1"].Points[0].Color = System.Drawing.Color.FromArgb(16, 40, 82);
        AbilityBarChart.Series["Series1"].Points[1].Color = System.Drawing.Color.FromArgb(18, 47, 95);
        AbilityBarChart.Series["Series1"].Points[2].Color = System.Drawing.Color.FromArgb(21, 55, 111);
        AbilityBarChart.Series["Series1"].Points[3].Color = System.Drawing.Color.FromArgb(23, 62, 125);
        AbilityBarChart.Series["Series1"].Points[4].Color = System.Drawing.Color.FromArgb(27, 69, 139);
        AbilityBarChart.Series["Series1"].Points[5].Color = System.Drawing.Color.FromArgb(30, 77, 153);
        AbilityBarChart.Series["Series1"].Points[6].Color = System.Drawing.Color.FromArgb(33, 86, 173);
        AbilityBarChart.Series["Series1"].Points[7].Color = System.Drawing.Color.FromArgb(38, 100, 202);
        AbilityBarChart.Series["Series1"].Points[8].Color = System.Drawing.Color.FromArgb(47, 109, 215);
        AbilityBarChart.Series["Series1"].Points[9].Color = System.Drawing.Color.FromArgb(69, 125, 220);
        AbilityBarChart.Series["Series1"].Points[10].Color = System.Drawing.Color.FromArgb(87, 138, 223);
        AbilityBarChart.Series["Series1"].Points[11].Color = System.Drawing.Color.FromArgb(111, 154, 227);
        AbilityBarChart.Series["Series1"].Points[12].Color = System.Drawing.Color.FromArgb(132, 169, 232);
        AbilityBarChart.Series["Series1"].Points[13].Color = System.Drawing.Color.FromArgb(150, 182, 235);
        AbilityBarChart.Series["Series1"].Points[14].Color = System.Drawing.Color.FromArgb(168, 194, 238);
        AbilityBarChart.Series["Series1"].Points[15].Color = System.Drawing.Color.FromArgb(194, 213, 243);

        /// to set randomly color

        // Random Random = new Random();
        // foreach (var item in AbilityBarChart.Series["Series1"].Points)
        //{
        //    System.Drawing.Color c = System.Drawing.Color.FromArgb(Random.Next(0, 255), Random.Next(0, 255), Random.Next(0, 255));
        //    item.Color = c;
        // }

        // Set radar chart type
        AbilityBarChart.Series["Series1"].ChartType = System.Web.UI.DataVisualization.Charting.SeriesChartType.RangeColumn;

        // Set radar chart style (Area, Line or Marker)
        AbilityBarChart.Series["Series1"]["RadarDrawingStyle"] = "Area";

        // Set circular area drawing style (Circle or Polygon)
        AbilityBarChart.Series["Series1"]["AreaDrawingStyle"] = "Circle";

        // Set labels style (Auto, Horizontal, Circular or Radial)
        AbilityBarChart.Series["Series1"]["CircularLabelsStyle"] = "Horizontal";

        // Show as 3D
        //AbilityBarChart.ChartAreas["ChartArea1"].Area3DStyle.Enable3D = true;

        AbilityBarChart.Width = 550;
        AbilityBarChart.Height = 250;

        //for saving image
        AbilityBarChart.SaveImage(Server.MapPath("./Reports_graph/" + candidate_name + "2.png"), System.Web.UI.DataVisualization.Charting.ChartImageFormat.Png);
        # endregion

        ////////////////////////////////////////////////////////////////////////////////////////
        iTextSharp.text.Image png3 = iTextSharp.text.Image.GetInstance(@StrChartPath2);

        doc.Add(png3);

        iTextSharp.text.Image charthead = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/chart3head.png"));
        charthead.ScaleToFit(600f, 550f);
        charthead.SetAbsolutePosition(0, 810);
        doc.Add(charthead);

        iTextSharp.text.Image dischart = iTextSharp.text.Image.GetInstance(Server.MapPath("~/images/dischart3.png"));
        dischart.ScaleToFit(600f, 550f);
        dischart.SetAbsolutePosition(0, 405);
        doc.Add(dischart);

    }

    private void in1bargoogle()
    {
        //strcmd = "SELECT P_rating,rating FROM tbl_II_cand_factors where c_id = '" + c_id + "'order by factor_no";
        //DataSet ds2 = clsdb_Xaction.ExecDataSet(strcmd);

        strcmd = "SELECT P_rating,rating FROM tblInterestCandFactors where c_id = '" + c_id + "'order by factor_no";
        DataSet ds2 = clsdb_Xaction.ExecDataSet(strcmd);

        //strdata2 = ds2.Tables[0].Rows[0][0].ToString() + "," + ds2.Tables[0].Rows[1][0].ToString() + "," + ds2.Tables[0].Rows[2][0].ToString();
        //strdata2 += "," + ds2.Tables[0].Rows[3][0].ToString() + "," + ds2.Tables[0].Rows[4][0].ToString() + "," + ds2.Tables[0].Rows[5][0].ToString();
        //strdata2 += "," + ds2.Tables[0].Rows[6][0].ToString() + "," + ds2.Tables[0].Rows[7][0].ToString() + "," + ds2.Tables[0].Rows[8][0].ToString();
        //strdata2 += "," + ds2.Tables[0].Rows[9][0].ToString() + "," + ds2.Tables[0].Rows[10][0].ToString() + "," + ds2.Tables[0].Rows[11][0].ToString();
        //strdata2 += "," + ds2.Tables[0].Rows[12][0].ToString() + "," + ds2.Tables[0].Rows[13][0].ToString() + "," + ds2.Tables[0].Rows[14][0].ToString();
        //strdata2 += "," + ds2.Tables[0].Rows[15][0].ToString();

        strdata2 = ds2.Tables[0].Rows[0][0].ToString() + "," + ds2.Tables[0].Rows[1][0].ToString() + "," + ds2.Tables[0].Rows[2][0].ToString();
        strdata2 += "," + ds2.Tables[0].Rows[3][0].ToString() + "," + ds2.Tables[0].Rows[4][0].ToString() + "," + ds2.Tables[0].Rows[5][0].ToString();
        strdata2 += "," + ds2.Tables[0].Rows[6][0].ToString() + "," + ds2.Tables[0].Rows[7][0].ToString() + "," + ds2.Tables[0].Rows[8][0].ToString();
        strdata2 += "," + ds2.Tables[0].Rows[9][0].ToString() + "," + ds2.Tables[0].Rows[10][0].ToString() + "," + ds2.Tables[0].Rows[11][0].ToString();
        strdata2 += "," + ds2.Tables[0].Rows[12][0].ToString() + "," + ds2.Tables[0].Rows[13][0].ToString() + "," + ds2.Tables[0].Rows[14][0].ToString();
        strdata2 += "," + ds2.Tables[0].Rows[15][0].ToString();

        // iTextSharp.text.Image png3 = iTextSharp.text.Image.GetInstance("http://chart.apis.google.com/chart?cht=rs&chd=t:" + strdata2 + "&chs=300x300&chl=M|T|C|BC|S|Me|P|A|O|SS|Te|Ar|Ad|Cl|L|Mu&chco=000000&chls=2.0,4.0,0.0&chm=B,00000080,0,1.0,5.0|d,000000,0,0.0,10.0|d,000000,0,1.0,10.0|d,000000,0,2.0,10.0|d,000000,0,3.0,10.0|d,000000,0,4.0,10.0|d,000000,0,5.0,10.0|d,000000,0,6.0,10.0|d,000000,0,7.0,10.0|d,000000,0,8.0,10.0|d,000000,0,9.0,10.0|d,000000,0,10.0,10.0|d,000000,0,11.0,10.0|d,000000,0,12.0,10.0|d,000000,0,13.0,10.0|d,000000,0,14.0,10.0|d,000000,0,15.0,10.0&chxt=r&chxr=2,0,100");
        iTextSharp.text.Image png22 = iTextSharp.text.Image.GetInstance("http://chart.apis.google.com/chart?cht=bhs&chco=4D89F9,C6D9FD&chds=0,160&chd=t:" + strdata2 + "&chs=300x300&chl=M|T|C|BC|S|Me|P|A|O|SS|Te|Ar|Ad|Cl|L|Mu&chco=000000&chls=2.0,4.0,0.0&chm=B,00000080,0,1.0,5.0|d,000000,0,0.0,5.0|d,000000,0,1.0,5.0|d,000000,0,2.0,5.0|d,000000,0,3.0,5.0|d,000000,0,4.0,5.0|d,000000,0,5.0,5.0|d,000000,0,6.0,5.0|d,000000,0,7.0,5.0|d,000000,0,8.0,5.0|d,000000,0,9.0,5.0|d,000000,0,10.0,5.0|d,000000,0,11.0,5.0|d,000000,0,12.0,5.0|d,000000,0,13.0,5.0|d,000000,0,14.0,5.0|d,000000,0,15.0,5.0&chxt=r&chxr=2,0,160");
        doc.Add(png22);
    }

    private void Add_candidate_career_By_RAPD()
    {
        try
        {
            string strcmd = "select * FROM tblCareerRAPD where id=" + c_id;
            DataSet ds = new DataSet();
            ds = clsdal.ExecDataSet(strcmd);

            if (ds.Tables[0].Rows.Count == 0)
            {
                string sql_qry = "sp_career_by_RAPD";
                int status = 2; // Read Candidate RAPD
                SqlDataReader dr = clsdal.ExecDataReader(sql_qry, status, c_id);
                while (dr.Read())
                {
                    int career_id = Convert.ToInt32(dr.GetValue(0));
                    int cadidate_id = Convert.ToInt32(dr.GetValue(1));

                    strcmd = "insert into tbl_candidate_career_by_RAPD (c_id, ca_id)values ('" + cadidate_id + "','" + career_id + "' )";
                    int i = clsdal.ExecNonQuery(strcmd);
                    if (i > 0)
                    {

                    }
                }
                dr.Close();
                dr.Dispose();
            }
            else
            {

            }
        }
        catch (Exception ex)
        {
            ex.ToString();
        }
    }
    private void Add_candidate_career_By_Ability()
    {
        try
        {
            string strcmd = "select * FROM tbl_candidate_career_by_Ability where c_id=" + c_id;
            DataSet ds = new DataSet();
            ds = clsdal.ExecDataSet(strcmd);

            if (ds.Tables[0].Rows.Count == 0)
            {
                string sql_qry = "sp_career_by_RAPD";
                int status = 3; // Read Candidate Ability
                SqlDataReader dr = clsdal.ExecDataReader(sql_qry, status, c_id);
                while (dr.Read())
                {

                    int career_id = Convert.ToInt32(dr.GetValue(0));

                    strcmd = "insert into tbl_candidate_career_by_Ability (c_id, ca_id)values ('" + c_id + "','" + career_id + "' )";
                    int i = clsdal.ExecNonQuery(strcmd);
                    if (i > 0)
                    {

                    }
                }
                dr.Close();
                dr.Dispose();
            }
            else
            {

            }
        }
        catch (Exception ex)
        {
            ex.ToString();
        }
    }

    private DataSet Add_candidate_career_By_Interest()
    {
        string sql_qry = "sp_career_by_RAPD";
        int status = 4; // Read Candidate Interest
        DataSet ds_candidate_career_By_Interest = clsdal.ExecDataSet(sql_qry, status, c_id);
        return ds_candidate_career_By_Interest;
    }

    private void Add_candidate_career_By_P_A_I()
    {
        try
        {
            string strcmd = "select * FROM tbl_candidate_career_by_Interest where c_id=" + c_id;
            DataSet ds = new DataSet();
            ds = clsdal.ExecDataSet(strcmd);

            if (ds.Tables[0].Rows.Count == 0)
            {
                string sql_qry = "sp_career_by_RAPD";
                int status = 4; // Read Candidate Interest
                SqlDataReader dr = clsdal.ExecDataReader(sql_qry, status, c_id);
                while (dr.Read())
                {

                    int career_id = Convert.ToInt32(dr.GetValue(0));

                    strcmd = "insert into tbl_candidate_career_by_Interest (c_id, ca_id)values ('" + c_id + "','" + career_id + "' )";
                    int i = clsdal.ExecNonQuery(strcmd);
                    if (i > 0)
                    {

                    }
                }
                dr.Close();
                dr.Dispose();
            }
            else
            {

            }
        }
        catch (Exception ex)
        {

        }
    }

}