<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lbContinueResource1.Text" xml:space="preserve">
    <value>Click to Continue....</value>
  </data>
  <data name="p_by_lblResource1.Text" xml:space="preserve">
    <value>Powered By dheya.com</value>
  </data>
  <data name="PageResource1.Title" xml:space="preserve">
    <value>UNDERSTANDING AND DEVELOPING SELF</value>
  </data>
  <data name="pd_hd_lblResource1.Text" xml:space="preserve">
    <value>Behavioural Profiller Test Details</value>
  </data>
  <data name="pd_ins_msg_lblResource1.Text" xml:space="preserve">
    <value>&lt;strong&gt;Do not skip any questions.&lt;/strong&gt;</value>
  </data>
  <data name="pd_ls_hd_msg_lblResource1.Text" xml:space="preserve">
    <value>Least Suitable</value>
  </data>
  <data name="pd_ms_hd_lblResource1.Text" xml:space="preserve">
    <value>Most Suitable</value>
  </data>
  <data name="pd_tst_ins_msg_lblResource1.Text" xml:space="preserve">
    <value>The questionnaire you are about to complete is not a test. You cannot 'pass' or 'fail', and there are no right or wrong answers.&lt;br /&gt;&lt;br /&gt;Avoid trying to predict or infer what the questions are about, but be sure to consider all the alternatives fully before answering. If two or more statements describe you closely, take time to consider which one describes your current approach most accurately.&lt;br /&gt;&lt;br /&gt;While answering the questions, think about the ways you tend to act in a working situation.&lt;br /&gt;&lt;br /&gt;Work quickly though the questionnaire; as a guideline, it should take you no longer than ten minutes to complete.&lt;br /&gt;&lt;br /&gt;From each set of four phrases in the questionnaire, choose the phrase that describes you most closely, and the phrase that describes you least closely.&lt;br /&gt;&lt;br /&gt;Indicate your answers by checking the appropriate MOST and LEAST button, as shown in the example below.&lt;br /&gt;&lt;br /&gt;You must choose one button from each column in each question.&lt;br /&gt;&lt;/strong&gt;&lt;br /&gt;&lt;strong&gt;Example Q.&amp;nbsp;&lt;br /&gt;&lt;/strong&gt;</value>
  </data>
  <data name="pd_tst_no_lblResource1.Text" xml:space="preserve">
    <value>Following are the instructions of Test No </value>
  </data>
  <data name="pd_wlcm_lblResource1.Text" xml:space="preserve">
    <value>Welcome&amp;#33; &amp;nbsp;</value>
  </data>
  <data name="lblassessment.Text" xml:space="preserve">
    <value>Assessment Portal</value>
  </data>
</root>